{"version":3,"sources":["webpack:///./src/views/Contacts.vue?c115","webpack:///./src/mixins/mergeDuplicatesMixin.js","webpack:///./src/graphql/querys/contactsQuery.js","webpack:///./src/graphql/querys/companiesQuery.js","webpack:///./src/views/Contacts.vue?9bce","webpack:///src/views/Contacts.vue","webpack:///./src/views/Contacts.vue?adfb","webpack:///./src/views/Contacts.vue?3652"],"names":["mergeDuplicatesMixin","data","modalMergeDuplicates","isOpen","isLoading","duplicateList","watch","this","methods","modalHandlerMergeDuplicates","correctDuplicate","type","updateData","snackbarHandler","color","text","name","getDuplicateContacts","getDuplicateCompanies","$apollo","mutate","mutation","GET_DUPLICATE_CONTACTS","then","duplicateContacts","catch","error","modalHandlerError","GET_DUPLICATE_COMPANIES","duplicateCompanies","GET_CONTACTS","gql","GET_SEARCH_CONTACTS","GET_CONTACT","GET_CONTACT_HISTORY","GET_CONTACTS_TO_EMAIL","GET_CONTACTS_TO_INVITES","GET_COMPANIES","GET_SEARCH_COMPANIES","GET_COMPANY","GET_COMPANY_HISTORY","GET_COMPANIES_TO_ACTIVITY","render","_vm","_h","$createElement","_c","_self","staticStyle","attrs","staticClass","_v","_s","title","$route","query","filterId","recyclebin","_e","model","value","callback","$$v","searchContact","expression","formatHeaders","on","$event","updateSelectContacts","updateHeaders","updateContactsShow","updateInformationBar","scopedSlots","_u","key","fn","ref","onMenu","onTooltip","_g","Object","assign","viewInfo","headers","getForm","$can","FUSE","PERMISSIONS_CONTACTS","EXPORT","modalHandlerExport","$router","push","path","BULK_DELETE","PERMISSIONS_ADMIN","_b","directives","rawName","contactsSelected","length","trashContactConfirmation","deleteContactConfirmation","restoreContactsConfirmation","isOpenMenuOwner","typeItem","changeOwnerSuccess","changeOwnerError","TO_ASSIGN","attrsTooltip","proxy","customFilters","actionsHandler","filterSelected","isFilterSelected","modalHandlerContact","IMPORT","modalHandlerImport","goToAllContacts","informationBar","totalCount","contactsWithOpenDeals","contactsWithWonDeals","modalError","modalDelete","modalHandlerDelete","confirmHandler","modalRestore","restoreContacts","modalHandlerRestore","modalContact","inputsForm","createContact","modalFilter","outDataFilterHandler","modalHandlerFilter","contacts","modalExport","modalImport","snackbar","$set","staticRenderFns","mixins","components","ContactsDataTable","ModalContact","ModalFilter","MenuFilters","ModalContactsDuplicate","ListHeaders","ChangeOwner","CREATE","DELETE","listItems","inputs","orderBy","nextElement","computed","message","map","nameItem","infoDelete","deleteContacts","ability","trashContacts","infoRestore","apollo","fetchPolicy","variables","component","VBtn","VCol","VContainer","VIcon","VList","VListItem","VMenu","VRow","VSnackbar","VTextField","VTooltip"],"mappings":"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","file":"js/chunk-608794f3.4a9d7364.js","sourcesContent":["export * from \"-!../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Contacts.vue?vue&type=style&index=0&id=3e4f3868&lang=scss&scoped=true&\"","import { GET_DUPLICATE_CONTACTS } from '@/graphql/querys/contactsQuery';\nimport { GET_DUPLICATE_COMPANIES } from '@/graphql/querys/companiesQuery';\n\nexport const mergeDuplicatesMixin = {\n  data() {\n    return {\n      modalMergeDuplicates: {\n        isOpen: false,\n        isLoading: false,\n      },\n      duplicateList: [],\n    };\n  },\n  watch: {\n    modalMergeDuplicates({ isOpen }) {\n      if (!isOpen) this.duplicateList = [];\n    },\n  },\n  methods: {\n    modalHandlerMergeDuplicates({ isOpen, isLoading }) {\n      this.modalMergeDuplicates = { isOpen, isLoading };\n    },\n    correctDuplicate(type, data) {\n      this.updateData = true;\n      this.snackbarHandler({\n        isOpen: true,\n        color: 'success',\n        text: `${type === 'CONTACT' ? 'El contacto' : 'La empresa'} \n        ${data.name} se ha fusionado correctamente`,\n      });\n      if (type === 'CONTACT') {\n        this.getDuplicateContacts();\n      } else {\n        this.getDuplicateCompanies();\n      }\n    },\n    getDuplicateContacts() {\n      this.modalHandlerMergeDuplicates({\n        isOpen: true,\n        isLoading: true,\n      });\n      this.$apollo\n        .mutate({\n          mutation: GET_DUPLICATE_CONTACTS,\n        })\n        .then(({ data: { duplicateContacts } }) => {\n          this.duplicateList = duplicateContacts;\n          this.modalHandlerMergeDuplicates({\n            isOpen: true,\n            isLoading: false,\n          });\n        })\n        .catch(() => {\n          const error =\n            'No se ha podido obtener los contactos duplicados, intente de nuevo o contacte a soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    getDuplicateCompanies() {\n      this.modalHandlerMergeDuplicates({\n        isOpen: true,\n        isLoading: true,\n      });\n      this.$apollo\n        .mutate({\n          mutation: GET_DUPLICATE_COMPANIES,\n        })\n        .then(({ data: { duplicateCompanies } }) => {\n          this.duplicateList = duplicateCompanies;\n          this.modalHandlerMergeDuplicates({\n            isOpen: true,\n            isLoading: false,\n          });\n        })\n        .catch(() => {\n          const error =\n            'No se ha podido obtener las empresas duplicadas, intente de nuevo o contacte a soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n  },\n};\n","import gql from 'graphql-tag';\n\nexport const GET_CONTACTS = gql`\n  query getContacts($filters: FilterContacts, $importId: ID) {\n    contacts(filters: $filters, importId: $importId) {\n      count\n      informationBar {\n        totalCount\n        contactsWithOpenDeals\n        contactsWithWonDeals\n      }\n      list {\n        id\n        name\n        email\n        phones\n        isClient\n        socialMedias\n        birthday\n        createdAt\n        updatedAt\n        customForms\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        contactCounts {\n          openDeals\n          closedDeals\n          lostDeals\n          wonDeals\n          emailMessages\n          totalActivities\n          doneActivities\n          undoneActivities\n          files\n          notes\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        tags {\n          id\n          name\n          color\n          order\n        }\n        companies {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_SEARCH_CONTACTS = gql`\n  query getContacts($filters: FilterContacts, $importId: ID) {\n    searchContacts: contacts(filters: $filters, importId: $importId) {\n      list {\n        id\n        name\n        companies {\n          id\n          name\n        }\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACT = gql`\n  query GetContact($contactId: ID!) {\n    contact(contactId: $contactId) {\n      id\n      name\n      email\n      phones\n      isClient\n      socialMedias\n      birthday\n      customForms\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n        }\n      }\n      enterprise {\n        id\n        name\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      companies {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      deals {\n        id\n        title\n        value\n        status\n        contact {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        stage {\n          id\n        }\n        pipeline {\n          id\n          stages {\n            id\n          }\n        }\n        owner {\n          id\n        }\n      }\n      createdAt\n      isDelete\n    }\n  }\n`;\n\nexport const GET_CONTACT_HISTORY = gql`\n  query GetContactHistory($contactId: ID!) {\n    contactHistory: contact(contactId: $contactId) {\n      id\n      name\n      email\n      files\n      import {\n        id\n      }\n      activityEmailStream {\n        id\n        flow\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n      }\n      activityStream {\n        id\n        flow\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        companies {\n          id\n          name\n        }\n        deals {\n          id\n          title\n        }\n        customs {\n          id\n          label\n        }\n      }\n      notes {\n        id\n        content\n        type\n        createdAt\n        userTags {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        comments {\n          id\n          comment\n          createdAt\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n        }\n      }\n      activities {\n        id\n        title\n        status\n        start\n        end\n        location\n        description\n        deal {\n          id\n          title\n        }\n        contacts {\n          id\n          name\n        }\n        companies {\n          id\n          name\n        }\n        type {\n          id\n          name\n          color\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        notes {\n          id\n          content\n          type\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n          comments {\n            id\n            comment\n            userTags {\n              id\n            }\n            createdBy {\n              id\n              user {\n                id\n                name\n                lastName\n              }\n            }\n            createdAt\n          }\n        }\n        completedDate\n        createdAt\n        isAllDay\n        guests\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACTS_TO_EMAIL = gql`\n  query getContactsToEmail($filters: FilterContacts) {\n    contacts(filters: $filters) {\n      list {\n        id\n        name\n        email\n        birthday\n        companies {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACTS_TO_INVITES = gql`\n  query getContactsToInvites($filters: FilterContacts) {\n    contacts(filters: $filters) {\n      list {\n        id\n        name\n        email\n      }\n    }\n  }\n`;\n\nexport const GET_DUPLICATE_CONTACTS = gql`\n  query DuplicateContacts {\n    duplicateContacts {\n      list {\n        id\n        name\n        email\n        phones\n        companies {\n          id\n          name\n        }\n        contactCounts {\n          openDeals\n          totalActivities\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdAt\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const GET_COMPANIES = gql`\n  query getCompanies($filters: FilterCompanies, $importId: ID) {\n    companies(filters: $filters, importId: $importId) {\n      count\n      informationBar {\n        totalCount\n        companiesWithOpenDeals\n        companiesWithWonDeals\n      }\n      list {\n        id\n        name\n        address\n        website\n        phones\n        socialMedias\n        createdAt\n        updatedAt\n        customForms\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        companyCounts {\n          openDeals\n          closedDeals\n          lostDeals\n          wonDeals\n          emailMessages\n          totalActivities\n          doneActivities\n          undoneActivities\n          files\n          notes\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        tags {\n          id\n          name\n          color\n          order\n        }\n        contacts {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_SEARCH_COMPANIES = gql`\n  query getCompanies($filters: FilterCompanies) {\n    searchCompanies: companies(filters: $filters) {\n      count\n      list {\n        id\n        name\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_COMPANY = gql`\n  query getCompany($companyId: ID!) {\n    company(companyId: $companyId) {\n      id\n      name\n      address\n      website\n      phones\n      customForms\n      socialMedias\n      files\n      isDelete\n      tags {\n        id\n        name\n        color\n        order\n      }\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n        }\n      }\n      contacts {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      deals {\n        id\n        title\n        value\n        status\n        contact {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        stage {\n          id\n        }\n        pipeline {\n          id\n          stages {\n            id\n          }\n        }\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_COMPANY_HISTORY = gql`\n  query getCompanyHistory($companyId: ID!) {\n    companyHistory: company(companyId: $companyId) {\n      id\n      name\n      files\n      import {\n        id\n      }\n      activityStream {\n        id\n        flow\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        contacts {\n          id\n          name\n        }\n        deals {\n          id\n          title\n        }\n        customs {\n          id\n          label\n        }\n      }\n      notes {\n        id\n        content\n        type\n        userTags {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        comments {\n          id\n          comment\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdAt\n      }\n      activities {\n        id\n        title\n        status\n        start\n        end\n        location\n        description\n        deal {\n          id\n          title\n        }\n        contacts {\n          id\n          name\n        }\n        companies {\n          id\n          name\n        }\n        type {\n          id\n          name\n          color\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        notes {\n          id\n          content\n          type\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n          comments {\n            id\n            comment\n            userTags {\n              id\n            }\n            createdBy {\n              id\n              user {\n                id\n                name\n                lastName\n              }\n            }\n            createdAt\n          }\n        }\n        completedDate\n        createdAt\n        isAllDay\n        guests\n      }\n    }\n  }\n`;\n\nexport const GET_COMPANIES_TO_ACTIVITY = gql`\n  query getCompaniesToActivity($filters: FilterCompanies) {\n    companies(filters: $filters) {\n      count\n      list {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const GET_DUPLICATE_COMPANIES = gql`\n  query DuplicateCompanies {\n    duplicateCompanies {\n      list {\n        id\n        name\n        address\n        contacts {\n          id\n          name\n        }\n        companyCounts {\n          openDeals\n          totalActivities\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdAt\n      }\n    }\n  }\n`;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticStyle:{\"height\":\"100%\"},attrs:{\"fluid\":\"\"}},[_c('v-row',[_c('v-col',{staticClass:\"header-search\",attrs:{\"cols\":\"8\"}},[_c('p',{staticClass:\"ml-6 my-4\"},[_vm._v(\" \"+_vm._s(_vm.title)+\" \")])]),_c('v-col',{staticClass:\"header-search\",attrs:{\"cols\":\"4\"}},[(!_vm.$route.query.filterId && !_vm.$route.query.recyclebin)?_c('v-text-field',{staticClass:\"py-2 pr-8\",attrs:{\"color\":\"#ffffff\",\"label\":\"Buscar\",\"outlined\":\"\",\"dense\":\"\",\"append-icon\":\"mdi-magnify\",\"hide-details\":\"auto\",\"dark\":true},model:{value:(_vm.searchContact),callback:function ($$v) {_vm.searchContact=$$v},expression:\"searchContact\"}}):_vm._e()],1),_c('v-col',{staticClass:\"pa-0\",attrs:{\"cols\":\"12\"}},[_c('ContactsDataTable',{attrs:{\"headers\":_vm.formatHeaders,\"updateData\":_vm.updateData,\"searchContact\":_vm.searchContact},on:{\"endUpdateData\":function($event){_vm.updateData = false},\"selectContacts\":_vm.updateSelectContacts,\"changeHeaderOrder\":_vm.updateHeaders,\"contacts\":_vm.updateContactsShow,\"informationBar\":_vm.updateInformationBar},scopedSlots:_vm._u([{key:\"top\",fn:function(){return [_c('v-col',{staticClass:\"white py-6 pl-12\",attrs:{\"cols\":\"6\"}},[(!_vm.$route.query.filterId && !_vm.$route.query.recyclebin)?_c('v-menu',{attrs:{\"bottom\":\"\",\"offset-y\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar onMenu = ref.on;\nreturn [_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar onTooltip = ref.on;\nreturn [_c('v-btn',_vm._g({staticClass:\"mr-4\",attrs:{\"outlined\":\"\"}},Object.assign({}, onMenu, onTooltip)),[_c('v-icon',[_vm._v(\"mdi-cog\")])],1)]}}],null,true)},[_c('span',[_vm._v(\"Configuraciones\")])])]}}],null,false,1819942147)},[_c('v-list',{attrs:{\"dense\":\"\"}},[_c('ListHeaders',{attrs:{\"type\":_vm.viewInfo.type,\"headers\":_vm.headers,\"form\":_vm.getForm},on:{\"outData\":_vm.updateHeaders}}),(_vm.$can(_vm.FUSE, _vm.PERMISSIONS_CONTACTS))?_c('v-list-item',{staticClass:\"text-list-menu\",on:{\"click\":_vm.getDuplicateContacts}},[_c('v-icon',{staticClass:\"mr-2\"},[_vm._v(\"mdi-account-switch-outline\")]),_vm._v(\" Buscar duplicados \")],1):_vm._e(),(_vm.$can(_vm.EXPORT, _vm.PERMISSIONS_CONTACTS))?_c('v-list-item',{staticClass:\"text-list-menu\",on:{\"click\":function($event){return _vm.modalHandlerExport({ isOpen: true })}}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\" mdi-clipboard-arrow-up-outline \")]),_vm._v(\" Exportar contactos \")],1):_vm._e(),_c('v-list-item',{staticClass:\"text-list-menu\",on:{\"click\":function($event){return _vm.$router.push({\n                      path: '/contacts',\n                      query: { recyclebin: true },\n                    })}}},[_c('v-icon',{staticClass:\"mr-2\"},[_vm._v(\" mdi-delete-outline \")]),_vm._v(\" Papelera de reciclaje \")],1)],1)],1):_vm._e(),(_vm.$can(_vm.BULK_DELETE, _vm.PERMISSIONS_ADMIN))?_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\n                    var attrs = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.contactsSelected.length >= 1),expression:\"contactsSelected.length >= 1\"}],staticClass:\"mr-2 white--text\",attrs:{\"color\":\"secondary\"},on:{\"click\":function($event){_vm.$route.query.recyclebin\n                      ? _vm.trashContactConfirmation()\n                      : _vm.deleteContactConfirmation()}}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\"mdi-delete\")])],1)]}}],null,false,4068540366)},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$route.query.recyclebin ? 'Eliminar Permanentemente' : 'Mover a pepelera')+\" \")])]):_vm._e(),(\n                _vm.$can(_vm.BULK_DELETE, _vm.PERMISSIONS_ADMIN) &&\n                  _vm.$route.query.recyclebin\n              )?_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n              var on = ref.on;\n              var attrs = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.contactsSelected.length >= 1),expression:\"contactsSelected.length >= 1\"}],staticClass:\"mr-2 white--text\",attrs:{\"color\":\"success\"},on:{\"click\":_vm.restoreContactsConfirmation}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\"mdi-restore\")])],1)]}}],null,false,3395308586)},[_c('span',[_vm._v(\"Restaurar\")])]):_vm._e(),(!_vm.$route.query.recyclebin)?_c('ChangeOwner',{attrs:{\"isOpen\":_vm.isOpenMenuOwner,\"isLoading\":_vm.isLoading,\"typeItem\":_vm.typeItem,\"itemsSelected\":_vm.contactsSelected},on:{\"update:isOpen\":function($event){_vm.isOpenMenuOwner=$event},\"update:is-open\":function($event){_vm.isOpenMenuOwner=$event},\"success\":_vm.changeOwnerSuccess,\"error\":_vm.changeOwnerError},scopedSlots:_vm._u([{key:\"activator\",fn:function(){return [(_vm.$can(_vm.TO_ASSIGN, _vm.PERMISSIONS_ADMIN))?_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n              var onTooltip = ref.on;\n              var attrsTooltip = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.contactsSelected.length >= 1),expression:\"contactsSelected.length >= 1\"}],staticClass:\"mr-2\",attrs:{\"color\":\"primary\"},on:{\"click\":function($event){_vm.isOpenMenuOwner = true}}},'v-btn',Object.assign({}, attrsTooltip),false),Object.assign({}, onTooltip)),[_c('v-icon',[_vm._v(\"mdi-account-switch\")])],1)]}}],null,false,1291272934)},[_c('span',[_vm._v(\"Cambiar propietario\")])]):_vm._e()]},proxy:true}],null,false,610734628)}):_vm._e()],1),_c('v-col',{staticClass:\"d-flex justify-end white py-6 pr-12\",attrs:{\"cols\":\"6\"}},[(!_vm.$route.query.filterId && !_vm.$route.query.recyclebin)?_c('MenuFilters',{attrs:{\"filters\":_vm.customFilters},on:{\"action\":_vm.actionsHandler},scopedSlots:_vm._u([{key:\"text-button\",fn:function(){return [_c('span',[_vm._v(\" \"+_vm._s(_vm.filterSelected.isFilterSelected ? _vm.filterSelected.name : 'Filtros')+\" \")])]},proxy:true}],null,false,1423877413)}):_vm._e(),(!_vm.$route.query.filterId && !_vm.$route.query.recyclebin)?_c('v-menu',{attrs:{\"offset-y\":\"\",\"left\":\"\",\"ransition\":\"scale-transition\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n              var on = ref.on;\nreturn [_c('v-btn',_vm._g({staticClass:\"ml-4\",attrs:{\"small\":\"\",\"color\":\"secondary\",\"fab\":\"\",\"depressed\":\"\"}},on),[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"mdi-plus\")])],1)]}}],null,false,930373874)},[_c('v-list',{attrs:{\"dense\":\"\"}},[_c('v-list-item',{staticClass:\"text-list-menu\",on:{\"click\":function($event){return _vm.modalHandlerContact({ isOpen: true, isLoading: false })}}},[_c('v-icon',{attrs:{\"color\":\"primary\",\"left\":\"\"}},[_vm._v(\"mdi-account-plus\")]),_vm._v(\" Nuevo Contacto \")],1),(_vm.$can(_vm.IMPORT, _vm.PERMISSIONS_CONTACTS))?_c('v-list-item',{staticClass:\"text-list-menu\",on:{\"click\":function($event){return _vm.modalHandlerImport({ isOpen: true })}}},[_c('v-icon',{attrs:{\"color\":\"primary\",\"left\":\"\"}},[_vm._v(\" mdi-clipboard-arrow-down-outline \")]),_vm._v(\" Importar Contactos \")],1):_vm._e()],1)],1):_vm._e(),(_vm.$route.query.filterId || _vm.$route.query.recyclebin)?_c('v-btn',{staticClass:\"mr-2\",attrs:{\"outlined\":\"\"},on:{\"click\":_vm.goToAllContacts}},[_vm._v(\" ver todos los contactos \")]):_vm._e()],1)]},proxy:true}])})],1),(!_vm.$route.query.recyclebin && _vm.informationBar.totalCount)?_c('v-col',{staticClass:\"d-inline-flex white mt-10 pl-12 pt-8\",attrs:{\"cols\":\"12\"}},[_c('div',{staticClass:\"d-inline-flex mr-12\"},[_c('p',{staticClass:\"mr-10 footer-title\"},[_vm._v(\"Total\")]),_c('p',{staticClass:\"footer-info\"},[_vm._v(_vm._s(_vm.informationBar.totalCount))])]),_c('div',{staticClass:\"d-inline-flex mr-12\"},[_c('p',{staticClass:\"footer-title-info mr-4\"},[_vm._v(\"Con tratos abiertos\")]),_c('p',{staticClass:\"footer-info\"},[_vm._v(_vm._s(_vm.informationBar.contactsWithOpenDeals))])]),_c('div',{staticClass:\"d-inline-flex mr-12\"},[_c('p',{staticClass:\"footer-title-info mr-4\"},[_vm._v(\"Con tratos ganados\")]),_c('p',{staticClass:\"footer-info\"},[_vm._v(_vm._s(_vm.informationBar.contactsWithWonDeals))])])]):_vm._e()],1),_c('BaseModalError',{attrs:{\"modalHandler\":_vm.modalError},on:{\"close\":_vm.modalHandlerError}}),_c('BaseModalDelete',{attrs:{\"modalHandler\":_vm.modalDelete},on:{\"cancel\":_vm.modalHandlerDelete,\"confirm\":_vm.confirmHandler}}),_c('BaseModalRestore',{attrs:{\"modalHandler\":_vm.modalRestore},on:{\"confirm\":_vm.restoreContacts,\"cancel\":_vm.modalHandlerRestore}}),_c('ModalContact',{attrs:{\"modalHandler\":_vm.modalContact,\"inputs\":_vm.inputsForm},on:{\"close\":_vm.modalHandlerContact,\"outData\":_vm.createContact}}),_c('ModalFilter',{attrs:{\"modalHandler\":_vm.modalFilter,\"type\":_vm.viewInfo},on:{\"outData\":_vm.outDataFilterHandler,\"close\":_vm.modalHandlerFilter}}),_c('ModalContactsDuplicate',{attrs:{\"modalHandler\":_vm.modalMergeDuplicates,\"contacts\":_vm.duplicateList},on:{\"correctDuplicate\":_vm.correctDuplicate,\"close\":_vm.modalHandlerMergeDuplicates}}),_c('ModalExportData',{attrs:{\"typeItems\":_vm.viewInfo,\"items\":_vm.contacts,\"headers\":_vm.formatHeaders,\"modalHandler\":_vm.modalExport},on:{\"close\":_vm.modalHandlerExport}}),_c('ModalImportData',{attrs:{\"typeItems\":_vm.viewInfo,\"modalHandler\":_vm.modalImport,\"form\":_vm.getForm},on:{\"close\":_vm.modalHandlerImport}}),_c('v-snackbar',{attrs:{\"color\":_vm.snackbar.color,\"timeout\":5000},scopedSlots:_vm._u([{key:\"action\",fn:function(){return [_c('v-btn',{attrs:{\"text\":\"\"},on:{\"click\":function($event){return _vm.snackbarHandler({ isOpen: false, color: '', text: '' })}}},[_vm._v(\" Cerrar \")])]},proxy:true}]),model:{value:(_vm.snackbar.isOpen),callback:function ($$v) {_vm.$set(_vm.snackbar, \"isOpen\", $$v)},expression:\"snackbar.isOpen\"}},[_vm._v(\" \"+_vm._s(_vm.snackbar.text)+\" \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container fluid style=\"height: 100%\">\n    <v-row>\n      <!-- title -->\n      <v-col cols=\"8\" class=\"header-search\">\n        <p class=\"ml-6 my-4\">\n          {{ title }}\n        </p>\n      </v-col>\n      <!-- search input -->\n      <v-col cols=\"4\" class=\"header-search\">\n        <v-text-field\n          v-if=\"!$route.query.filterId && !$route.query.recyclebin\"\n          v-model=\"searchContact\"\n          color=\"#ffffff\"\n          label=\"Buscar\"\n          outlined\n          dense\n          append-icon=\"mdi-magnify\"\n          hide-details=\"auto\"\n          class=\"py-2 pr-8\"\n          :dark=\"true\"\n        ></v-text-field>\n      </v-col>\n      <!-- tabla -->\n      <v-col cols=\"12\" class=\"pa-0\">\n        <ContactsDataTable\n          :headers=\"formatHeaders\"\n          :updateData=\"updateData\"\n          :searchContact=\"searchContact\"\n          @endUpdateData=\"updateData = false\"\n          @selectContacts=\"updateSelectContacts\"\n          @changeHeaderOrder=\"updateHeaders\"\n          @contacts=\"updateContactsShow\"\n          @informationBar=\"updateInformationBar\"\n        >\n          <template #top>\n            <v-col cols=\"6\" class=\"white py-6 pl-12\">\n              <!-- Menu de configuraciones -->\n              <v-menu\n                v-if=\"!$route.query.filterId && !$route.query.recyclebin\"\n                bottom\n                offset-y\n              >\n                <template v-slot:activator=\"{ on: onMenu }\">\n                  <v-tooltip bottom>\n                    <template #activator=\"{ on: onTooltip }\">\n                      <v-btn\n                        class=\"mr-4\"\n                        outlined\n                        v-on=\"{ ...onMenu, ...onTooltip }\"\n                      >\n                        <v-icon>mdi-cog</v-icon>\n                      </v-btn>\n                    </template>\n                    <span>Configuraciones</span>\n                  </v-tooltip>\n                </template>\n                <v-list dense>\n                  <ListHeaders\n                    :type=\"viewInfo.type\"\n                    :headers=\"headers\"\n                    :form=\"getForm\"\n                    @outData=\"updateHeaders\"\n                  />\n                  <v-list-item\n                    class=\"text-list-menu\"\n                    v-if=\"$can(FUSE, PERMISSIONS_CONTACTS)\"\n                    @click=\"getDuplicateContacts\"\n                  >\n                    <v-icon class=\"mr-2\">mdi-account-switch-outline</v-icon>\n                    Buscar duplicados\n                  </v-list-item>\n                  <v-list-item\n                    class=\"text-list-menu\"\n                    v-if=\"$can(EXPORT, PERMISSIONS_CONTACTS)\"\n                    @click=\"modalHandlerExport({ isOpen: true })\"\n                  >\n                    <v-icon left>\n                      mdi-clipboard-arrow-up-outline\n                    </v-icon>\n                    Exportar contactos\n                  </v-list-item>\n                  <v-list-item\n                    class=\"text-list-menu\"\n                    @click=\"\n                      $router.push({\n                        path: '/contacts',\n                        query: { recyclebin: true },\n                      })\n                    \"\n                  >\n                    <v-icon class=\"mr-2\">\n                      mdi-delete-outline\n                    </v-icon>\n                    Papelera de reciclaje\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n              <!-- Boton de eliminar -->\n              <v-tooltip bottom v-if=\"$can(BULK_DELETE, PERMISSIONS_ADMIN)\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    v-show=\"contactsSelected.length >= 1\"\n                    @click=\"\n                      $route.query.recyclebin\n                        ? trashContactConfirmation()\n                        : deleteContactConfirmation()\n                    \"\n                    class=\"mr-2 white--text\"\n                    color=\"secondary\"\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                  >\n                    <v-icon>mdi-delete</v-icon>\n                  </v-btn>\n                </template>\n                <span>\n                  {{\n                    $route.query.recyclebin\n                      ? 'Eliminar Permanentemente'\n                      : 'Mover a pepelera'\n                  }}\n                </span>\n              </v-tooltip>\n              <!-- Boton de restaurar -->\n              <v-tooltip\n                bottom\n                v-if=\"\n                  $can(BULK_DELETE, PERMISSIONS_ADMIN) &&\n                    $route.query.recyclebin\n                \"\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    v-show=\"contactsSelected.length >= 1\"\n                    @click=\"restoreContactsConfirmation\"\n                    class=\"mr-2 white--text\"\n                    color=\"success\"\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                  >\n                    <v-icon>mdi-restore</v-icon>\n                  </v-btn>\n                </template>\n                <span>Restaurar</span>\n              </v-tooltip>\n              <!-- Botón de cambiar propietario -->\n              <ChangeOwner\n                v-if=\"!$route.query.recyclebin\"\n                :isOpen.sync=\"isOpenMenuOwner\"\n                :isLoading=\"isLoading\"\n                :typeItem=\"typeItem\"\n                :itemsSelected=\"contactsSelected\"\n                @success=\"changeOwnerSuccess\"\n                @error=\"changeOwnerError\"\n              >\n                <template #activator>\n                  <v-tooltip bottom v-if=\"$can(TO_ASSIGN, PERMISSIONS_ADMIN)\">\n                    <template\n                      v-slot:activator=\"{ on: onTooltip, attrs: attrsTooltip }\"\n                    >\n                      <v-btn\n                        v-show=\"contactsSelected.length >= 1\"\n                        color=\"primary\"\n                        class=\"mr-2\"\n                        v-bind=\"{ ...attrsTooltip }\"\n                        v-on=\"{ ...onTooltip }\"\n                        @click=\"isOpenMenuOwner = true\"\n                      >\n                        <v-icon>mdi-account-switch</v-icon>\n                      </v-btn>\n                    </template>\n                    <span>Cambiar propietario</span>\n                  </v-tooltip>\n                </template>\n              </ChangeOwner>\n            </v-col>\n            <v-col cols=\"6\" class=\"d-flex justify-end white py-6 pr-12\">\n              <!-- Menu de filtros -->\n              <MenuFilters\n                v-if=\"!$route.query.filterId && !$route.query.recyclebin\"\n                :filters=\"customFilters\"\n                @action=\"actionsHandler\"\n              >\n                <template #text-button>\n                  <span>\n                    {{\n                      filterSelected.isFilterSelected\n                        ? filterSelected.name\n                        : 'Filtros'\n                    }}\n                  </span>\n                </template>\n              </MenuFilters>\n              <!-- Boton de agregar -->\n              <v-menu\n                v-if=\"!$route.query.filterId && !$route.query.recyclebin\"\n                offset-y\n                left\n                ransition=\"scale-transition\"\n              >\n                <template v-slot:activator=\"{ on }\">\n                  <v-btn\n                    small\n                    color=\"secondary\"\n                    fab\n                    depressed\n                    v-on=\"on\"\n                    class=\"ml-4\"\n                  >\n                    <v-icon dark>mdi-plus</v-icon>\n                  </v-btn>\n                </template>\n                <v-list dense>\n                  <v-list-item\n                    class=\"text-list-menu\"\n                    @click=\"\n                      modalHandlerContact({ isOpen: true, isLoading: false })\n                    \"\n                  >\n                    <v-icon color=\"primary\" left>mdi-account-plus</v-icon>\n                    Nuevo Contacto\n                  </v-list-item>\n                  <v-list-item\n                    class=\"text-list-menu\"\n                    v-if=\"$can(IMPORT, PERMISSIONS_CONTACTS)\"\n                    @click=\"modalHandlerImport({ isOpen: true })\"\n                  >\n                    <v-icon color=\"primary\" left>\n                      mdi-clipboard-arrow-down-outline\n                    </v-icon>\n                    Importar Contactos\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n              <!-- Boton ver todos -->\n              <v-btn\n                v-if=\"$route.query.filterId || $route.query.recyclebin\"\n                @click=\"goToAllContacts\"\n                class=\"mr-2\"\n                outlined\n              >\n                ver todos los contactos\n              </v-btn>\n            </v-col>\n          </template>\n        </ContactsDataTable>\n      </v-col>\n      <!-- footer info -->\n      <v-col\n        v-if=\"!$route.query.recyclebin && informationBar.totalCount\"\n        cols=\"12\"\n        class=\"d-inline-flex white mt-10 pl-12 pt-8\"\n      >\n        <div class=\"d-inline-flex mr-12\">\n          <p class=\"mr-10 footer-title\">Total</p>\n          <p class=\"footer-info\">{{ informationBar.totalCount }}</p>\n        </div>\n        <div class=\"d-inline-flex mr-12\">\n          <p class=\"footer-title-info mr-4\">Con tratos abiertos</p>\n          <p class=\"footer-info\">{{ informationBar.contactsWithOpenDeals }}</p>\n        </div>\n        <div class=\"d-inline-flex mr-12\">\n          <p class=\"footer-title-info mr-4\">Con tratos ganados</p>\n          <p class=\"footer-info\">{{ informationBar.contactsWithWonDeals }}</p>\n        </div>\n      </v-col>\n    </v-row>\n    <!-- modals -->\n    <BaseModalError :modalHandler=\"modalError\" @close=\"modalHandlerError\" />\n    <BaseModalDelete\n      :modalHandler=\"modalDelete\"\n      @cancel=\"modalHandlerDelete\"\n      @confirm=\"confirmHandler\"\n    />\n    <BaseModalRestore\n      :modalHandler=\"modalRestore\"\n      @confirm=\"restoreContacts\"\n      @cancel=\"modalHandlerRestore\"\n    />\n    <ModalContact\n      :modalHandler=\"modalContact\"\n      :inputs=\"inputsForm\"\n      @close=\"modalHandlerContact\"\n      @outData=\"createContact\"\n    />\n    <ModalFilter\n      :modalHandler=\"modalFilter\"\n      :type=\"viewInfo\"\n      @outData=\"outDataFilterHandler\"\n      @close=\"modalHandlerFilter\"\n    />\n    <ModalContactsDuplicate\n      :modalHandler=\"modalMergeDuplicates\"\n      :contacts=\"duplicateList\"\n      @correctDuplicate=\"correctDuplicate\"\n      @close=\"modalHandlerMergeDuplicates\"\n    />\n    <ModalExportData\n      :typeItems=\"viewInfo\"\n      :items=\"contacts\"\n      :headers=\"formatHeaders\"\n      :modalHandler=\"modalExport\"\n      @close=\"modalHandlerExport\"\n    />\n    <ModalImportData\n      :typeItems=\"viewInfo\"\n      :modalHandler=\"modalImport\"\n      :form=\"getForm\"\n      @close=\"modalHandlerImport\"\n    />\n    <v-snackbar\n      v-model=\"snackbar.isOpen\"\n      :color=\"snackbar.color\"\n      :timeout=\"5000\"\n    >\n      {{ snackbar.text }}\n      <template v-slot:action>\n        <v-btn\n          text\n          @click=\"snackbarHandler({ isOpen: false, color: '', text: '' })\"\n        >\n          Cerrar\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </v-container>\n</template>\n\n<script>\nimport ChangeOwner from '@/components/deals/ChangeOwner.vue';\n// ability\nimport ability from '@/services/ability';\nimport {\n  PERMISSIONS_CONTACTS,\n  PERMISSIONS_ADMIN,\n} from '@/constants/permissions';\nimport {\n  CREATE,\n  IMPORT,\n  EXPORT,\n  DELETE,\n  BULK_DELETE,\n  TO_ASSIGN,\n  FUSE,\n} from '@/constants/methods';\n// helpers\nimport { UTIL_ORDER } from '@/helpers/utils';\n// graphql\nimport {\n  CREATE_CONTACT,\n  DELETE_CONTACTS,\n  TRASH_CONTACTS,\n  RESTORE_CONTACTS,\n} from '@/graphql/mutations/contactsMutations';\nimport { GET_FORM } from '@/graphql/querys/formsQuery';\nimport { GET_HEADERS } from '@/graphql/querys/headersQuery';\n// mixins\nimport { modalsAlertsMixin } from '@/mixins/alerts/modalsAlertsMixin';\nimport { snackbarMixin } from '@/mixins/alerts/snackbarMixin';\nimport { filtersMixin } from '@/mixins/filtersMixin';\nimport { mergeDuplicatesMixin } from '@/mixins/mergeDuplicatesMixin';\nimport { headersMixin } from '@/mixins/headersMixin';\nimport { exportsMixin } from '@/mixins/exportsMixin';\nimport { importMixin } from '@/mixins/importMixin';\n\nexport default {\n  name: 'Contacts',\n  mixins: [\n    filtersMixin,\n    modalsAlertsMixin,\n    snackbarMixin,\n    mergeDuplicatesMixin,\n    headersMixin,\n    exportsMixin,\n    importMixin,\n  ],\n  components: {\n    ContactsDataTable: () =>\n      import('@/components/contacts/ContactsDataTable.vue'),\n    ModalContact: () => import('@/components/contacts/ModalContact.vue'),\n    ModalFilter: () => import('@/components/filters/ModalFilter.vue'),\n    MenuFilters: () => import('@/components/filters/MenuFilters.vue'),\n    ModalContactsDuplicate: () =>\n      import('@/components/contacts/ModalContacsDuplicate.vue'),\n    ListHeaders: () => import('@/components/headers/ListHeaders.vue'),\n    ChangeOwner,\n  },\n  data() {\n    return {\n      typeItem: 'CONTACT',\n      isOpenMenuOwner: false,\n      isLoading: false,\n      viewInfo: { type: 'CONTACT', name: 'Contactos' },\n      PERMISSIONS_CONTACTS,\n      PERMISSIONS_ADMIN,\n      CREATE,\n      IMPORT,\n      EXPORT,\n      DELETE,\n      BULK_DELETE,\n      TO_ASSIGN,\n      FUSE,\n      inputsForm: [],\n      updateData: false,\n      contacts: [],\n      informationBar: {},\n      contactsSelected: [],\n      modalContact: {\n        isOpen: false,\n        isLoading: false,\n      },\n      headers: [],\n      searchContact: '',\n    };\n  },\n  watch: {\n    // organiza los inputs deacuerdo a su order\n    getForm({ defaultForm, customForm }) {\n      const inputs = customForm.inputs\n        ? defaultForm.inputs.concat(customForm.inputs)\n        : defaultForm.inputs;\n      this.inputsForm = UTIL_ORDER({\n        listItems: inputs,\n        orderBy: 'ASC',\n        nextElement: 'order',\n      });\n    },\n  },\n  computed: {\n    title() {\n      if (this.$route.query.filterId) {\n        return 'Contactos importados';\n      }\n      if (this.$route.query.recyclebin) {\n        return 'Papelera de contactos';\n      }\n      return 'Todos los contactos';\n    },\n  },\n  methods: {\n    changeOwnerSuccess(message) {\n      this.snackbarHandler({ isOpen: true, color: 'success', text: message });\n      this.contactsSelected = [];\n      this.updateData = true;\n    },\n    changeOwnerError(message) {\n      this.modalHandlerError({\n        isOpen: true,\n        error: message,\n      });\n    },\n    updateInformationBar(informationBar) {\n      this.informationBar = informationBar;\n    },\n    modalHandlerContact({ isOpen, isLoading }) {\n      this.modalContact = { isOpen, isLoading };\n    },\n    createContact(input) {\n      this.modalHandlerContact({ isOpen: true, isLoading: true });\n      this.$apollo\n        .mutate({\n          mutation: CREATE_CONTACT,\n          variables: {\n            input,\n          },\n          update: () => {\n            // indicamos que se deve de actualizar la vista de contactos\n            this.updateData = true;\n            this.modalHandlerContact({ isOpen: false, isLoading: false });\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'El contacto se creó correctamente',\n            });\n          },\n        })\n        // se ejecuta al finalizar la mutacion\n        .finally(() => {\n          // regresamos el valor a false para manejarlo de nuevo en el futuro\n          this.updateData = false;\n        })\n        .catch(() => {\n          const error =\n            'No se pudo crear el contacto, intente de nuevo o contacte a soporte';\n          this.modalHandlerError({ isOpen: true, error });\n          this.modalHandlerContact({ isOpen: true, isLoading: false });\n        });\n    },\n    updateSelectContacts(contacts) {\n      this.contactsSelected = contacts.map(({ id }) => {\n        return { id };\n      });\n    },\n    updateContactsShow(contacts) {\n      this.contacts = contacts;\n    },\n    deleteContactConfirmation() {\n      this.modalHandlerDelete({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          title: '¿Seguro que deseas mover a la papelera?',\n          nameItem: 'Los contactos seleccionados',\n          text: 'serán movidos a la papelera',\n        },\n        infoDelete: {},\n      });\n    },\n    deleteContacts({ isOpen, isLoading, message, infoDelete }) {\n      if (ability.can(BULK_DELETE, PERMISSIONS_ADMIN)) {\n        this.modalHandlerDelete({ isOpen, isLoading, message, infoDelete });\n        this.$apollo\n          .mutate({\n            mutation: DELETE_CONTACTS,\n            variables: {\n              input: this.contactsSelected,\n            },\n          })\n          .then(() => {\n            // indicamos que se deve de actualizar la vista de contactos\n            this.updateData = true;\n          })\n          // se ejecuta al finalizar la mutacion\n          .finally(() => {\n            // regresamos el valor a false para manejarlo de nuevo en el futuro\n            this.updateData = false;\n            this.contactsSelected = [];\n            this.modalHandlerDelete({\n              isOpen: false,\n              isLoading,\n              message,\n              infoDelete,\n            });\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Se eliminó correctamente',\n            });\n          })\n          .catch(() => {\n            const error =\n              'No se pudieron eliminar los contactos, intente de nuevo o contacte a soporte';\n            this.modalHandlerError({ isOpen: true, error });\n          });\n      }\n    },\n    confirmHandler({ isOpen, isLoading, message, infoDelete }) {\n      if (this.$route.query.recyclebin) {\n        this.trashContacts({ isOpen, isLoading, message, infoDelete });\n      } else {\n        this.deleteContacts({ isOpen, isLoading, message, infoDelete });\n      }\n    },\n    trashContactConfirmation() {\n      this.modalHandlerDelete({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          nameItem: 'Los contactos seleccionados',\n          text: 'serán eliminados permanentemente',\n        },\n        infoDelete: {},\n      });\n    },\n    trashContacts({ isOpen, isLoading, message, infoDelete }) {\n      if (ability.can(BULK_DELETE, PERMISSIONS_ADMIN)) {\n        this.modalHandlerDelete({ isOpen, isLoading, message, infoDelete });\n        this.$apollo\n          .mutate({\n            mutation: TRASH_CONTACTS,\n            variables: {\n              input: this.contactsSelected,\n            },\n            update: () => {\n              // indicamos que se deve de actualizar la vista de contactos\n              this.updateData = true;\n              // cierra modal de eliminar\n            },\n          })\n          // se ejecuta al finalizar la mutacion\n          .finally(() => {\n            // regresamos el valor a false para manejarlo de nuevo en el futuro\n            this.updateData = false;\n            this.contactsSelected = [];\n            this.modalHandlerDelete({\n              isOpen: false,\n              isLoading,\n              message,\n              infoDelete,\n            });\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Se eliminó correctamente',\n            });\n          })\n          .catch(() => {\n            const error =\n              'No se pudieron eliminar los contactos, intente de nuevo o contacte a soporte';\n            this.modalHandlerError({ isOpen: true, error });\n          });\n      }\n    },\n    restoreContactsConfirmation() {\n      this.modalHandlerRestore({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          title: '¿Seguro que deseas restaurar?',\n          nameItem: 'Los contactos seleccionados',\n          text: 'serán restaurados',\n        },\n        infoRestore: {},\n      });\n    },\n    restoreContacts({ isOpen, isLoading, message, infoRestore }) {\n      if (ability.can(BULK_DELETE, PERMISSIONS_ADMIN)) {\n        this.modalHandlerRestore({\n          isOpen,\n          isLoading,\n          message,\n          infoRestore,\n        });\n        this.$apollo\n          .mutate({\n            mutation: RESTORE_CONTACTS,\n            variables: {\n              input: this.contactsSelected,\n            },\n            update: () => {\n              // indicamos que se deve de actualizar la vista de contactos\n              this.updateData = true;\n              // cierra modal de eliminar\n            },\n          })\n          // se ejecuta al finalizar la mutacion\n          .finally(() => {\n            // regresamos el valor a false para manejarlo de nuevo en el futuro\n            this.updateData = false;\n            this.contactsSelected = [];\n            this.modalHandlerRestore({\n              isOpen: false,\n              isLoading,\n              message,\n              infoRestore,\n            });\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Se restauró correctamente',\n            });\n          })\n          .catch(() => {\n            const error =\n              'No se pudieron restaurar los contactos, intente de nuevo o contacte a soporte';\n            this.modalHandlerError({ isOpen: true, error });\n          });\n      }\n    },\n    async goToAllContacts() {\n      await this.$router.push({ name: 'contacts' });\n      this.updateData = true;\n    },\n  },\n  apollo: {\n    getForm: {\n      query: GET_FORM,\n      fetchPolicy: 'no-cache',\n      variables: {\n        type: 'CONTACT',\n      },\n    },\n    headers: {\n      query: GET_HEADERS,\n      variables: {\n        type: 'CONTACTS',\n      },\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '{ .header-search } from ../../../scss/components/header.search';\n@import '{ .text-list-menu  } from ../../../scss/views/contacts';\n@import '{ .footer-title, .footer-title-info, .footer-info } from ../../../scss/components/footer.data.table';\n</style>\n","import mod from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Contacts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Contacts.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Contacts.vue?vue&type=template&id=3e4f3868&scoped=true&\"\nimport script from \"./Contacts.vue?vue&type=script&lang=js&\"\nexport * from \"./Contacts.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Contacts.vue?vue&type=style&index=0&id=3e4f3868&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3e4f3868\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VMenu } from 'vuetify/lib/components/VMenu';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSnackbar } from 'vuetify/lib/components/VSnackbar';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VTooltip } from 'vuetify/lib/components/VTooltip';\ninstallComponents(component, {VBtn,VCol,VContainer,VIcon,VList,VListItem,VMenu,VRow,VSnackbar,VTextField,VTooltip})\n"],"sourceRoot":""}