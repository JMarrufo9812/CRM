{"version":3,"sources":["webpack:///./src/mixins/dealsMixin.js","webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./src/graphql/mutations/companiesMutations.js","webpack:///./src/components/profile/FieldsEdit.vue?6f70","webpack:///./src/graphql/mutations/contactsMutations.js","webpack:///./src/mixins/contactsMixin.js","webpack:///./src/components/profile/FieldsEdit.vue?0261","webpack:///src/components/profile/FieldsEdit.vue","webpack:///./src/components/profile/FieldsEdit.vue?2ef5","webpack:///./src/components/profile/FieldsEdit.vue?bafb","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./src/graphql/mutations/dealsMutations.js","webpack:///./src/mixins/companiesMixin.js","webpack:///./node_modules/core-js/modules/es.string.search.js"],"names":["dealsMixin","data","PERMISSIONS_DEALS","inputsForm","isLoadingDeals","loadingSearch","isLoadingUpdateDeal","modalDeal","isOpen","isLoading","infoError","icon","title","message","filters","search","orderBy","skip","take","sortBy","sortDesc","isDelete","listDeals","informationBarDeals","resultSearchDeals","totalDeals","searchDeal","searchFilters","dealsSelected","watch","value","Object","keys","length","this","getSearchDeals","$emit","computed","menuProps","methods","modalHandlerDeal","createDeal","contact","company","tags","customForms","expectedCloseDate","pipeline","pipelineId","stageId","owner","$apollo","mutate","mutation","CREATE_DEAL","variables","input","id","ownerId","then","updateData","$route","name","updateViewPipeline","params","setTimeout","typeItem","updateHistory","addDeal","catch","error","modalHandlerError","updateDeal","status","comments","lostReason","customForm","undefined","UPDATE_DEAL","modalHandlerLostDeal","query","GET_SEARCH_DEALS","fetchPolicy","deals","list","getDeals","GET_DEALS","importId","filterId","informationBar","map","deal","forEach","count","isErrorDeals","restoreDealsConfirmation","modalHandlerRestore","nameItem","text","infoRestore","restoreDeals","RESTORE_DEALS","update","snackbarHandler","color","finally","deleteDealConfirmation","type","modalHandlerDelete","infoDelete","deleteDeal","DELETE_DEAL","trashDealsConfirmation","trashDeals","TRASH_DEALS","goToProfile","$router","push","module","exports","is","x","y","CREATE_COMPANY","gql","DELETE_COMPANIES","TRASH_COMPANIES","RESTORE_COMPANIES","UPDATE_COMPANY","FUSE_COMPANIES","UPDATE_OWNER_COMPANIES","CREATE_CONTACT","UPDATE_CONTACT","DELETE_CONTACTS","TRASH_CONTACTS","RESTORE_CONTACTS","FUSE_CONTACTS","UPDATE_OWNER_CONTACTS","contactsMixin","isLoadingUpdateContact","updateContact","email","birthday","phones","isClient","socialMedias","contactInput","render","_vm","_h","$createElement","_c","_self","_l","key","staticClass","attrs","_v","_s","isEmptyInput","_e","on","$event","menuStatus","scopedSlots","_u","fn","ref","_g","_b","directives","rawName","canEdit","canEditOthers","item","expression","model","callback","$$v","$set","refInFor","preventDefault","save","formValidate","isDense","class","getValueInput","staticStyle","cancel","validateInputsValue","modalError","staticRenderFns","mixins","modalsAlertsMixin","props","required","default","String","inputsDefault","Array","inputsCustom","components","Fields","FieldValue","subject","UPDATE","UPDATE_OTHERS","PERMISSIONS_CONTACTS","PERMISSIONS_COMPANIES","listValuesDefault","listFieldsDefault","listValuesCustom","listFieldsCustom","skipContactQuery","skipCompanyQuery","skipDealQuery","handler","formatValuesDefault","formatListDefaultFields","formatValuesCustom","formatListCustomFields","immediate","isLoadingUpdateCompany","ability","listFieldsMix","keyInput","updateField","formatUpdateJSON","saveDefaultHandler","formatCustomUpdate","saveCustomHandler","isCustom","resetValueCustom","closeEditFieldCustom","getIndexFieldCustom","resetValueDefault","closeEditField","getIndexField","edit","field","index","oldValue","getValueDefault","indexField","getValueCustom","JSON","stringify","some","isEqual","label","items","order","formatDefaultUpdate","findIndex","parse","defaultField","find","formatSocialMedias","socialMedia","url","validSocialMedias","number","filter","saveDefaultContact","saveDefaultCompany","saveDefaultDeal","updateCompany","saveCustomContact","saveCustomCompany","saveCustomDeal","isArray","apollo","formContact","component","VBtn","VCard","VCol","VContainer","VForm","VIcon","VMenu","VRow","_typeof","obj","Symbol","iterator","constructor","prototype","CHANGE_DEAL_STAGE","CHANGE_DEAL_PIPELINE","CREATE_LOST_REASON","DELETE_LOST_REASON","UPDATE_LOST_REASON","UPDATE_OWNER_DEALS","companiesMixin","address","website","companyInput","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","searcher","call","RegExp","string","res","done","rx","S","previousLastIndex","lastIndex","result"],"mappings":"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","file":"js/chunk-15206510.b36fdef0.js","sourcesContent":["import {\n  CREATE_DEAL,\n  DELETE_DEAL,\n  UPDATE_DEAL,\n  TRASH_DEALS,\n  RESTORE_DEALS,\n} from '@/graphql/mutations/dealsMutations';\nimport { GET_DEALS, GET_SEARCH_DEALS } from '@/graphql/querys/dealsQuery';\nimport { PERMISSIONS_DEALS } from '@/constants/permissions';\n\nexport const dealsMixin = {\n  data() {\n    return {\n      PERMISSIONS_DEALS,\n      inputsForm: [],\n      isLoadingDeals: false,\n      loadingSearch: false,\n      isLoadingUpdateDeal: false,\n      modalDeal: {\n        isOpen: false,\n        isLoading: false,\n      },\n      infoError: {\n        icon: 'mdi-account-search-outline',\n        title: '',\n        message: 'No se encontraron tratos',\n      },\n      filters: {\n        search: '',\n        orderBy: 'desc',\n        skip: 0,\n        take: 0,\n        sortBy: [],\n        sortDesc: [],\n        isDelete: false,\n      },\n      listDeals: [],\n      informationBarDeals: {},\n      resultSearchDeals: [],\n      totalDeals: 0,\n      searchDeal: '',\n      searchFilters: {\n        search: '',\n        take: 5,\n      },\n      dealsSelected: [],\n    };\n  },\n  watch: {\n    searchDeal(value) {\n      if (value) {\n        if (Object.keys(value).length >= 2) {\n          this.searchFilters.search = value;\n          this.searchFilters.take = 5;\n          this.getSearchDeals();\n        }\n        if (Object.keys(value).length === 0) {\n          // console.log('longitud de busqueda cero');\n          this.searchFilters.search = '';\n          this.searchFilters.take = 0;\n          this.getSearchDeals();\n        }\n      }\n    },\n    isLoadingDeals(value) {\n      this.$emit('isLoadingDeals', value);\n    },\n  },\n  computed: {\n    menuProps() {\n      return !this.searchDeal ? { value: false } : {};\n    },\n  },\n  methods: {\n    modalHandlerDeal({ isOpen, isLoading }) {\n      this.modalDeal = { isOpen, isLoading };\n    },\n    createDeal({\n      title,\n      contact,\n      company,\n      value,\n      tags,\n      customForms,\n      expectedCloseDate,\n      pipeline: { pipelineId, stageId },\n      owner,\n    }) {\n      this.modalHandlerDeal({\n        isOpen: true,\n        isLoading: true,\n      });\n      this.$apollo\n        .mutate({\n          mutation: CREATE_DEAL,\n          variables: {\n            input: {\n              title,\n              tags,\n              customForms,\n              expectedCloseDate,\n              contact: contact?.id ? { id: contact.id } : contact,\n              company: company?.id ? { id: company.id } : company,\n              value,\n              pipelineId,\n              stageId,\n              ownerId: owner.id,\n            },\n          },\n        })\n        .then(({ data: { createDeal } }) => {\n          this.updateData = true;\n          this.modalHandlerDeal({\n            isOpen: false,\n            isLoading: false,\n          });\n          if (this.$route.name === 'pipeline-id') {\n            this.updateViewPipeline(this.$route.params.id);\n          }\n          this.updateData = true;\n\n          setTimeout(() => {\n            this.updateData = false;\n          }, 10);\n\n          this.$emit('updateHistory');\n\n          if (this.typeItem === 'CONTACT' || this.typeItem === 'COMPANY') {\n            this.updateHistory();\n            this.addDeal(createDeal);\n          }\n        })\n        .catch(() => {\n          const error =\n            'No se pudo crear el trato intente de nuevo o contacte al soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    updateDeal({\n      id,\n      value,\n      expectedCloseDate,\n      company,\n      contact,\n      tags,\n      status,\n      comments,\n      lostReason,\n      owner,\n      title,\n      customForm,\n    }) {\n      this.isLoadingUpdateDeal = true;\n      const input = {};\n      input.id = id;\n      if (value || value === 0) {\n        input.value = value;\n      }\n      if (expectedCloseDate || expectedCloseDate !== undefined) {\n        input.expectedCloseDate = expectedCloseDate;\n      }\n      if (company) {\n        input.company = company;\n      }\n      if (contact) {\n        input.contact = contact;\n      }\n      if (tags) {\n        input.tags = tags;\n      }\n      if (owner) {\n        input.ownerId = owner.id;\n      }\n      if (title) {\n        input.title = title;\n      }\n      if (customForm) {\n        input.customForm = customForm;\n      }\n      if (status) {\n        input.status = status;\n        if (status === 'LOST') {\n          input.comments = comments;\n          input.lostReason = lostReason;\n        }\n      }\n\n      this.$apollo\n        .mutate({\n          // Query\n          mutation: UPDATE_DEAL,\n          // Parameters\n          variables: {\n            input,\n          },\n        })\n        .then(({ data: { updateDeal } }) => {\n          if (input.status === 'LOST') {\n            this.modalHandlerLostDeal({ isOpen: false, isLoading: false });\n          }\n          this.$emit('updateItem', updateDeal);\n          this.$emit('updateHistory');\n          // Close edit field\n          this.isLoadingUpdateDeal = false;\n\n          if (this.typeItem === 'CONTACT' || this.typeItem === 'COMPANY') {\n            this.updateHistory();\n            this.addDeal(updateDeal);\n          }\n        })\n        .catch(() => {\n          this.isLoadingUpdateDeal = false;\n          // Error\n          const error =\n            'No se pudo actualizar el trato, intente de nuevo o contacte a soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    getSearchDeals() {\n      this.loadingSearch = true;\n      this.$apollo\n        .query({\n          query: GET_SEARCH_DEALS,\n          fetchPolicy: 'no-cache',\n          variables: {\n            filters: this.searchFilters,\n          },\n        })\n        .then(({ data: { deals } }) => {\n          this.resultSearchDeals = deals.list;\n          this.loadingSearch = false;\n        })\n        .catch(() => {\n          this.loadingSearch = false;\n        });\n    },\n    getDeals() {\n      this.isLoadingDeals = true;\n      this.$apollo\n        .query({\n          query: GET_DEALS,\n          fetchPolicy: 'no-cache',\n          variables: {\n            filters: this.filters,\n            importId: this.$route.query.filterId,\n          },\n        })\n        .then(({ data: { deals } }) => {\n          this.isLoadingDeals = false;\n          this.$emit('deals', deals.list);\n          this.$emit('informationBar', deals.informationBar);\n          this.listDeals = deals.list.map((deal) => {\n            if (deal.customForms) {\n              deal.customForms.forEach(({ id, value }) => {\n                // eslint-disable-next-line\n                deal[id] = value;\n              });\n            }\n            return deal;\n          });\n          this.totalDeals = deals.count;\n\n          this.isErrorDeals = false;\n          this.$emit('endUpdateData');\n        })\n        .catch(() => {\n          this.isErrorDeals = true;\n          this.isLoadingDeals = false;\n          this.listDeals = [];\n          this.totalDeals = 0;\n          this.$emit('endUpdateData');\n          this.infoError = {\n            icon: 'mdi-alert-outline',\n            title: 'Error',\n            message:\n              'No se ha podido cargar ningún trato, intente de nuevo o contacte a soporte',\n          };\n        });\n    },\n    restoreDealsConfirmation() {\n      this.modalHandlerRestore({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          title: '¿Seguro que deseas restaurar?',\n          nameItem: 'Los tratos seleccionados',\n          text: 'serán restaurados',\n        },\n        infoRestore: {},\n      });\n    },\n    restoreDeals({ isOpen, isLoading, message, infoRestore }) {\n      this.modalHandlerRestore({\n        isOpen,\n        isLoading,\n        message,\n        infoRestore,\n      });\n      this.$apollo\n        .mutate({\n          mutation: RESTORE_DEALS,\n          variables: {\n            input: this.dealsSelected,\n          },\n          update: () => {\n            // indicamos que se deve de actualizar la vista de contactos\n            this.updateData = true;\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Los tratos fueron restaurados correctamente',\n            });\n          },\n        })\n        .finally(() => {\n          this.modalHandlerRestore({\n            isOpen: false,\n            isLoading,\n            message,\n            infoRestore,\n          });\n          this.updateData = false;\n        })\n        .catch(() => {\n          const error =\n            'No se pudo restaurar el trato intente de nuevo o contacte al soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    deleteDealConfirmation(type, deals) {\n      this.modalHandlerDelete({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          title: '¿Seguro que deseas mover a la papelera?',\n          nameItem: 'Los tratos seleccionados',\n          text: 'serán movidos a la papelera',\n        },\n        infoDelete: {\n          type,\n          deals,\n        },\n      });\n    },\n    deleteDeal({ isOpen, isLoading, message, infoDelete }) {\n      this.modalHandlerDelete({ isOpen, isLoading, message, infoDelete });\n      this.$apollo\n        .mutate({\n          mutation: DELETE_DEAL,\n          variables: {\n            input: infoDelete.deals,\n          },\n          update: () => {\n            // indicamos que se deve de actualizar la vista de contactos\n            this.updateData = true;\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Los tratos fueron eliminados correctamente',\n            });\n          },\n        })\n        .finally(() => {\n          this.updateData = false;\n          this.modalHandlerDelete({\n            isOpen: false,\n            isLoading,\n            message,\n            infoDelete,\n          });\n        })\n        .catch(() => {\n          const error =\n            'No se pudo eliminar el trato intente de nuevo o contacte al soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    trashDealsConfirmation(type, deals) {\n      this.modalHandlerDelete({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          nameItem: 'Los tratos seleccionados',\n          text: 'serán eliminados permanentemente',\n        },\n        infoDelete: {\n          type,\n          deals,\n        },\n      });\n    },\n    trashDeals({ isOpen, isLoading, message, infoDelete }) {\n      this.modalHandlerDelete({ isOpen, isLoading, message, infoDelete });\n      this.$apollo\n        .mutate({\n          mutation: TRASH_DEALS,\n          variables: {\n            input: infoDelete.deals,\n          },\n          update: () => {\n            // indicamos que se deve de actualizar la vista de contactos\n            this.updateData = true;\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Los tratos fueron eliminados correctamente',\n            });\n          },\n        })\n        .finally(() => {\n          this.updateData = false;\n          this.modalHandlerDelete({\n            isOpen: false,\n            isLoading,\n            message,\n            infoDelete,\n          });\n        })\n        .catch(() => {\n          const error =\n            'No se pudo eliminar el trato intente de nuevo o contacte al soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    goToProfile(id) {\n      this.$router.push(`/deal/${id}`);\n    },\n  },\n};\n","// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","import gql from 'graphql-tag';\n\nexport const CREATE_COMPANY = gql`\n  mutation createCompany($input: companyCreateInput!) {\n    createCompany(companyInput: $input) {\n      id\n      name\n      address\n      website\n      phones\n      socialMedias\n      owner {\n        id\n        user {\n          id\n          name\n        }\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      contacts {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const DELETE_COMPANIES = gql`\n  mutation deletedCompanies($input: [DeleteCompanyInput!]!) {\n    deletedCompanies(companies: $input) {\n      id\n      name\n    }\n  }\n`;\n\nexport const TRASH_COMPANIES = gql`\n  mutation trashCompanies($input: [DeleteCompanyInput!]!) {\n    trashCompanies(companies: $input) {\n      id\n    }\n  }\n`;\n\nexport const RESTORE_COMPANIES = gql`\n  mutation restoreCompanies($input: [DeleteCompanyInput!]!) {\n    restoreCompanies(companies: $input) {\n      id\n    }\n  }\n`;\n\nexport const UPDATE_COMPANY = gql`\n  mutation updateCompany($companyInput: companyUpdateInput!) {\n    updateCompany(companyInput: $companyInput) {\n      id\n      name\n      address\n      website\n      phones\n      customForms\n      socialMedias\n      tags {\n        id\n        name\n        color\n        order\n      }\n      owner {\n        id\n        user {\n          id\n          name\n        }\n      }\n      contacts {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      deals {\n        id\n        title\n        value\n        status\n        contact {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        stage {\n          id\n        }\n        pipeline {\n          id\n          stages {\n            id\n          }\n        }\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const FUSE_COMPANIES = gql`\n  mutation FuseCompanies($input: CompaniesToFuse!) {\n    fuseCompanies(fuse: $input) {\n      id\n      name\n    }\n  }\n`;\n\nexport const UPDATE_OWNER_COMPANIES = gql`\n  mutation assignCompanies($companyListAssign: CompanyListAssign!) {\n    assignCompanies(companyListAssign: $companyListAssign)\n  }\n`;\n","export * from \"-!../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./FieldsEdit.vue?vue&type=style&index=0&id=71c96102&lang=scss&scoped=true&\"","import gql from 'graphql-tag';\n\nexport const CREATE_CONTACT = gql`\n  mutation CreateContact($input: contactCreateInput!) {\n    createContact(contactInput: $input) {\n      id\n      name\n      email\n      phones\n      isClient\n      socialMedias\n      birthday\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n        }\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      companies {\n        id\n        name\n      }\n      isClient\n    }\n  }\n`;\n\nexport const UPDATE_CONTACT = gql`\n  mutation updateContact($contactInput: contactUpdateInput) {\n    updateContact(contactInput: $contactInput) {\n      id\n      name\n      email\n      phones\n      isClient\n      socialMedias\n      birthday\n      customForms\n      owner {\n        id\n        user {\n          id\n          name\n        }\n      }\n      enterprise {\n        id\n        name\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      companies {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      deals {\n        id\n        title\n        value\n        status\n        contact {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        stage {\n          id\n        }\n        pipeline {\n          id\n          stages {\n            id\n          }\n        }\n        owner {\n          id\n        }\n      }\n      createdAt\n    }\n  }\n`;\n\nexport const DELETE_CONTACTS = gql`\n  mutation deletedContacts($input: [DeleteContactInput!]!) {\n    deletedContacts(contacts: $input) {\n      id\n      name\n    }\n  }\n`;\n\nexport const TRASH_CONTACTS = gql`\n  mutation trashContacts($input: [DeleteContactInput!]!) {\n    trashContacts(contacts: $input) {\n      id\n      name\n    }\n  }\n`;\n\nexport const RESTORE_CONTACTS = gql`\n  mutation restoreContacts($input: [DeleteContactInput!]!) {\n    restoreContacts(contacts: $input) {\n      id\n      name\n    }\n  }\n`;\n\nexport const FUSE_CONTACTS = gql`\n  mutation FuseContacts($input: ContactsToFuse!) {\n    fuseContacts(fuse: $input) {\n      id\n      name\n    }\n  }\n`;\n\nexport const UPDATE_OWNER_CONTACTS = gql`\n  mutation assignContacts($contactListAssign: ContactListAssign!) {\n    assignContacts(contactListAssign: $contactListAssign)\n  }\n`;\n","import { UPDATE_CONTACT } from '@/graphql/mutations/contactsMutations';\n// import { GET_CONTACT } from '@/graphql/querys/contactsQuery';\n\nexport const contactsMixin = {\n  data() {\n    return {\n      isLoadingUpdateContact: false,\n    };\n  },\n  methods: {\n    updateContact({\n      id,\n      name,\n      email,\n      birthday,\n      phones,\n      isClient,\n      socialMedias,\n      customForm,\n      company,\n      owner,\n      tags,\n      deal,\n    }) {\n      this.isLoadingUpdateContact = true;\n      const contactInput = {};\n      contactInput.id = id;\n      if (name) {\n        contactInput.name = name;\n      }\n      if (email) {\n        contactInput.email = email;\n      }\n      if (birthday) {\n        contactInput.birthday = birthday;\n      }\n      if (phones) {\n        contactInput.phones = phones;\n      }\n      if (isClient === true || isClient === false) {\n        contactInput.isClient = isClient;\n      }\n      if (socialMedias) {\n        contactInput.socialMedias = socialMedias;\n      }\n      if (customForm) {\n        contactInput.customForm = customForm;\n      }\n      if (company) {\n        contactInput.company = company;\n      }\n      if (owner) {\n        contactInput.owner = owner;\n      }\n      if (tags) {\n        contactInput.tags = tags;\n      }\n      if (deal) {\n        contactInput.deal = deal;\n      }\n      this.$apollo\n        .mutate({\n          // Query\n          mutation: UPDATE_CONTACT,\n          // Parameters\n          variables: {\n            contactInput,\n          },\n        })\n        .then(({ data: { updateContact } }) => {\n          this.$emit('updateItem', updateContact);\n          this.$emit('updateHistory');\n          // Close edit field\n          this.isLoadingUpdateContact = false;\n        })\n        .catch(() => {\n          this.isLoadingUpdateContact = false;\n          // this.isLoading = false;\n          // Error\n          const error =\n            'No se pudo actualizar el contacto, intente de nuevo o contacte a soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n  },\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_vm._l((_vm.listFieldsMix),function(input){return _c('v-row',{key:input.id,staticClass:\"profile__input\"},[_c('v-col',{staticClass:\"d-flex align-center\",attrs:{\"cols\":\"4\"}},[_vm._v(_vm._s(input.name))]),_c('v-col',{staticClass:\"d-flex align-center\",attrs:{\"cols\":\"8\"}},[(!_vm.isEmptyInput(input.value))?_c('FieldValue',{attrs:{\"field\":input}}):_vm._e(),_c('v-menu',{attrs:{\"close-on-content-click\":false,\"offset-y\":\"\",\"left\":\"\",\"nudge-right\":\"50\",\"absolute\":\"\"},on:{\"input\":function($event){return _vm.menuStatus(input)}},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nvar attrs = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({directives:[{name:\"show\",rawName:\"v-show\",value:(\n              !_vm.isEmptyInput(input.value) &&\n                (_vm.canEdit || _vm.canEditOthers) &&\n                !_vm.item.isDelete\n            ),expression:\"\\n              !isEmptyInput(input.value) &&\\n                (canEdit || canEditOthers) &&\\n                !item.isDelete\\n            \"}],staticClass:\"profile__input__edit mr-4\",attrs:{\"absolute\":\"\",\"x-small\":\"\",\"color\":\"secondary\"}},'v-btn',attrs,false),on),[_c('v-icon',{attrs:{\"small\":\"\",\"color\":\"white\"}},[_vm._v(\"mdi-pencil\")])],1),_c('v-btn',_vm._g(_vm._b({directives:[{name:\"show\",rawName:\"v-show\",value:(\n              _vm.isEmptyInput(input.value) &&\n                (_vm.canEdit || _vm.canEditOthers) &&\n                !_vm.item.isDelete\n            ),expression:\"\\n              isEmptyInput(input.value) &&\\n                (canEdit || canEditOthers) &&\\n                !item.isDelete\\n            \"}],staticClass:\"profile__input__add\",attrs:{\"text\":\"\",\"color\":\"success\",\"small\":\"\"}},'v-btn',attrs,false),on),[_c('v-icon',{attrs:{\"x-small\":\"\"}},[_vm._v(\"mdi-plus\")]),_vm._v(\" Añadir valor \")],1)]}}],null,true),model:{value:(input.edit),callback:function ($$v) {_vm.$set(input, \"edit\", $$v)},expression:\"input.edit\"}},[(input.edit)?_c('v-card',{staticClass:\"pa-4\",attrs:{\"tile\":\"\",\"width\":\"15em\"}},[_c('v-form',{ref:\"form\",refInFor:true,on:{\"submit\":function($event){$event.preventDefault();return _vm.save(input)}},model:{value:(_vm.formValidate),callback:function ($$v) {_vm.formValidate=$$v},expression:\"formValidate\"}},[_c('Fields',{attrs:{\"inputProps\":{ isDense: true, class: 'no-icon' },\"field\":input},on:{\"outValue\":_vm.getValueInput}})],1),_c('div',{staticClass:\"d-flex justify-center mt-2\"},[_c('v-btn',{staticClass:\"mr-2\",staticStyle:{\"width\":\"45%\"},attrs:{\"x-small\":\"\",\"color\":\"primary\",\"outlined\":\"\"},on:{\"click\":function($event){return _vm.cancel(input)}}},[_vm._v(\" Cancelar \")]),_c('v-btn',{staticStyle:{\"width\":\"45%\"},attrs:{\"disabled\":_vm.validateInputsValue(input),\"x-small\":\"\",\"color\":\"secondary\",\"loading\":_vm.isLoading},on:{\"click\":function($event){return _vm.save(input)}}},[_vm._v(\" Guardar \")])],1)],1):_vm._e()],1)],1)],1)}),_c('BaseModalError',{attrs:{\"modalHandler\":_vm.modalError},on:{\"close\":_vm.modalHandlerError}})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container>\n    <v-row\n      class=\"profile__input\"\n      v-for=\"input in listFieldsMix\"\n      :key=\"input.id\"\n    >\n      <v-col cols=\"4\" class=\"d-flex align-center\">{{ input.name }}</v-col>\n      <v-col cols=\"8\" class=\"d-flex align-center\">\n        <FieldValue v-if=\"!isEmptyInput(input.value)\" :field=\"input\" />\n        <v-menu\n          v-model=\"input.edit\"\n          :close-on-content-click=\"false\"\n          offset-y\n          left\n          nudge-right=\"50\"\n          absolute\n          @input=\"menuStatus(input)\"\n        >\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn\n              absolute\n              x-small\n              color=\"secondary\"\n              class=\"profile__input__edit mr-4\"\n              v-show=\"\n                !isEmptyInput(input.value) &&\n                  (canEdit || canEditOthers) &&\n                  !item.isDelete\n              \"\n              v-bind=\"attrs\"\n              v-on=\"on\"\n            >\n              <v-icon small color=\"white\">mdi-pencil</v-icon>\n            </v-btn>\n            <v-btn\n              v-show=\"\n                isEmptyInput(input.value) &&\n                  (canEdit || canEditOthers) &&\n                  !item.isDelete\n              \"\n              text\n              color=\"success\"\n              small\n              v-bind=\"attrs\"\n              v-on=\"on\"\n              class=\"profile__input__add\"\n            >\n              <v-icon x-small>mdi-plus</v-icon>\n              Añadir valor\n            </v-btn>\n          </template>\n          <v-card class=\"pa-4\" tile width=\"15em\" v-if=\"input.edit\">\n            <v-form\n              ref=\"form\"\n              v-model=\"formValidate\"\n              @submit.prevent=\"save(input)\"\n            >\n              <Fields\n                :inputProps=\"{ isDense: true, class: 'no-icon' }\"\n                :field=\"input\"\n                @outValue=\"getValueInput\"\n              />\n            </v-form>\n            <div class=\"d-flex justify-center mt-2\">\n              <v-btn\n                style=\"width: 45%\"\n                class=\"mr-2\"\n                x-small\n                color=\"primary\"\n                outlined\n                @click=\"cancel(input)\"\n              >\n                Cancelar\n              </v-btn>\n              <v-btn\n                style=\"width: 45%\"\n                :disabled=\"validateInputsValue(input)\"\n                x-small\n                color=\"secondary\"\n                @click=\"save(input)\"\n                :loading=\"isLoading\"\n              >\n                Guardar\n              </v-btn>\n            </div>\n          </v-card>\n        </v-menu>\n      </v-col>\n    </v-row>\n    <BaseModalError :modalHandler=\"modalError\" @close=\"modalHandlerError\" />\n  </v-container>\n</template>\n\n<script>\n// ability\nimport { subject } from '@casl/ability';\nimport ability from '@/services/ability';\nimport {\n  PERMISSIONS_CONTACTS,\n  PERMISSIONS_COMPANIES,\n  PERMISSIONS_DEALS,\n} from '@/constants/permissions';\nimport { UPDATE, UPDATE_OTHERS } from '@/constants/methods';\n// Queries\nimport { GET_FORM_CONTACT } from '@/graphql/local-state/queries';\n// mixins\nimport { modalsAlertsMixin } from '@/mixins/alerts/modalsAlertsMixin';\nimport { dealsMixin } from '@/mixins/dealsMixin';\nimport { contactsMixin } from '@/mixins/contactsMixin';\nimport { companiesMixin } from '@/mixins/companiesMixin';\n\nexport default {\n  name: 'FieldsEdit',\n  mixins: [modalsAlertsMixin, dealsMixin, contactsMixin, companiesMixin],\n  props: {\n    item: {\n      type: Object,\n      required: true,\n      default: () => {\n        return {};\n      },\n    },\n    typeItem: {\n      type: String,\n      required: true,\n      default: () => {\n        return {};\n      },\n    },\n    inputsDefault: {\n      type: Array,\n      required: true,\n      default: () => {\n        return [];\n      },\n    },\n    inputsCustom: {\n      type: Array,\n      required: true,\n      default: () => {\n        return [];\n      },\n    },\n  },\n  components: {\n    Fields: () => import('@/components/fields/Fields.vue'),\n    FieldValue: () => import('@/components/fields/FieldValue.vue'),\n  },\n  data() {\n    return {\n      subject,\n      UPDATE,\n      UPDATE_OTHERS,\n      PERMISSIONS_CONTACTS,\n      PERMISSIONS_COMPANIES,\n      PERMISSIONS_DEALS,\n      isLoading: false,\n      // inputs Defaults\n      listValuesDefault: [],\n      listFieldsDefault: [],\n      // Inputs custom\n      listValuesCustom: [],\n      listFieldsCustom: [],\n      // handler querys\n      skipContactQuery: true,\n      skipCompanyQuery: true,\n      skipDealQuery: true,\n      formValidate: true,\n    };\n  },\n  watch: {\n    // Check changes and reInit\n    item: {\n      handler() {\n        // defaults\n        this.listValuesDefault = this.formatValuesDefault();\n        this.listFieldsDefault = this.formatListDefaultFields();\n        // custom\n        this.listValuesCustom = this.formatValuesCustom();\n        this.listFieldsCustom = this.formatListCustomFields();\n      },\n      immediate: true,\n    },\n    isLoadingUpdateDeal(value) {\n      if (!value) this.isLoading = false;\n    },\n    isLoadingUpdateContact(value) {\n      if (!value) this.isLoading = false;\n    },\n    isLoadingUpdateCompany(value) {\n      if (!value) this.isLoading = false;\n    },\n  },\n  computed: {\n    canEdit() {\n      if (this.typeItem === 'CONTACT') {\n        return ability.can(\n          UPDATE,\n          subject(PERMISSIONS_CONTACTS, {\n            authorId: this?.item?.owner?.id || '',\n          }),\n        );\n      }\n      if (this.typeItem === 'COMPANY') {\n        return ability.can(\n          UPDATE,\n          subject(PERMISSIONS_COMPANIES, {\n            authorId: this?.item?.owner?.id || '',\n          }),\n        );\n      }\n      if (this.typeItem === 'DEAL') {\n        return ability.can(\n          UPDATE,\n          subject(PERMISSIONS_DEALS, { authorId: this?.item?.owner?.id || '' }),\n        );\n      }\n      return false;\n    },\n    canEditOthers() {\n      if (this.typeItem === 'CONTACT') {\n        if (!this.canEdit) {\n          return (\n            ability.can(UPDATE_OTHERS, PERMISSIONS_CONTACTS) &&\n            !ability.can(\n              UPDATE_OTHERS,\n              subject(PERMISSIONS_CONTACTS, {\n                authorId: this?.item?.owner?.id || '',\n              }),\n            )\n          );\n        }\n        return ability.can(UPDATE_OTHERS, PERMISSIONS_CONTACTS);\n      }\n      if (this.typeItem === 'COMPANY') {\n        if (!this.canEdit) {\n          return (\n            ability.can(UPDATE_OTHERS, PERMISSIONS_COMPANIES) &&\n            !ability.can(\n              UPDATE_OTHERS,\n              subject(PERMISSIONS_COMPANIES, {\n                authorId: this?.item?.owner?.id || '',\n              }),\n            )\n          );\n        }\n        return ability.can(UPDATE_OTHERS, PERMISSIONS_COMPANIES);\n      }\n      if (this.typeItem === 'DEAL') {\n        if (!this.canEdit) {\n          return (\n            ability.can(UPDATE_OTHERS, PERMISSIONS_DEALS) &&\n            !ability.can(\n              UPDATE_OTHERS,\n              subject(PERMISSIONS_DEALS, {\n                authorId: this?.item?.owner?.id || '',\n              }),\n            )\n          );\n        }\n        return ability.can(UPDATE_OTHERS, PERMISSIONS_DEALS);\n      }\n      return false;\n    },\n    // List complete with default and custom fields\n    listFieldsMix() {\n      return [...this.listFieldsDefault, ...this.listFieldsCustom];\n    },\n  },\n  methods: {\n    // Save control\n    save(input) {\n      if (this.formValidate) {\n        this.isLoading = true;\n        let updateField;\n        if (!input.keyInput) {\n          updateField = this.formatCustomUpdate(input);\n          this.saveCustomHandler(updateField);\n        } else {\n          // Assign field and values depending of the type\n          // eslint-disable-next-line\n          updateField = this.formatUpdateJSON(input.keyInput, input.value);\n          // Get index field\n          this.saveDefaultHandler(input, updateField);\n        }\n      }\n    },\n    // Cancel edit control\n    cancel(input) {\n      if (!this.isCustom(input)) {\n        // If cancel reset the value\n        this.resetValueDefault(input);\n        // Close edit field\n        this.closeEditField(this.getIndexField(input));\n      } else {\n        this.resetValueCustom(input);\n        this.closeEditFieldCustom(this.getIndexFieldCustom(input));\n      }\n    },\n    menuStatus(input) {\n      if (!input.edit) {\n        this.cancel(input);\n      }\n    },\n    // update input value\n    getValueInput({ keyInput, input, index }) {\n      if (keyInput === 'socialMedias') {\n        this.listFieldsDefault = this.listFieldsDefault.map((field) => {\n          if (field.keyInput === keyInput) {\n            // eslint-disable-next-line\n            field.value[index] = input;\n          }\n          return field;\n        });\n      }\n    },\n    // valida si los valores de los inputs son iguales evita guardar el mismo valores\n    // y evita guardar historial inecesario\n    validateInputsValue({ id, type, keyInput, value }) {\n      let oldValue;\n      // validate if input is custom or default and get the index for get to oldValue and compare\n      if (keyInput) {\n        const indexField = this.getIndexField({ id, type, keyInput, value });\n        oldValue = this.getValueDefault(indexField);\n      } else {\n        const indexField = this.getIndexFieldCustom({ id, type, value });\n        oldValue = this.getValueCustom(indexField);\n      }\n      if (type === 'CHECKBOX') {\n        if (JSON.stringify(oldValue) === JSON.stringify(value)) return true;\n      }\n      if (keyInput === 'phones') {\n        // console.log('value', value);\n        // console.log('oldValue', oldValue);\n        if (\n          oldValue.length === 0 &&\n          value.length === 1 &&\n          value[0].number.length < 10\n        ) {\n          return true;\n        }\n        // compara los dos arreglos\n        if (JSON.stringify(oldValue) === JSON.stringify(value)) {\n          return true;\n        }\n        return value.some(({ number }) => number.length < 10);\n      }\n      if (keyInput === 'socialMedias') {\n        const newSocialMedias = value\n          .filter(({ url }) => url)\n          .map(({ type: typeSM, url }) => {\n            return { url, type: typeSM };\n          });\n        const oldSocialMedias = oldValue\n          .filter(({ url }) => url)\n          .map(({ type: typeSM, url }) => {\n            return { url, type: typeSM };\n          });\n\n        const isEqual = newSocialMedias.every((newSM) =>\n          oldSocialMedias.some(\n            (oldSM) => newSM.url === oldSM.url && newSM.type === oldSM.type,\n          ),\n        );\n        if (isEqual) return true;\n      }\n      if (oldValue === value) {\n        return true;\n      }\n      if (typeof oldValue !== 'boolean' && typeof value !== 'boolean') {\n        if (!oldValue && !value) {\n          return true;\n        }\n      }\n      return false;\n    },\n    /** Apply format to fields default\n    For example: [{id: '', name: '', keyInput: '',\n    order: 0, type: 'TEXT', value: '', items: [], edit: false }] */\n    formatListDefaultFields() {\n      return this.inputsDefault.map((item) => {\n        const { id, label, items, keyInput, type, order } = item;\n        return {\n          id,\n          name: label,\n          // Change the label to name. This is for no show the label into the input component\n          label,\n          items,\n          keyInput,\n          value: this.item[keyInput],\n          type,\n          order,\n          edit: false,\n          icon: 'no-icon',\n        };\n      });\n    },\n    // Format to default fields\n    formatDefaultUpdate(input) {\n      return { [input.keyInput]: input.value };\n    },\n    // Get index of the field default\n    getIndexField(input) {\n      return this.listFieldsDefault.findIndex(\n        (field) => field.keyInput === input.keyInput,\n      );\n    },\n    /**  Apply format to values default\n    For example: [{id: '', value: ''}, ...] */\n    formatValuesDefault() {\n      return JSON.parse(\n        JSON.stringify(\n          this.inputsDefault.map((input) => {\n            return {\n              id: input.id,\n              value: this.item[input.keyInput],\n            };\n          }),\n        ),\n      );\n    },\n    // Reset field default with the value before\n    resetValueDefault(input) {\n      const indexField = this.getIndexField(input);\n      this.listFieldsDefault = this.listFieldsDefault.map((defaultField) => {\n        if (defaultField.id === input.id) {\n          // eslint-disable-next-line\n          defaultField.value = JSON.parse(\n            JSON.stringify(this.getValueDefault(indexField)),\n          );\n        }\n        return defaultField;\n      });\n    },\n    // Get the value of the field default\n    getValueDefault(indexField) {\n      return this.listValuesDefault.find(\n        (item) => item.id === this.listFieldsDefault[indexField].id,\n      ).value;\n    },\n    // Close edit field\n    closeEditField(indexField) {\n      this.listFieldsDefault[indexField].edit = false;\n    },\n    /**\n     ************************************ Default fields*******************************\n     */\n    saveDefaultHandler(input, updateField) {\n      if (input.keyInput === 'socialMedias') {\n        // eslint-disable-next-line\n        const formatSocialMedias = updateField.socialMedias.map(\n          ({ type, url }) => {\n            return { type, url };\n          },\n        );\n\n        const validSocialMedias = [];\n\n        formatSocialMedias.forEach((socialMedia) => {\n          if (socialMedia.url && socialMedia.url.length > 0) {\n            validSocialMedias.push(socialMedia);\n          }\n        });\n        // eslint-disable-next-line\n        updateField.socialMedias = validSocialMedias;\n      }\n      if (input.keyInput === 'phones') {\n        if (updateField.phones.length === 1) {\n          if (updateField.phones[0].number.length === 0) {\n            // eslint-disable-next-line\n            updateField.phones = [];\n          }\n        } else {\n          // eslint-disable-next-line\n          updateField.phones = updateField.phones.filter(\n            ({ number }) => number.length >= 10,\n          );\n        }\n      }\n      switch (this.typeItem) {\n        case 'CONTACT':\n          this.saveDefaultContact(updateField);\n          break;\n        case 'COMPANY':\n          this.saveDefaultCompany(updateField);\n          break;\n        case 'DEAL':\n          this.saveDefaultDeal(updateField);\n          break;\n        default:\n          this.modalHandlerError({\n            isOpen: true,\n            error:\n              'No se pudo actualizar no se ha encontrado referencia para actualizar',\n          });\n          break;\n      }\n    },\n    saveDefaultContact(updateField) {\n      if (this.canEdit || this.canEditOthers) {\n        this.updateContact({ id: this.item.id, ...updateField });\n      }\n    },\n    // Save default\n    saveDefaultCompany(updateField) {\n      if (this.canEdit || this.canEditOthers) {\n        this.updateCompany({ id: this.item.id, ...updateField });\n      }\n    },\n    saveDefaultDeal(updateField) {\n      if (this.canEdit || this.canEditOthers) {\n        this.updateDeal({ id: this.item.id, ...updateField });\n      }\n    },\n    //  **************************************Custom fields**********************************\n    /**  Apply format to values custom\n    For example: [{id: '', value: ''}, ...] */\n    formatValuesCustom() {\n      if (this.inputsCustom?.length > 0) {\n        return JSON.parse(\n          JSON.stringify(\n            this.inputsCustom.map((inputCustom) => {\n              if (this.item?.customForms?.length) {\n                const { value } =\n                  this.item.customForms.find(\n                    (input) => input.id === inputCustom.id,\n                  ) || {};\n                return { id: inputCustom.id, value };\n              }\n              return { id: inputCustom.id, value: '' };\n            }),\n          ),\n        );\n      }\n      return [];\n    },\n    /** Apply format to fields custom\n    For example: [{id: '', name: '',\n    order: 0, type: 'TEXT', value: '', items: [], edit: false }] */\n    formatListCustomFields() {\n      if (\n        Array.isArray(this.listValuesCustom) &&\n        this.listValuesCustom?.length > 0\n      ) {\n        return this.inputsCustom.map((item) => {\n          const { id, label, items, type, order } = item;\n          const { value } = this.listValuesCustom.find(\n            (custom) => custom.id === id,\n          );\n          return {\n            id,\n            // Change the label to name. This is for no show the label into the input component\n            name: label,\n            label,\n            items,\n            value: value || '',\n            type,\n            order,\n            edit: false,\n            icon: 'no-icon',\n          };\n        });\n      }\n      return [];\n    },\n    // Get index of the field custom\n    getIndexFieldCustom(input) {\n      return this.listFieldsCustom.findIndex((field) => field.id === input.id);\n    },\n    // Format custom field to update\n    formatCustomUpdate(input) {\n      return { id: input.id, value: input.value };\n    },\n    // Save custom\n    saveCustomHandler(updateField) {\n      switch (this.typeItem) {\n        case 'CONTACT':\n          this.saveCustomContact(updateField);\n          break;\n        case 'COMPANY':\n          this.saveCustomCompany(updateField);\n          break;\n        case 'DEAL':\n          this.saveCustomDeal(updateField);\n          break;\n        default:\n          this.modalHandlerError({\n            isOpen: true,\n            error:\n              'No se pudo actualizar no se ha encontrado referencia para actualizar',\n          });\n          break;\n      }\n    },\n    saveCustomContact(updateField) {\n      if (this.canEdit) {\n        this.updateContact({ id: this.item.id, customForm: updateField });\n      }\n    },\n    saveCustomCompany(updateField) {\n      if (this.canEdit) {\n        this.updateCompany({ id: this.item.id, customForm: updateField });\n      }\n    },\n    saveCustomDeal(updateField) {\n      if (this.canEdit) {\n        this.updateDeal({ id: this.item.id, customForm: updateField });\n      }\n    },\n    resetValueCustom(input) {\n      const indexField = this.getIndexFieldCustom(input);\n      this.listFieldsCustom[indexField].value = this.getValueCustom(indexField);\n    },\n    getValueCustom(indexField) {\n      return this.listValuesCustom.find(\n        (item) => item.id === this.listFieldsCustom[indexField].id,\n      ).value;\n    },\n    closeEditFieldCustom(indexField) {\n      this.listFieldsCustom[indexField].edit = false;\n    },\n    // Format JSON value\n    formatUpdateJSON(key, value) {\n      return {\n        [key]: value,\n      };\n    },\n    /**\n     *********************************** Validaciones*************************************\n     */\n    // Check the value is empty or null depending the type of field\n    isEmptyInput(value) {\n      if (value !== null && value !== '') {\n        // Type of value\n        const type = typeof value;\n        switch (type) {\n          case 'boolean':\n            return false;\n          case 'object':\n            if (Array.isArray(value)) {\n              return value.length === 0;\n            }\n            return (\n              Object.keys(value).length === 0 && value.constructor === Object\n            );\n          default:\n            return value === null || value === undefined;\n        }\n      } else {\n        return true;\n      }\n    },\n    // Check is a field custom\n    isCustom(input) {\n      return typeof input.keyInput === 'undefined' || input.keyInput === null;\n    },\n  },\n  apollo: {\n    formContact: {\n      query: GET_FORM_CONTACT,\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '{ .profile__input } from ../../../../scss/components/fields.edit';\n</style>\n","import mod from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./FieldsEdit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./FieldsEdit.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FieldsEdit.vue?vue&type=template&id=71c96102&scoped=true&\"\nimport script from \"./FieldsEdit.vue?vue&type=script&lang=js&\"\nexport * from \"./FieldsEdit.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FieldsEdit.vue?vue&type=style&index=0&id=71c96102&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"71c96102\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VForm } from 'vuetify/lib/components/VForm';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VMenu } from 'vuetify/lib/components/VMenu';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VCol,VContainer,VForm,VIcon,VMenu,VRow})\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import gql from 'graphql-tag';\n\nexport const CREATE_DEAL = gql`\n  mutation CreateDeal($input: CreateDeal!) {\n    createDeal(dealInput: $input) {\n      id\n      title\n      value\n      status\n      expectedCloseDate\n      dateStatus\n      activity\n      rottenTime\n      owner {\n        user {\n          id\n          name\n          lastName\n          config {\n            profileUrl\n          }\n        }\n      }\n      company {\n        id\n        name\n      }\n      contact {\n        id\n        name\n      }\n      stage {\n        id\n        name\n      }\n      pipeline {\n        id\n        name\n        stages {\n          id\n          name\n          order\n        }\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n    }\n  }\n`;\n\nexport const UPDATE_DEAL = gql`\n  mutation UpdateDeal($input: UpdateDeal!) {\n    updateDeal(dealInput: $input) {\n      id\n      title\n      value\n      status\n      expectedCloseDate\n      dateStatus\n      activity\n      files\n      customForms\n      rottenTime\n      lostDeal {\n        id\n        lostReason {\n          id\n          reason\n        }\n      }\n      exchangeCurrency {\n        id\n        name\n        code\n        icon\n      }\n      company {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      contact {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n          config {\n            profileUrl\n          }\n        }\n      }\n      stage {\n        id\n        name\n        order\n      }\n      pipeline {\n        id\n        name\n        stages {\n          id\n          name\n          order\n          daysInStage\n        }\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n    }\n  }\n`;\n\nexport const DELETE_DEAL = gql`\n  mutation deletedDeals($input: [DeleteDealInput!]!) {\n    deletedDeals(deals: $input) {\n      id\n    }\n  }\n`;\n\nexport const TRASH_DEALS = gql`\n  mutation trashDeals($input: [DeleteDealInput!]!) {\n    trashDeals(deals: $input) {\n      id\n    }\n  }\n`;\n\nexport const RESTORE_DEALS = gql`\n  mutation restoreDeals($input: [DeleteDealInput!]!) {\n    restoreDeals(deals: $input) {\n      id\n    }\n  }\n`;\n\n// se pide todo lo necesario para poder actualizar el deal entero y no se pierda ningun dato\nexport const CHANGE_DEAL_STAGE = gql`\n  mutation ChangeDealStage($input: ChangeStage!) {\n    changeDealStage(input: $input) {\n      id\n      title\n      value\n      status\n      expectedCloseDate\n      dateStatus\n      activity\n      files\n      customForms\n      rottenTime\n      dateEntryIntoStage\n      lostDeal {\n        id\n        lostReason {\n          id\n          reason\n        }\n      }\n      exchangeCurrency {\n        id\n        name\n        code\n        icon\n      }\n      company {\n        id\n        name\n        isDelete\n      }\n      contact {\n        id\n        name\n        isDelete\n      }\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n          config {\n            profileUrl\n          }\n        }\n      }\n      stage {\n        id\n        name\n        order\n        maxDays\n      }\n      pipeline {\n        id\n        name\n        stages {\n          id\n          name\n          order\n          daysInStage\n        }\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      isDelete\n    }\n  }\n`;\n\nexport const CHANGE_DEAL_PIPELINE = gql`\n  mutation changeDealPipeline($input: changePipelineInput!) {\n    changeDealPipeline(input: $input) {\n      id\n      title\n      value\n      status\n      expectedCloseDate\n      dateStatus\n      activity\n      files\n      customForms\n      rottenTime\n      lostDeal {\n        id\n        lostReason {\n          id\n          reason\n        }\n      }\n      exchangeCurrency {\n        id\n        name\n        code\n        icon\n      }\n      company {\n        id\n        name\n        isDelete\n      }\n      contact {\n        id\n        name\n        isDelete\n      }\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n          config {\n            profileUrl\n          }\n        }\n      }\n      stage {\n        id\n        name\n        order\n      }\n      pipeline {\n        id\n        name\n        stages {\n          id\n          name\n          order\n        }\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      isDelete\n    }\n  }\n`;\n\nexport const CREATE_LOST_REASON = gql`\n  mutation CreateLostReason($input: lostReasonCreateInput!) {\n    createLostReason(lostReasonInput: $input) {\n      id\n      reason\n    }\n  }\n`;\n\nexport const DELETE_LOST_REASON = gql`\n  mutation DeleteLostReason($lostReasonId: ID!) {\n    deleteLostReason(lostReasonId: $lostReasonId) {\n      id\n      reason\n    }\n  }\n`;\n\nexport const UPDATE_LOST_REASON = gql`\n  mutation UpdateLostReason($input: lostReasonUpdateInput!) {\n    updateLostReason(lostReasonInput: $input) {\n      id\n      reason\n    }\n  }\n`;\n\nexport const UPDATE_OWNER_DEALS = gql`\n  mutation assignDeals($dealListAssign: DealListAssign!) {\n    assignDeals(dealListAssign: $dealListAssign)\n  }\n`;\n","import { UPDATE_COMPANY } from '@/graphql/mutations/companiesMutations';\n// import { GET_COMPANY } from '@/graphql/querys/companiesQuery';\n\nexport const companiesMixin = {\n  data() {\n    return {\n      isLoadingUpdateCompany: false,\n    };\n  },\n  methods: {\n    updateCompany({\n      id,\n      name,\n      address,\n      website,\n      socialMedias,\n      phones,\n      customForm,\n      contact,\n      tags,\n      owner,\n      deal,\n    }) {\n      this.isLoadingUpdateCompany = true;\n      const companyInput = {};\n      companyInput.id = id;\n      if (name) {\n        companyInput.name = name;\n      }\n      if (address) {\n        companyInput.address = address;\n      }\n      if (website) {\n        companyInput.website = website;\n      }\n      if (socialMedias) {\n        companyInput.socialMedias = socialMedias;\n      }\n      if (phones) {\n        companyInput.phones = phones;\n      }\n      if (customForm) {\n        companyInput.customForm = customForm;\n      }\n      if (contact) {\n        companyInput.contact = contact;\n      }\n      if (tags) {\n        companyInput.tags = tags;\n      }\n      if (owner) {\n        companyInput.owner = owner;\n      }\n      if (deal) {\n        companyInput.deal = deal;\n      }\n      this.$apollo\n        .mutate({\n          // Query\n          mutation: UPDATE_COMPANY,\n          // Parameters\n          variables: {\n            companyInput,\n          },\n        })\n        .then(({ data: { updateCompany } }) => {\n          this.$emit('updateItem', updateCompany);\n          this.$emit('updateHistory');\n          // Close edit field\n          this.isLoadingUpdateCompany = false;\n        })\n        .catch(() => {\n          this.isLoadingUpdateCompany = false;\n          // Error\n          const error =\n            'No se pudo actualizar la empresa, intente de nuevo o contacte a soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n  },\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.es/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n    function (string) {\n      var res = maybeCallNative(nativeSearch, this, string);\n      if (res.done) return res.value;\n\n      var rx = anObject(this);\n      var S = String(string);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n"],"sourceRoot":""}