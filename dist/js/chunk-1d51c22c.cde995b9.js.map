{"version":3,"sources":["webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/vuetify/lib/components/VCombobox/VCombobox.js","webpack:///./src/components/fields/FieldSelectContact.vue?f3cd","webpack:///src/components/fields/FieldSelectContact.vue","webpack:///./src/components/fields/FieldSelectContact.vue?94b1","webpack:///./src/components/fields/FieldSelectContact.vue","webpack:///./src/graphql/querys/contactsQuery.js","webpack:///./node_modules/core-js/modules/es.string.search.js","webpack:///./node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.js"],"names":["module","exports","Object","is","x","y","extend","name","props","delimiters","type","Array","default","returnObject","Boolean","data","editingIndex","computed","this","multiple","selectedItems","length","internalSearch","toString","options","hasSlot","call","isFocused","hasDisplayedItems","$slots","hideNoData","methods","val","delimiter","find","d","endsWith","slice","updateTags","updateMenuDimensions","input","genInput","attrs","on","paste","onPaste","item","index","chip","genChipSelection","componentOptions","listeners","dblclick","getText","selectedIndex","onChipInput","e","preventDefault","getMenuIndex","$nextTick","updateSelf","oldVal","autoSelectFirst","onFilteredItemsChanged","keyCode","ctrlKey","home","end","includes","onKeyDown","left","$refs","selectionStart","enter","onEnterDown","changeSelectedIndex","stopPropagation","onTabDown","updateEditing","selectItem","toLocaleLowerCase","internalValue","value","setValue","findIndex","assign","splice","push","searchIsDirty","isUsingSlot","$scopedSlots","selection","hasChips","updateCombobox","menuIndex","itemToSelect","event","_event$clipboardData","pastedItemText","clipboardData","getData","findExistingIndex","clearableCallback","render","_vm","_h","$createElement","_c","_self","readOnly","searchContacts","list","menuProps","search","field","defaultValue","isRequired","rules","$apollo","queries","loading","changeOnTextField","$event","scopedSlots","_u","key","fn","staticClass","_v","_s","proxy","ref","companies","menu","tooltip","_g","_b","directives","rawName","expression","_l","company","_e","selected","model","callback","$$v","contact","staticRenderFns","mixins","rulesMixin","required","resetHandler","isScrolled","isNewContact","created","addDefaultValue","watch","resetValues","undefined","id","hasSearch","$emit","clearValue","apollo","query","fetchPolicy","variables","filters","skip","take","component","VChip","VCombobox","VIcon","VList","VListItem","VListItemContent","VListItemTitle","VMenu","VTooltip","GET_CONTACTS","gql","GET_SEARCH_CONTACTS","GET_CONTACT","GET_CONTACT_HISTORY","GET_CONTACTS_TO_EMAIL","GET_CONTACTS_TO_INVITES","GET_DUPLICATE_CONTACTS","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","searcher","RegExp","String","string","res","done","rx","S","previousLastIndex","lastIndex","result","defaultMenuProps","offsetY","offsetOverflow","transition","allowOverflow","filter","Function","queryText","itemText","indexOf","noFilter","searchInput","lazySearch","classes","filteredItems","map","getValue","hideSelected","some","hasItem","selectedItem","isSearching","allItems","text","$_menuProps","contentClass","trim","i","valueComparator","listData","items","virtualizedItems","document","addEventListener","onCopy","select","removeEventListener","blur","isMenuActive","activateMenu","setSearch","setMenuIndex","getTiles","updateDimensions","right","backspace","delete","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","nextIndex","nextItem","autocomplete","domProps","slot","genInputSlot","role","genSelections","onFocus","isAppendInner","target","badInput","validity","setSelectedItems","selectedValues","_event$clipboardData2","currentItem","currentItemText","setData"],"mappings":"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","file":"js/chunk-1d51c22c.cde995b9.js","sourcesContent":["// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect from '../VSelect/VSelect';\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'; // Utils\n\nimport { keyCodes } from '../../util/helpers';\n/* @vue/component */\n\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => []\n    },\n    returnObject: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: () => ({\n    editingIndex: -1\n  }),\n  computed: {\n    computedCounterValue() {\n      return this.multiple ? this.selectedItems.length : (this.internalSearch || '').toString().length;\n    },\n\n    hasSlot() {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple;\n    },\n\n    isAnyValueAllowed() {\n      return true;\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !!this.$slots['no-data'] && !this.hideNoData;\n    },\n\n    searchIsDirty() {\n      return this.internalSearch != null;\n    }\n\n  },\n  methods: {\n    onInternalSearchChanged(val) {\n      if (val && this.multiple && this.delimiters.length) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d));\n\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length);\n          this.updateTags();\n        }\n      }\n\n      this.updateMenuDimensions();\n    },\n\n    genInput() {\n      const input = VAutocomplete.options.methods.genInput.call(this);\n      delete input.data.attrs.name;\n      input.data.on.paste = this.onPaste;\n      return input;\n    },\n\n    genChipSelection(item, index) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index); // Allow user to update an existing value\n\n      if (this.multiple) {\n        chip.componentOptions.listeners = { ...chip.componentOptions.listeners,\n          dblclick: () => {\n            this.editingIndex = index;\n            this.internalSearch = this.getText(item);\n            this.selectedIndex = -1;\n          }\n        };\n      }\n\n      return chip;\n    },\n\n    onChipInput(item) {\n      VSelect.options.methods.onChipInput.call(this, item);\n      this.editingIndex = -1;\n    },\n\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown(e) {\n      e.preventDefault(); // If has menu index, let v-select-list handle\n\n      if (this.getMenuIndex() > -1) return;\n      this.$nextTick(this.updateSelf);\n    },\n\n    onFilteredItemsChanged(val, oldVal) {\n      if (!this.autoSelectFirst) return;\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal);\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n\n      if (e.ctrlKey || ![keyCodes.home, keyCodes.end].includes(keyCode)) {\n        VSelect.options.methods.onKeyDown.call(this, e);\n      } // If user is at selection index of 0\n      // create a new tag\n\n\n      if (this.multiple && keyCode === keyCodes.left && this.$refs.input.selectionStart === 0) {\n        this.updateSelf();\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e);\n      } // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onTabDown(e) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple && this.internalSearch && this.getMenuIndex() === -1) {\n        e.preventDefault();\n        e.stopPropagation();\n        return this.updateTags();\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e);\n    },\n\n    selectItem(item) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing();\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item); // if selected item contains search value,\n        // remove the search string\n\n        if (this.internalSearch && this.multiple && this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())) {\n          this.internalSearch = null;\n        }\n      }\n    },\n\n    setSelectedItems() {\n      if (this.internalValue == null || this.internalValue === '') {\n        this.selectedItems = [];\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue];\n      }\n    },\n\n    setValue(value) {\n      VSelect.options.methods.setValue.call(this, value != null ? value : this.internalSearch);\n    },\n\n    updateEditing() {\n      const value = this.internalValue.slice();\n      const index = this.selectedItems.findIndex(item => this.getText(item) === this.internalSearch); // If user enters a duplicate text on chip edit,\n      // don't add it, move it to the end of the list\n\n      if (index > -1) {\n        const item = typeof value[index] === 'object' ? Object.assign({}, value[index]) : value[index];\n        value.splice(index, 1);\n        value.push(item);\n      } else {\n        value[this.editingIndex] = this.internalSearch;\n      }\n\n      this.setValue(value);\n      this.editingIndex = -1;\n      this.internalSearch = null;\n    },\n\n    updateCombobox() {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return; // The internal search is not matching\n      // the internal value, update the input\n\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue(); // Reset search if using slot to avoid a double input\n\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips;\n      if (isUsingSlot) this.internalSearch = null;\n    },\n\n    updateSelf() {\n      this.multiple ? this.updateTags() : this.updateCombobox();\n    },\n\n    updateTags() {\n      const menuIndex = this.getMenuIndex(); // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n\n      if (menuIndex < 0 && !this.searchIsDirty || !this.internalSearch) return;\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing();\n      }\n\n      const index = this.selectedItems.findIndex(item => this.internalSearch === this.getText(item)); // If the duplicate item is an object,\n      // copy it, so that it can be added again later\n\n      const itemToSelect = index > -1 && typeof this.selectedItems[index] === 'object' ? Object.assign({}, this.selectedItems[index]) : this.internalSearch; // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n\n      if (index > -1) {\n        const internalValue = this.internalValue.slice();\n        internalValue.splice(index, 1);\n        this.setValue(internalValue);\n      } // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n\n\n      if (menuIndex > -1) return this.internalSearch = null;\n      this.selectItem(itemToSelect);\n      this.internalSearch = null;\n    },\n\n    onPaste(event) {\n      var _event$clipboardData;\n\n      if (!this.multiple || this.searchIsDirty) return;\n      const pastedItemText = (_event$clipboardData = event.clipboardData) == null ? void 0 : _event$clipboardData.getData('text/vnd.vuetify.autocomplete.item+plain');\n\n      if (pastedItemText && this.findExistingIndex(pastedItemText) === -1) {\n        event.preventDefault();\n        VSelect.options.methods.selectItem.call(this, pastedItemText);\n      }\n    },\n\n    clearableCallback() {\n      this.editingIndex = -1;\n      VAutocomplete.options.methods.clearableCallback.call(this);\n    }\n\n  }\n});\n//# sourceMappingURL=VCombobox.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-combobox',{attrs:{\"readonly\":_vm.readOnly,\"items\":_vm.searchContacts.list,\"menu-props\":_vm.menuProps,\"search-input\":_vm.search,\"disabled\":_vm.field.defaultValue ? true : false,\"rules\":_vm.field.isRequired ? _vm.rules.isRequired : [],\"hint\":_vm.field.isRequired ? '* Este campo es obligatorio' : '',\"item-value\":\"id\",\"item-text\":\"name\",\"maxlength\":\"50\",\"label\":\"Contacto\",\"hide-details\":\"auto\",\"prepend-icon\":\"mdi-account-tie\",\"outlined\":\"\",\"clearable\":\"\",\"full-width\":\"\",\"hide-selected\":\"\",\"persistent-hint\":\"\",\"hide-no-data\":_vm.$apollo.queries.searchContacts.loading},on:{\"change\":_vm.changeOnTextField,\"update:searchInput\":function($event){_vm.search=$event},\"update:search-input\":function($event){_vm.search=$event}},scopedSlots:_vm._u([{key:\"no-data\",fn:function(){return [_c('v-list-item',{staticClass:\"mt-2\"},[_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\" presiona el botón \"),_c('kbd',[_vm._v(\"entrar\")]),_vm._v(\" para crear a \"),_c('strong',[_vm._v(_vm._s(_vm.search))])])],1)],1)]},proxy:true},{key:\"item\",fn:function(ref){\nvar index = ref.index;\nvar item = ref.item;\nreturn [_c('span',{key:index},[_vm._v(\" \"+_vm._s(item.name)+\" \"),(item.companies.length > 0)?_c('span',[_vm._v(\" ( \"),_c('v-icon',{staticClass:\"mr-1\",attrs:{\"x-small\":\"\"}},[_vm._v(\" mdi-domain \")]),_vm._v(\" \"+_vm._s(item.companies[0].name)+\" \"),_c('v-menu',{attrs:{\"allow-overflow\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar menu = ref.on;\nvar attrs = ref.attrs;\nreturn [_c('v-tooltip',{attrs:{\"top\":\"\",\"color\":\"white\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar tooltip = ref.on;\nreturn [_c('v-chip',_vm._g(_vm._b({directives:[{name:\"show\",rawName:\"v-show\",value:(item.companies.length > 1),expression:\"item.companies.length > 1\"}],staticClass:\"ml-1 pa-1\",attrs:{\"outlined\":\"\",\"x-small\":\"\"}},'v-chip',attrs,false),Object.assign({}, tooltip, menu)),[_vm._v(\" + \"+_vm._s(item.companies.length)+\" \")])]}}],null,true)},[_c('span',{staticClass:\"black--text\"},[_vm._v(\" Este contacto cuenta con más de una empresa has click para ver \")])])]}}],null,true)},[_c('v-list',_vm._l((item.companies),function(company,index){return _c('v-list-item',{key:index,attrs:{\"dense\":\"\"}},[_c('v-icon',{staticClass:\"mr-2\",attrs:{\"small\":\"\"}},[_vm._v(\"mdi-domain\")]),_c('v-list-item-title',[_vm._v(_vm._s(company.name))])],1)}),1)],1),_vm._v(\" ) \")],1):_vm._e()])]}},{key:\"selection\",fn:function(ref){\nvar attrs = ref.attrs;\nvar item = ref.item;\nvar selected = ref.selected;\nreturn [_c('span',_vm._b({attrs:{\"input-value\":selected}},'span',attrs,false),[_vm._v(\" \"+_vm._s(item.name ? item.name : item)+\" \")])]}},(_vm.isNewContact)?{key:\"append\",fn:function(){return [_c('v-chip',{attrs:{\"x-small\":\"\",\"color\":\"success\"}},[_vm._v(\" Nuevo \")])]},proxy:true}:null],null,true),model:{value:(_vm.contact),callback:function ($$v) {_vm.contact=$$v},expression:\"contact\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-combobox\n    v-model=\"contact\"\n    @change=\"changeOnTextField\"\n    :readonly=\"readOnly\"\n    :items=\"searchContacts.list\"\n    :menu-props=\"menuProps\"\n    :search-input.sync=\"search\"\n    :disabled=\"field.defaultValue ? true : false\"\n    :rules=\"field.isRequired ? rules.isRequired : []\"\n    :hint=\"field.isRequired ? '* Este campo es obligatorio' : ''\"\n    item-value=\"id\"\n    item-text=\"name\"\n    maxlength=\"50\"\n    label=\"Contacto\"\n    hide-details=\"auto\"\n    prepend-icon=\"mdi-account-tie\"\n    outlined\n    clearable\n    full-width\n    hide-selected\n    persistent-hint\n    :hide-no-data=\"$apollo.queries.searchContacts.loading\"\n  >\n    <template v-slot:no-data>\n      <v-list-item class=\"mt-2\">\n        <v-list-item-content>\n          <v-list-item-title>\n            presiona el botón\n            <kbd>entrar</kbd>\n            para crear a\n            <strong>{{ search }}</strong>\n          </v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </template>\n    <template v-slot:item=\"{ index, item }\">\n      <span :key=\"index\">\n        {{ item.name }}\n        <span v-if=\"item.companies.length > 0\">\n          (\n          <v-icon x-small class=\"mr-1\">\n            mdi-domain\n          </v-icon>\n          {{ item.companies[0].name }}\n          <v-menu allow-overflow>\n            <template v-slot:activator=\"{ on: menu, attrs }\">\n              <v-tooltip top color=\"white\">\n                <template v-slot:activator=\"{ on: tooltip }\">\n                  <v-chip\n                    outlined\n                    class=\"ml-1 pa-1\"\n                    v-show=\"item.companies.length > 1\"\n                    v-bind=\"attrs\"\n                    v-on=\"{ ...tooltip, ...menu }\"\n                    x-small\n                  >\n                    + {{ item.companies.length }}\n                  </v-chip>\n                </template>\n                <span class=\"black--text\">\n                  Este contacto cuenta con más de una empresa has click para ver\n                </span>\n              </v-tooltip>\n            </template>\n            <v-list>\n              <v-list-item\n                v-for=\"(company, index) in item.companies\"\n                :key=\"index\"\n                dense\n              >\n                <v-icon class=\"mr-2\" small>mdi-domain</v-icon>\n                <v-list-item-title>{{ company.name }}</v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n          )\n        </span>\n      </span>\n    </template>\n    <template v-slot:selection=\"{ attrs, item, selected }\">\n      <span v-bind=\"attrs\" :input-value=\"selected\">\n        {{ item.name ? item.name : item }}\n      </span>\n    </template>\n    <template v-if=\"isNewContact\" v-slot:append>\n      <v-chip x-small color=\"success\">\n        Nuevo\n      </v-chip>\n    </template>\n  </v-combobox>\n</template>\n\n<script>\nimport { rulesMixin } from '@/mixins/rulesMixin';\nimport { GET_SEARCH_CONTACTS } from '@/graphql/querys/contactsQuery';\n\nexport default {\n  name: 'FieldSelectContact',\n  mixins: [rulesMixin],\n  props: {\n    field: {\n      type: Object,\n      required: true,\n    },\n    resetHandler: {\n      type: Boolean,\n      default: false,\n    },\n    isScrolled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      search: '',\n      contact: '',\n      searchContacts: {},\n      isNewContact: false,\n    };\n  },\n  created() {\n    if (this.field.defaultValue) {\n      this.addDefaultValue();\n    }\n  },\n  watch: {\n    resetHandler(value) {\n      if (!value) this.resetValues();\n      else if (this.field.defaultValue) {\n        this.addDefaultValue();\n      }\n    },\n    contact(value) {\n      if (value) {\n        this.isNewContact = value.id === undefined;\n        this.field.value = value.id ? value : { name: value };\n      } else if (!value) this.isNewContact = false;\n    },\n  },\n  computed: {\n    hasSearch() {\n      if (\n        this.search !== null &&\n        this.search !== undefined &&\n        this.search !== ''\n      ) {\n        return this.search.length > 2;\n      }\n      return false;\n    },\n    // Hide the submenu when search is empty\n    menuProps() {\n      return this.isScrolled || !this.search ? { value: false } : {};\n    },\n    readOnly() {\n      if (\n        this.contact === null ||\n        this.contact === undefined ||\n        this.contact === ''\n      ) {\n        return false;\n      }\n      return true;\n    },\n  },\n  methods: {\n    changeOnTextField() {\n      this.$emit('scrolled', false);\n    },\n    addDefaultValue() {\n      this.contact = { ...this.field.defaultValue };\n    },\n    clearValue() {\n      this.contact = '';\n      this.isNewContact = true;\n    },\n    resetValues() {\n      delete this.field.defaultValue;\n      delete this.field.value;\n      this.isNewContact = false;\n      this.contact = '';\n    },\n  },\n  apollo: {\n    searchContacts: {\n      query: GET_SEARCH_CONTACTS,\n      fetchPolicy: 'no-cache',\n      variables() {\n        return {\n          filters: {\n            search: this.search,\n            skip: 0,\n            take: 10,\n          },\n        };\n      },\n      skip() {\n        return !this.hasSearch;\n      },\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./FieldSelectContact.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./FieldSelectContact.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FieldSelectContact.vue?vue&type=template&id=0c8bd426&\"\nimport script from \"./FieldSelectContact.vue?vue&type=script&lang=js&\"\nexport * from \"./FieldSelectContact.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCombobox } from 'vuetify/lib/components/VCombobox';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\nimport { VListItemTitle } from 'vuetify/lib/components/VList';\nimport { VMenu } from 'vuetify/lib/components/VMenu';\nimport { VTooltip } from 'vuetify/lib/components/VTooltip';\ninstallComponents(component, {VChip,VCombobox,VIcon,VList,VListItem,VListItemContent,VListItemTitle,VMenu,VTooltip})\n","import gql from 'graphql-tag';\n\nexport const GET_CONTACTS = gql`\n  query getContacts($filters: FilterContacts, $importId: ID) {\n    contacts(filters: $filters, importId: $importId) {\n      count\n      informationBar {\n        totalCount\n        contactsWithOpenDeals\n        contactsWithWonDeals\n      }\n      list {\n        id\n        name\n        email\n        phones\n        isClient\n        socialMedias\n        birthday\n        createdAt\n        updatedAt\n        customForms\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        contactCounts {\n          openDeals\n          closedDeals\n          lostDeals\n          wonDeals\n          emailMessages\n          totalActivities\n          doneActivities\n          undoneActivities\n          files\n          notes\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        tags {\n          id\n          name\n          color\n          order\n        }\n        companies {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_SEARCH_CONTACTS = gql`\n  query getContacts($filters: FilterContacts, $importId: ID) {\n    searchContacts: contacts(filters: $filters, importId: $importId) {\n      list {\n        id\n        name\n        companies {\n          id\n          name\n        }\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACT = gql`\n  query GetContact($contactId: ID!) {\n    contact(contactId: $contactId) {\n      id\n      name\n      email\n      phones\n      isClient\n      socialMedias\n      birthday\n      customForms\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n        }\n      }\n      enterprise {\n        id\n        name\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      companies {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      deals {\n        id\n        title\n        value\n        status\n        contact {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        stage {\n          id\n        }\n        pipeline {\n          id\n          stages {\n            id\n          }\n        }\n        owner {\n          id\n        }\n      }\n      createdAt\n      isDelete\n    }\n  }\n`;\n\nexport const GET_CONTACT_HISTORY = gql`\n  query GetContactHistory($contactId: ID!) {\n    contactHistory: contact(contactId: $contactId) {\n      id\n      name\n      email\n      files\n      import {\n        id\n      }\n      activityEmailStream {\n        id\n        flow\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n      }\n      activityStream {\n        id\n        flow\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        companies {\n          id\n          name\n        }\n        deals {\n          id\n          title\n        }\n        customs {\n          id\n          label\n        }\n      }\n      notes {\n        id\n        content\n        type\n        createdAt\n        userTags {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        comments {\n          id\n          comment\n          createdAt\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n        }\n      }\n      activities {\n        id\n        title\n        status\n        start\n        end\n        location\n        description\n        deal {\n          id\n          title\n        }\n        contacts {\n          id\n          name\n        }\n        companies {\n          id\n          name\n        }\n        type {\n          id\n          name\n          color\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        notes {\n          id\n          content\n          type\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n          comments {\n            id\n            comment\n            userTags {\n              id\n            }\n            createdBy {\n              id\n              user {\n                id\n                name\n                lastName\n              }\n            }\n            createdAt\n          }\n        }\n        completedDate\n        createdAt\n        isAllDay\n        guests\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACTS_TO_EMAIL = gql`\n  query getContactsToEmail($filters: FilterContacts) {\n    contacts(filters: $filters) {\n      list {\n        id\n        name\n        email\n        birthday\n        companies {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACTS_TO_INVITES = gql`\n  query getContactsToInvites($filters: FilterContacts) {\n    contacts(filters: $filters) {\n      list {\n        id\n        name\n        email\n      }\n    }\n  }\n`;\n\nexport const GET_DUPLICATE_CONTACTS = gql`\n  query DuplicateContacts {\n    duplicateContacts {\n      list {\n        id\n        name\n        email\n        phones\n        companies {\n          id\n          name\n        }\n        contactCounts {\n          openDeals\n          totalActivities\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdAt\n      }\n    }\n  }\n`;\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.es/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n    function (string) {\n      var res = maybeCallNative(nativeSearch, this, string);\n      if (res.done) return res.value;\n\n      var rx = anObject(this);\n      var S = String(string);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect';\nimport VTextField from '../VTextField/VTextField'; // Utilities\n\nimport mergeData from '../../util/mergeData';\nimport { getObjectValueByPath, getPropertyFromItem, keyCodes } from '../../util/helpers';\nconst defaultMenuProps = { ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n};\n/* @vue/component */\n\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    },\n    filter: {\n      type: Function,\n      default: (item, queryText, itemText) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String\n    }\n  },\n\n  data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      };\n    },\n\n    computedItems() {\n      return this.filteredItems;\n    },\n\n    selectedValues() {\n      return this.selectedItems.map(item => this.getValue(item));\n    },\n\n    hasDisplayedItems() {\n      return this.hideSelected ? this.filteredItems.some(item => !this.hasItem(item)) : this.filteredItems.length > 0;\n    },\n\n    currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n\n    filteredItems() {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText);\n        const text = value != null ? String(value) : '';\n        return this.filter(item, String(this.internalSearch), text);\n      });\n    },\n\n    internalSearch: {\n      get() {\n        return this.lazySearch;\n      },\n\n      set(val) {\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val;\n          this.$emit('update:search-input', val);\n        }\n      }\n\n    },\n\n    isAnyValueAllowed() {\n      return false;\n    },\n\n    isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n\n    isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n\n    $_menuProps() {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      props.contentClass = `v-autocomplete__content ${props.contentClass || ''}`.trim();\n      return { ...defaultMenuProps,\n        ...props\n      };\n    },\n\n    searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n\n    selectedItem() {\n      if (this.multiple) return null;\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue));\n      });\n    },\n\n    listData() {\n      const data = VSelect.options.computed.listData.call(this);\n      data.props = { ...data.props,\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      };\n      return data;\n    }\n\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n\n    isFocused(val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy);\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        document.removeEventListener('copy', this.onCopy);\n        this.blur();\n        this.updateSelf();\n      }\n    },\n\n    isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = null;\n    },\n\n    items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n\n    searchInput(val) {\n      this.lazySearch = val;\n    },\n\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n\n  created() {\n    this.setSearch();\n  },\n\n  destroyed() {\n    document.removeEventListener('copy', this.onCopy);\n  },\n\n  methods: {\n    onFilteredItemsChanged(val, oldVal) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return;\n      this.setMenuIndex(-1);\n      this.$nextTick(() => {\n        if (!this.internalSearch || val.length !== 1 && !this.autoSelectFirst) return;\n        this.$refs.menu.getTiles();\n        this.setMenuIndex(0);\n      });\n    },\n\n    onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n\n    updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n\n    changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem();\n      }\n    },\n\n    deleteCurrentItem() {\n      const curIndex = this.selectedIndex;\n      const curItem = this.selectedItems[curIndex]; // Do nothing if input or item is disabled\n\n      if (!this.isInteractive || this.getDisabled(curItem)) return;\n      const lastIndex = this.selectedItems.length - 1; // Select the last item if\n      // there is no selection\n\n      if (this.selectedIndex === -1 && lastIndex !== 0) {\n        this.selectedIndex = lastIndex;\n        return;\n      }\n\n      const length = this.selectedItems.length;\n      const nextIndex = curIndex !== length - 1 ? curIndex : curIndex - 1;\n      const nextItem = this.selectedItems[nextIndex];\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null);\n      } else {\n        this.selectItem(curItem);\n      }\n\n      this.selectedIndex = nextIndex;\n    },\n\n    clearableCallback() {\n      this.internalSearch = null;\n      VSelect.options.methods.clearableCallback.call(this);\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data = mergeData(input.data, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data, 'attrs.autocomplete', 'off')\n        },\n        domProps: {\n          value: this.internalSearch\n        }\n      });\n      return input;\n    },\n\n    genInputSlot() {\n      const slot = VSelect.options.methods.genInputSlot.call(this);\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n\n    genSelections() {\n      return this.hasSlot || this.multiple ? VSelect.options.methods.genSelections.call(this) : [];\n    },\n\n    onClick(e) {\n      if (!this.isInteractive) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      if (!this.isAppendInner(e.target)) this.activateMenu();\n    },\n\n    onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      const target = e.target;\n      const value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n\n      if (e.ctrlKey || ![keyCodes.home, keyCodes.end].includes(keyCode)) {\n        VSelect.options.methods.onKeyDown.call(this, e);\n      } // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onSpaceDown(e) {},\n\n    onTabDown(e) {\n      VSelect.options.methods.onTabDown.call(this, e);\n      this.updateSelf();\n    },\n\n    onUpDown(e) {\n      // Prevent screen from scrolling\n      e.preventDefault(); // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n\n      this.activateMenu();\n    },\n\n    selectItem(item) {\n      VSelect.options.methods.selectItem.call(this, item);\n      this.setSearch();\n    },\n\n    setSelectedItems() {\n      VSelect.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n      if (!this.isFocused) this.setSearch();\n    },\n\n    setSearch() {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (!this.multiple || !this.internalSearch || !this.isMenuActive) {\n          this.internalSearch = !this.selectedItems.length || this.multiple || this.hasSlot ? null : this.getText(this.selectedItem);\n        }\n      });\n    },\n\n    updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n\n      if (!this.multiple && !this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n\n    hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n\n    onCopy(event) {\n      var _event$clipboardData, _event$clipboardData2;\n\n      if (this.selectedIndex === -1) return;\n      const currentItem = this.selectedItems[this.selectedIndex];\n      const currentItemText = this.getText(currentItem);\n      (_event$clipboardData = event.clipboardData) == null ? void 0 : _event$clipboardData.setData('text/plain', currentItemText);\n      (_event$clipboardData2 = event.clipboardData) == null ? void 0 : _event$clipboardData2.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n\n  }\n});\n//# sourceMappingURL=VAutocomplete.js.map"],"sourceRoot":""}