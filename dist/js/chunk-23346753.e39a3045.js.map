{"version":3,"sources":["webpack:///./src/mixins/dealsMixin.js","webpack:///./node_modules/core-js/internals/engine-ff-version.js","webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/internals/engine-webkit-version.js","webpack:///./src/graphql/mutations/dealsMutations.js","webpack:///./src/graphql/querys/dealsQuery.js","webpack:///./src/graphql/querys/contactsQuery.js","webpack:///./node_modules/core-js/modules/es.string.search.js","webpack:///./src/helpers/utils.js","webpack:///./node_modules/core-js/internals/array-sort.js","webpack:///./src/views/Contact.vue?f1bc","webpack:///src/views/Contact.vue","webpack:///./src/views/Contact.vue?ba7e","webpack:///./src/views/Contact.vue","webpack:///./node_modules/core-js/internals/engine-is-ie-or-edge.js","webpack:///./src/graphql/querys/formsQuery.js","webpack:///./src/mixins/profilesMixin.js"],"names":["dealsMixin","data","PERMISSIONS_DEALS","inputsForm","isLoadingDeals","loadingSearch","isLoadingUpdateDeal","modalDeal","isOpen","isLoading","infoError","icon","title","message","filters","search","orderBy","skip","take","sortBy","sortDesc","isDelete","listDeals","informationBarDeals","resultSearchDeals","totalDeals","searchDeal","searchFilters","dealsSelected","watch","value","Object","keys","length","this","getSearchDeals","$emit","computed","menuProps","methods","modalHandlerDeal","createDeal","contact","company","tags","customForms","expectedCloseDate","pipeline","pipelineId","stageId","owner","$apollo","mutate","mutation","CREATE_DEAL","variables","input","id","ownerId","then","updateData","$route","name","updateViewPipeline","params","setTimeout","typeItem","updateHistory","addDeal","catch","error","modalHandlerError","updateDeal","status","comments","lostReason","customForm","undefined","UPDATE_DEAL","modalHandlerLostDeal","query","GET_SEARCH_DEALS","fetchPolicy","deals","list","getDeals","GET_DEALS","importId","filterId","informationBar","map","deal","forEach","count","isErrorDeals","restoreDealsConfirmation","modalHandlerRestore","nameItem","text","infoRestore","restoreDeals","RESTORE_DEALS","update","snackbarHandler","color","finally","deleteDealConfirmation","type","modalHandlerDelete","infoDelete","deleteDeal","DELETE_DEAL","trashDealsConfirmation","trashDeals","TRASH_DEALS","goToProfile","$router","push","userAgent","firefox","match","module","exports","is","x","y","$","aFunction","toObject","toLength","fails","internalSort","arrayMethodIsStrict","FF","IE_OR_EDGE","V8","WEBKIT","test","nativeSort","sort","FAILS_ON_UNDEFINED","FAILS_ON_NULL","STRICT_METHOD","STABLE_SORT","code","chr","index","result","String","fromCharCode","k","v","a","b","charAt","FORCED","getSortCompare","comparefn","target","proto","forced","array","call","itemsLength","items","arrayLength","webkit","gql","CHANGE_DEAL_STAGE","CHANGE_DEAL_PIPELINE","CREATE_LOST_REASON","DELETE_LOST_REASON","UPDATE_LOST_REASON","UPDATE_OWNER_DEALS","GET_DEAL","GET_DEAL_HISTORY","GET_LOST_REASONS","GET_DEALS_TO_ACTIVITY","GET_CONTACTS","GET_SEARCH_CONTACTS","GET_CONTACT","GET_CONTACT_HISTORY","GET_CONTACTS_TO_EMAIL","GET_CONTACTS_TO_INVITES","GET_DUPLICATE_CONTACTS","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","searcher","RegExp","string","res","done","rx","S","previousLastIndex","lastIndex","UTIL_ORDER","listItems","nextElement","elementBefore","elementAfter","orderedElementsASC","orderedElementsDESC","floor","Math","mergeSort","middle","insertionSort","merge","slice","element","j","i","left","right","llength","rlength","lindex","rindex","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","attrs","queries","loading","on","updateContact","getForm","companies","updateContactCompany","contactHistory","staticRenderFns","mixins","profilesMixin","contactUpdated","contactUpdates","refetch","apollo","contactId","component","VCol","VContainer","VRow","UA","GET_FORM","GET_FORM_EMAIL","components","History","Header","Details","ListCompanies","ListContacts","ListDeals","ModalDeal","SubHeader","DealCompany","DealContact","keyInput","defaultValue","JSON","parse","stringify","defaultForm","inputs","concat","orderInputs"],"mappings":"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","file":"js/chunk-23346753.e39a3045.js","sourcesContent":["import {\n  CREATE_DEAL,\n  DELETE_DEAL,\n  UPDATE_DEAL,\n  TRASH_DEALS,\n  RESTORE_DEALS,\n} from '@/graphql/mutations/dealsMutations';\nimport { GET_DEALS, GET_SEARCH_DEALS } from '@/graphql/querys/dealsQuery';\nimport { PERMISSIONS_DEALS } from '@/constants/permissions';\n\nexport const dealsMixin = {\n  data() {\n    return {\n      PERMISSIONS_DEALS,\n      inputsForm: [],\n      isLoadingDeals: false,\n      loadingSearch: false,\n      isLoadingUpdateDeal: false,\n      modalDeal: {\n        isOpen: false,\n        isLoading: false,\n      },\n      infoError: {\n        icon: 'mdi-account-search-outline',\n        title: '',\n        message: 'No se encontraron tratos',\n      },\n      filters: {\n        search: '',\n        orderBy: 'desc',\n        skip: 0,\n        take: 0,\n        sortBy: [],\n        sortDesc: [],\n        isDelete: false,\n      },\n      listDeals: [],\n      informationBarDeals: {},\n      resultSearchDeals: [],\n      totalDeals: 0,\n      searchDeal: '',\n      searchFilters: {\n        search: '',\n        take: 5,\n      },\n      dealsSelected: [],\n    };\n  },\n  watch: {\n    searchDeal(value) {\n      if (value) {\n        if (Object.keys(value).length >= 2) {\n          this.searchFilters.search = value;\n          this.searchFilters.take = 5;\n          this.getSearchDeals();\n        }\n        if (Object.keys(value).length === 0) {\n          // console.log('longitud de busqueda cero');\n          this.searchFilters.search = '';\n          this.searchFilters.take = 0;\n          this.getSearchDeals();\n        }\n      }\n    },\n    isLoadingDeals(value) {\n      this.$emit('isLoadingDeals', value);\n    },\n  },\n  computed: {\n    menuProps() {\n      return !this.searchDeal ? { value: false } : {};\n    },\n  },\n  methods: {\n    modalHandlerDeal({ isOpen, isLoading }) {\n      this.modalDeal = { isOpen, isLoading };\n    },\n    createDeal({\n      title,\n      contact,\n      company,\n      value,\n      tags,\n      customForms,\n      expectedCloseDate,\n      pipeline: { pipelineId, stageId },\n      owner,\n    }) {\n      this.modalHandlerDeal({\n        isOpen: true,\n        isLoading: true,\n      });\n      this.$apollo\n        .mutate({\n          mutation: CREATE_DEAL,\n          variables: {\n            input: {\n              title,\n              tags,\n              customForms,\n              expectedCloseDate,\n              contact: contact?.id ? { id: contact.id } : contact,\n              company: company?.id ? { id: company.id } : company,\n              value,\n              pipelineId,\n              stageId,\n              ownerId: owner.id,\n            },\n          },\n        })\n        .then(({ data: { createDeal } }) => {\n          this.updateData = true;\n          this.modalHandlerDeal({\n            isOpen: false,\n            isLoading: false,\n          });\n          if (this.$route.name === 'pipeline-id') {\n            this.updateViewPipeline(this.$route.params.id);\n          }\n          this.updateData = true;\n\n          setTimeout(() => {\n            this.updateData = false;\n          }, 10);\n\n          this.$emit('updateHistory');\n\n          if (this.typeItem === 'CONTACT' || this.typeItem === 'COMPANY') {\n            this.updateHistory();\n            this.addDeal(createDeal);\n          }\n        })\n        .catch(() => {\n          const error =\n            'No se pudo crear el trato intente de nuevo o contacte al soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    updateDeal({\n      id,\n      value,\n      expectedCloseDate,\n      company,\n      contact,\n      tags,\n      status,\n      comments,\n      lostReason,\n      owner,\n      title,\n      customForm,\n    }) {\n      this.isLoadingUpdateDeal = true;\n      const input = {};\n      input.id = id;\n      if (value || value === 0) {\n        input.value = value;\n      }\n      if (expectedCloseDate || expectedCloseDate !== undefined) {\n        input.expectedCloseDate = expectedCloseDate;\n      }\n      if (company) {\n        input.company = company;\n      }\n      if (contact) {\n        input.contact = contact;\n      }\n      if (tags) {\n        input.tags = tags;\n      }\n      if (owner) {\n        input.ownerId = owner.id;\n      }\n      if (title) {\n        input.title = title;\n      }\n      if (customForm) {\n        input.customForm = customForm;\n      }\n      if (status) {\n        input.status = status;\n        if (status === 'LOST') {\n          input.comments = comments;\n          input.lostReason = lostReason;\n        }\n      }\n\n      this.$apollo\n        .mutate({\n          // Query\n          mutation: UPDATE_DEAL,\n          // Parameters\n          variables: {\n            input,\n          },\n        })\n        .then(({ data: { updateDeal } }) => {\n          if (input.status === 'LOST') {\n            this.modalHandlerLostDeal({ isOpen: false, isLoading: false });\n          }\n          this.$emit('updateItem', updateDeal);\n          this.$emit('updateHistory');\n          // Close edit field\n          this.isLoadingUpdateDeal = false;\n\n          if (this.typeItem === 'CONTACT' || this.typeItem === 'COMPANY') {\n            this.updateHistory();\n            this.addDeal(updateDeal);\n          }\n        })\n        .catch(() => {\n          this.isLoadingUpdateDeal = false;\n          // Error\n          const error =\n            'No se pudo actualizar el trato, intente de nuevo o contacte a soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    getSearchDeals() {\n      this.loadingSearch = true;\n      this.$apollo\n        .query({\n          query: GET_SEARCH_DEALS,\n          fetchPolicy: 'no-cache',\n          variables: {\n            filters: this.searchFilters,\n          },\n        })\n        .then(({ data: { deals } }) => {\n          this.resultSearchDeals = deals.list;\n          this.loadingSearch = false;\n        })\n        .catch(() => {\n          this.loadingSearch = false;\n        });\n    },\n    getDeals() {\n      this.isLoadingDeals = true;\n      this.$apollo\n        .query({\n          query: GET_DEALS,\n          fetchPolicy: 'no-cache',\n          variables: {\n            filters: this.filters,\n            importId: this.$route.query.filterId,\n          },\n        })\n        .then(({ data: { deals } }) => {\n          this.isLoadingDeals = false;\n          this.$emit('deals', deals.list);\n          this.$emit('informationBar', deals.informationBar);\n          this.listDeals = deals.list.map((deal) => {\n            if (deal.customForms) {\n              deal.customForms.forEach(({ id, value }) => {\n                // eslint-disable-next-line\n                deal[id] = value;\n              });\n            }\n            return deal;\n          });\n          this.totalDeals = deals.count;\n\n          this.isErrorDeals = false;\n          this.$emit('endUpdateData');\n        })\n        .catch(() => {\n          this.isErrorDeals = true;\n          this.isLoadingDeals = false;\n          this.listDeals = [];\n          this.totalDeals = 0;\n          this.$emit('endUpdateData');\n          this.infoError = {\n            icon: 'mdi-alert-outline',\n            title: 'Error',\n            message:\n              'No se ha podido cargar ningún trato, intente de nuevo o contacte a soporte',\n          };\n        });\n    },\n    restoreDealsConfirmation() {\n      this.modalHandlerRestore({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          title: '¿Seguro que deseas restaurar?',\n          nameItem: 'Los tratos seleccionados',\n          text: 'serán restaurados',\n        },\n        infoRestore: {},\n      });\n    },\n    restoreDeals({ isOpen, isLoading, message, infoRestore }) {\n      this.modalHandlerRestore({\n        isOpen,\n        isLoading,\n        message,\n        infoRestore,\n      });\n      this.$apollo\n        .mutate({\n          mutation: RESTORE_DEALS,\n          variables: {\n            input: this.dealsSelected,\n          },\n          update: () => {\n            // indicamos que se deve de actualizar la vista de contactos\n            this.updateData = true;\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Los tratos fueron restaurados correctamente',\n            });\n          },\n        })\n        .finally(() => {\n          this.modalHandlerRestore({\n            isOpen: false,\n            isLoading,\n            message,\n            infoRestore,\n          });\n          this.updateData = false;\n        })\n        .catch(() => {\n          const error =\n            'No se pudo restaurar el trato intente de nuevo o contacte al soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    deleteDealConfirmation(type, deals) {\n      this.modalHandlerDelete({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          title: '¿Seguro que deseas mover a la papelera?',\n          nameItem: 'Los tratos seleccionados',\n          text: 'serán movidos a la papelera',\n        },\n        infoDelete: {\n          type,\n          deals,\n        },\n      });\n    },\n    deleteDeal({ isOpen, isLoading, message, infoDelete }) {\n      this.modalHandlerDelete({ isOpen, isLoading, message, infoDelete });\n      this.$apollo\n        .mutate({\n          mutation: DELETE_DEAL,\n          variables: {\n            input: infoDelete.deals,\n          },\n          update: () => {\n            // indicamos que se deve de actualizar la vista de contactos\n            this.updateData = true;\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Los tratos fueron eliminados correctamente',\n            });\n          },\n        })\n        .finally(() => {\n          this.updateData = false;\n          this.modalHandlerDelete({\n            isOpen: false,\n            isLoading,\n            message,\n            infoDelete,\n          });\n        })\n        .catch(() => {\n          const error =\n            'No se pudo eliminar el trato intente de nuevo o contacte al soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    trashDealsConfirmation(type, deals) {\n      this.modalHandlerDelete({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          nameItem: 'Los tratos seleccionados',\n          text: 'serán eliminados permanentemente',\n        },\n        infoDelete: {\n          type,\n          deals,\n        },\n      });\n    },\n    trashDeals({ isOpen, isLoading, message, infoDelete }) {\n      this.modalHandlerDelete({ isOpen, isLoading, message, infoDelete });\n      this.$apollo\n        .mutate({\n          mutation: TRASH_DEALS,\n          variables: {\n            input: infoDelete.deals,\n          },\n          update: () => {\n            // indicamos que se deve de actualizar la vista de contactos\n            this.updateData = true;\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Los tratos fueron eliminados correctamente',\n            });\n          },\n        })\n        .finally(() => {\n          this.updateData = false;\n          this.modalHandlerDelete({\n            isOpen: false,\n            isLoading,\n            message,\n            infoDelete,\n          });\n        })\n        .catch(() => {\n          const error =\n            'No se pudo eliminar el trato intente de nuevo o contacte al soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    goToProfile(id) {\n      this.$router.push(`/deal/${id}`);\n    },\n  },\n};\n","var userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar nativeSort = test.sort;\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return String(x) > String(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aFunction(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? nativeSort.call(array) : nativeSort.call(array, comparefn);\n\n    var items = [];\n    var arrayLength = toLength(array.length);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) items.push(array[index]);\n    }\n\n    items = internalSort(items, getSortCompare(comparefn));\n    itemsLength = items.length;\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) delete array[index++];\n\n    return array;\n  }\n});\n","var userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","import gql from 'graphql-tag';\n\nexport const CREATE_DEAL = gql`\n  mutation CreateDeal($input: CreateDeal!) {\n    createDeal(dealInput: $input) {\n      id\n      title\n      value\n      status\n      expectedCloseDate\n      dateStatus\n      activity\n      rottenTime\n      owner {\n        user {\n          id\n          name\n          lastName\n          config {\n            profileUrl\n          }\n        }\n      }\n      company {\n        id\n        name\n      }\n      contact {\n        id\n        name\n      }\n      stage {\n        id\n        name\n      }\n      pipeline {\n        id\n        name\n        stages {\n          id\n          name\n          order\n        }\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n    }\n  }\n`;\n\nexport const UPDATE_DEAL = gql`\n  mutation UpdateDeal($input: UpdateDeal!) {\n    updateDeal(dealInput: $input) {\n      id\n      title\n      value\n      status\n      expectedCloseDate\n      dateStatus\n      activity\n      files\n      customForms\n      rottenTime\n      lostDeal {\n        id\n        lostReason {\n          id\n          reason\n        }\n      }\n      exchangeCurrency {\n        id\n        name\n        code\n        icon\n      }\n      company {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      contact {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n          config {\n            profileUrl\n          }\n        }\n      }\n      stage {\n        id\n        name\n        order\n      }\n      pipeline {\n        id\n        name\n        stages {\n          id\n          name\n          order\n          daysInStage\n        }\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n    }\n  }\n`;\n\nexport const DELETE_DEAL = gql`\n  mutation deletedDeals($input: [DeleteDealInput!]!) {\n    deletedDeals(deals: $input) {\n      id\n    }\n  }\n`;\n\nexport const TRASH_DEALS = gql`\n  mutation trashDeals($input: [DeleteDealInput!]!) {\n    trashDeals(deals: $input) {\n      id\n    }\n  }\n`;\n\nexport const RESTORE_DEALS = gql`\n  mutation restoreDeals($input: [DeleteDealInput!]!) {\n    restoreDeals(deals: $input) {\n      id\n    }\n  }\n`;\n\n// se pide todo lo necesario para poder actualizar el deal entero y no se pierda ningun dato\nexport const CHANGE_DEAL_STAGE = gql`\n  mutation ChangeDealStage($input: ChangeStage!) {\n    changeDealStage(input: $input) {\n      id\n      title\n      value\n      status\n      expectedCloseDate\n      dateStatus\n      activity\n      files\n      customForms\n      rottenTime\n      dateEntryIntoStage\n      lostDeal {\n        id\n        lostReason {\n          id\n          reason\n        }\n      }\n      exchangeCurrency {\n        id\n        name\n        code\n        icon\n      }\n      company {\n        id\n        name\n        isDelete\n      }\n      contact {\n        id\n        name\n        isDelete\n      }\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n          config {\n            profileUrl\n          }\n        }\n      }\n      stage {\n        id\n        name\n        order\n        maxDays\n      }\n      pipeline {\n        id\n        name\n        stages {\n          id\n          name\n          order\n          daysInStage\n        }\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      isDelete\n    }\n  }\n`;\n\nexport const CHANGE_DEAL_PIPELINE = gql`\n  mutation changeDealPipeline($input: changePipelineInput!) {\n    changeDealPipeline(input: $input) {\n      id\n      title\n      value\n      status\n      expectedCloseDate\n      dateStatus\n      activity\n      files\n      customForms\n      rottenTime\n      lostDeal {\n        id\n        lostReason {\n          id\n          reason\n        }\n      }\n      exchangeCurrency {\n        id\n        name\n        code\n        icon\n      }\n      company {\n        id\n        name\n        isDelete\n      }\n      contact {\n        id\n        name\n        isDelete\n      }\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n          config {\n            profileUrl\n          }\n        }\n      }\n      stage {\n        id\n        name\n        order\n      }\n      pipeline {\n        id\n        name\n        stages {\n          id\n          name\n          order\n        }\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      isDelete\n    }\n  }\n`;\n\nexport const CREATE_LOST_REASON = gql`\n  mutation CreateLostReason($input: lostReasonCreateInput!) {\n    createLostReason(lostReasonInput: $input) {\n      id\n      reason\n    }\n  }\n`;\n\nexport const DELETE_LOST_REASON = gql`\n  mutation DeleteLostReason($lostReasonId: ID!) {\n    deleteLostReason(lostReasonId: $lostReasonId) {\n      id\n      reason\n    }\n  }\n`;\n\nexport const UPDATE_LOST_REASON = gql`\n  mutation UpdateLostReason($input: lostReasonUpdateInput!) {\n    updateLostReason(lostReasonInput: $input) {\n      id\n      reason\n    }\n  }\n`;\n\nexport const UPDATE_OWNER_DEALS = gql`\n  mutation assignDeals($dealListAssign: DealListAssign!) {\n    assignDeals(dealListAssign: $dealListAssign)\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const GET_DEALS = gql`\n  query GetDeals($filters: FilterDeals, $importId: ID) {\n    deals(filters: $filters, importId: $importId) {\n      count\n      informationBar {\n        openDeals\n        wonDealsSum\n        predictionSales\n        predictionIncome\n      }\n      list {\n        id\n        title\n        value\n        status\n        expectedCloseDate\n        dateStatus\n        activity\n        files\n        customForms\n        rottenTime\n        changeTime\n        createdAt\n        updatedAt\n        wonTime\n        lostTime\n        customForms\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        dealCounts {\n          files\n          notes\n          emailMessages\n          activities {\n            total\n            done\n            undone\n          }\n        }\n        lostDeal {\n          id\n          lostReason {\n            id\n            reason\n          }\n        }\n        exchangeCurrency {\n          id\n          name\n          code\n          icon\n        }\n        company {\n          id\n          name\n        }\n        contact {\n          id\n          name\n        }\n        owner {\n          id\n          user {\n            name\n            lastName\n          }\n        }\n        stage {\n          id\n          name\n          order\n        }\n        pipeline {\n          id\n          name\n          stages {\n            id\n            name\n            order\n          }\n        }\n        tags {\n          id\n          name\n          color\n          order\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_SEARCH_DEALS = gql`\n  query GetDeals($filters: FilterDeals) {\n    deals(filters: $filters) {\n      count\n      list {\n        id\n        title\n        stage {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        contact {\n          id\n          name\n        }\n        pipeline {\n          id\n          name\n        }\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_DEAL = gql`\n  query getDeal($dealId: ID!) {\n    deal(dealId: $dealId) {\n      id\n      title\n      value\n      status\n      expectedCloseDate\n      dateStatus\n      activity\n      files\n      customForms\n      rottenTime\n      lostDeal {\n        id\n        lostReason {\n          id\n          reason\n        }\n      }\n      exchangeCurrency {\n        id\n        name\n        code\n        icon\n      }\n      company {\n        id\n        name\n        isDelete\n        owner {\n          id\n        }\n      }\n      contact {\n        id\n        name\n        email\n        isDelete\n        owner {\n          id\n        }\n      }\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n          config {\n            profileUrl\n          }\n        }\n      }\n      stage {\n        id\n        name\n        order\n      }\n      pipeline {\n        id\n        name\n        stages {\n          id\n          name\n          order\n          daysInStage\n        }\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      isDelete\n    }\n  }\n`;\n\nexport const GET_DEAL_HISTORY = gql`\n  query getDealHistory($dealId: ID!) {\n    dealHistory: deal(dealId: $dealId) {\n      id\n      title\n      files\n      import {\n        id\n      }\n      activityStream {\n        id\n        flow\n        customs {\n          id\n          label\n        }\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        companies {\n          id\n          name\n        }\n        contacts {\n          id\n          name\n        }\n        stages {\n          id\n          name\n        }\n        pipelines {\n          id\n          name\n        }\n      }\n      notes {\n        id\n        content\n        type\n        userTags {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdAt\n        comments {\n          id\n          comment\n          userTags {\n            id\n          }\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n        }\n      }\n      activities {\n        id\n        title\n        status\n        start\n        end\n        location\n        description\n        deal {\n          id\n          title\n        }\n        contacts {\n          id\n          name\n        }\n        companies {\n          id\n          name\n        }\n        type {\n          id\n          name\n          color\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        notes {\n          id\n          content\n          type\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n          comments {\n            id\n            comment\n            userTags {\n              id\n            }\n            createdBy {\n              id\n              user {\n                id\n                name\n                lastName\n              }\n            }\n            createdAt\n          }\n        }\n        completedDate\n        createdAt\n        isAllDay\n        guests\n      }\n    }\n  }\n`;\n\nexport const GET_LOST_REASONS = gql`\n  query readLostReasons($filters: Filter) {\n    lostReasons(filters: $filters) {\n      id\n      reason\n    }\n  }\n`;\n\nexport const GET_DEALS_TO_ACTIVITY = gql`\n  query getDealsToActivity($filters: FilterDeals) {\n    deals(filters: $filters) {\n      count\n      list {\n        id\n        title\n        pipeline {\n          id\n          name\n        }\n        stage {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const GET_CONTACTS = gql`\n  query getContacts($filters: FilterContacts, $importId: ID) {\n    contacts(filters: $filters, importId: $importId) {\n      count\n      informationBar {\n        totalCount\n        contactsWithOpenDeals\n        contactsWithWonDeals\n      }\n      list {\n        id\n        name\n        email\n        phones\n        isClient\n        socialMedias\n        birthday\n        createdAt\n        updatedAt\n        customForms\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        contactCounts {\n          openDeals\n          closedDeals\n          lostDeals\n          wonDeals\n          emailMessages\n          totalActivities\n          doneActivities\n          undoneActivities\n          files\n          notes\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        tags {\n          id\n          name\n          color\n          order\n        }\n        companies {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_SEARCH_CONTACTS = gql`\n  query getContacts($filters: FilterContacts, $importId: ID) {\n    searchContacts: contacts(filters: $filters, importId: $importId) {\n      list {\n        id\n        name\n        companies {\n          id\n          name\n        }\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACT = gql`\n  query GetContact($contactId: ID!) {\n    contact(contactId: $contactId) {\n      id\n      name\n      email\n      phones\n      isClient\n      socialMedias\n      birthday\n      customForms\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n        }\n      }\n      enterprise {\n        id\n        name\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      companies {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      deals {\n        id\n        title\n        value\n        status\n        contact {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        stage {\n          id\n        }\n        pipeline {\n          id\n          stages {\n            id\n          }\n        }\n        owner {\n          id\n        }\n      }\n      createdAt\n      isDelete\n    }\n  }\n`;\n\nexport const GET_CONTACT_HISTORY = gql`\n  query GetContactHistory($contactId: ID!) {\n    contactHistory: contact(contactId: $contactId) {\n      id\n      name\n      email\n      files\n      import {\n        id\n      }\n      activityEmailStream {\n        id\n        flow\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n      }\n      activityStream {\n        id\n        flow\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        companies {\n          id\n          name\n        }\n        deals {\n          id\n          title\n        }\n        customs {\n          id\n          label\n        }\n      }\n      notes {\n        id\n        content\n        type\n        createdAt\n        userTags {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        comments {\n          id\n          comment\n          createdAt\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n        }\n      }\n      activities {\n        id\n        title\n        status\n        start\n        end\n        location\n        description\n        deal {\n          id\n          title\n        }\n        contacts {\n          id\n          name\n        }\n        companies {\n          id\n          name\n        }\n        type {\n          id\n          name\n          color\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        notes {\n          id\n          content\n          type\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n          comments {\n            id\n            comment\n            userTags {\n              id\n            }\n            createdBy {\n              id\n              user {\n                id\n                name\n                lastName\n              }\n            }\n            createdAt\n          }\n        }\n        completedDate\n        createdAt\n        isAllDay\n        guests\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACTS_TO_EMAIL = gql`\n  query getContactsToEmail($filters: FilterContacts) {\n    contacts(filters: $filters) {\n      list {\n        id\n        name\n        email\n        birthday\n        companies {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACTS_TO_INVITES = gql`\n  query getContactsToInvites($filters: FilterContacts) {\n    contacts(filters: $filters) {\n      list {\n        id\n        name\n        email\n      }\n    }\n  }\n`;\n\nexport const GET_DUPLICATE_CONTACTS = gql`\n  query DuplicateContacts {\n    duplicateContacts {\n      list {\n        id\n        name\n        email\n        phones\n        companies {\n          id\n          name\n        }\n        contactCounts {\n          openDeals\n          totalActivities\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdAt\n      }\n    }\n  }\n`;\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.es/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n    function (string) {\n      var res = maybeCallNative(nativeSearch, this, string);\n      if (res.done) return res.value;\n\n      var rx = anObject(this);\n      var S = String(string);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","// ORDENA PARAMETROS\nexport const UTIL_ORDER = ({\n  // ARRAY DE ELEMENTOS\n  listItems = [],\n  // ACENDENTE O DECENDENTE\n  orderBy = 'ASC',\n  // SI VAS A COMPARARTE DENTRO DE LA PROPIEDAD DE UN OBJETO O NO\n  nextElement = 'none',\n}) => {\n  // RECIBE LOS ELEMENTOS A COMPARAR EL ANTERIOR Y EL SERGUIENTE\n  return listItems.sort((elementBefore, elementAfter) => {\n    // ORDENAMIENTO ASCENDENTE\n    const orderedElementsASC =\n      nextElement === 'none'\n        ? elementBefore - elementAfter\n        : elementBefore[nextElement] - elementAfter[nextElement];\n    // ORDENAMIENTO DESCENDENTE\n    const orderedElementsDESC =\n      nextElement === 'none'\n        ? elementAfter - elementBefore\n        : elementAfter[nextElement] - elementBefore[nextElement];\n    // VALIDA QUE TIPO DE ORDENAMIENTO RETORNARA\n    return orderBy === 'ASC' ? orderedElementsASC : orderedElementsDESC;\n  });\n};\n\n// Receive a date with format 01/12/2020 11:23 and convert to a Date Object\nexport const UTIL_FORMAT_DATE = (itemDate) => {\n  // Divide 01/12/2020 and 11:23\n  const [dateCreated, timeCreated] = itemDate.split(' ');\n  // Divide date on year 2020, month 12, day 01\n  const [year, month, day] = dateCreated.split('/');\n  // Divide time on hour 11 and minute 23\n  const [hour, minute] = timeCreated.split(':');\n  // Return a new Date Object\n  const newDate = new Date(year, month, day, hour, minute);\n  return newDate;\n};\n\nexport const UTIL_ORDER_DATE = ({\n  // ARRAY DE ELEMENTOS\n  listItems = [],\n  // ACENDENTE O DECENDENTE\n  orderBy = 'ASC',\n  // SI VAS A COMPARARTE DENTRO DE LA PROPIEDAD DE UN OBJETO O NO\n  nextElement = 'none',\n}) => {\n  // RECIBE LOS ELEMENTOS A COMPARAR EL ANTERIOR Y EL SERGUIENTE\n  return listItems.sort((elementBefore, elementAfter) => {\n    const formatElementBefore = UTIL_FORMAT_DATE(elementBefore[nextElement]);\n    const formatElementAfter = UTIL_FORMAT_DATE(elementAfter[nextElement]);\n    // ORDENAMIENTO ASCENDENTE\n    switch (orderBy) {\n      case 'ASC':\n        return formatElementAfter - formatElementBefore;\n\n      case 'DESC':\n        return formatElementBefore - formatElementAfter;\n\n      default:\n        return formatElementAfter - formatElementBefore;\n    }\n  });\n};\n","// TODO: use something more complex like timsort?\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    mergeSort(array.slice(0, middle), comparefn),\n    mergeSort(array.slice(middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n  var result = [];\n\n  while (lindex < llength || rindex < rlength) {\n    if (lindex < llength && rindex < rlength) {\n      result.push(comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]);\n    } else {\n      result.push(lindex < llength ? left[lindex++] : right[rindex++]);\n    }\n  } return result;\n};\n\nmodule.exports = mergeSort;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"pb-0\",staticStyle:{\"height\":\"100%\"},attrs:{\"fluid\":\"\"}},[_c('v-row',[_c('v-col',{staticClass:\"px-0 py-0\",attrs:{\"cols\":\"12\"}},[_c('Header',{attrs:{\"item\":_vm.contact,\"typeItem\":_vm.typeItem,\"isLoading\":this.$apollo.queries.contact.loading},on:{\"updateItem\":_vm.updateContact,\"updateHistory\":_vm.updateHistory,\"openModalDeal\":_vm.getForm}})],1),_c('v-col',{staticClass:\"pt-0 pl-0\",attrs:{\"cols\":\"3\"}},[_c('Details',{attrs:{\"item\":_vm.contact,\"typeItem\":_vm.typeItem,\"isLoading\":this.$apollo.queries.contact.loading},on:{\"updateItem\":_vm.updateContact,\"updateHistory\":_vm.updateHistory}}),_c('ListCompanies',{attrs:{\"item\":_vm.contact,\"itemId\":_vm.contact.id,\"ownerId\":_vm.contact.owner ? _vm.contact.owner.id : '',\"typeItem\":_vm.typeItem,\"companiesSelected\":_vm.contact.companies,\"isLoading\":this.$apollo.queries.contact.loading},on:{\"updateItem\":_vm.updateContact,\"updateContactCompany\":_vm.updateContactCompany,\"updateHistory\":_vm.updateHistory}}),_c('ListDeals',{attrs:{\"item\":_vm.contact,\"itemId\":_vm.contact.id,\"ownerId\":_vm.contact.owner ? _vm.contact.owner.id : '',\"typeItem\":_vm.typeItem,\"deals\":_vm.contact.deals || [],\"isLoading\":this.$apollo.queries.contact.loading},on:{\"updateHistory\":_vm.updateHistory,\"updateItem\":_vm.updateContact,\"openModalDeal\":_vm.getForm}})],1),_c('v-col',{staticClass:\"pt-1\",attrs:{\"cols\":\"9\"}},[_c('History',{attrs:{\"item\":_vm.contact,\"itemId\":_vm.contact.id,\"ownerId\":_vm.contact.owner ? _vm.contact.owner.id : '',\"typeItem\":_vm.typeItem,\"itemProfile\":_vm.contactHistory},on:{\"updateHistory\":_vm.updateHistory}})],1),_c('ModalDeal',{attrs:{\"inputs\":_vm.inputsForm,\"modalHandler\":_vm.modalDeal},on:{\"close\":_vm.modalHandlerDeal,\"outData\":_vm.createDeal}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container style=\"height:100%\" fluid class=\"pb-0\">\n    <v-row>\n      <v-col cols=\"12\" class=\"px-0 py-0\">\n        <Header\n          :item=\"contact\"\n          :typeItem=\"typeItem\"\n          :isLoading=\"this.$apollo.queries.contact.loading\"\n          @updateItem=\"updateContact\"\n          @updateHistory=\"updateHistory\"\n          @openModalDeal=\"getForm\"\n        />\n      </v-col>\n      <v-col cols=\"3\" class=\"pt-0 pl-0\">\n        <Details\n          :item=\"contact\"\n          :typeItem=\"typeItem\"\n          :isLoading=\"this.$apollo.queries.contact.loading\"\n          @updateItem=\"updateContact\"\n          @updateHistory=\"updateHistory\"\n        />\n        <ListCompanies\n          :item=\"contact\"\n          :itemId=\"contact.id\"\n          :ownerId=\"contact.owner ? contact.owner.id : ''\"\n          :typeItem=\"typeItem\"\n          :companiesSelected=\"contact.companies\"\n          :isLoading=\"this.$apollo.queries.contact.loading\"\n          @updateItem=\"updateContact\"\n          @updateContactCompany=\"updateContactCompany\"\n          @updateHistory=\"updateHistory\"\n        />\n        <ListDeals\n          :item=\"contact\"\n          :itemId=\"contact.id\"\n          :ownerId=\"contact.owner ? contact.owner.id : ''\"\n          :typeItem=\"typeItem\"\n          :deals=\"contact.deals || []\"\n          :isLoading=\"this.$apollo.queries.contact.loading\"\n          @updateHistory=\"updateHistory\"\n          @updateItem=\"updateContact\"\n          @openModalDeal=\"getForm\"\n        />\n      </v-col>\n      <v-col cols=\"9\" class=\"pt-1\">\n        <History\n          :item=\"contact\"\n          :itemId=\"contact.id\"\n          :ownerId=\"contact.owner ? contact.owner.id : ''\"\n          :typeItem=\"typeItem\"\n          :itemProfile=\"contactHistory\"\n          @updateHistory=\"updateHistory\"\n        />\n      </v-col>\n      <ModalDeal\n        :inputs=\"inputsForm\"\n        :modalHandler=\"modalDeal\"\n        @close=\"modalHandlerDeal\"\n        @outData=\"createDeal\"\n      />\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n// Querys\nimport {\n  GET_CONTACT,\n  GET_CONTACT_HISTORY,\n} from '@/graphql/querys/contactsQuery';\nimport { profilesMixin } from '@/mixins/profilesMixin';\nimport { dealsMixin } from '@/mixins/dealsMixin';\n\nexport default {\n  name: 'Contact',\n  mixins: [profilesMixin, dealsMixin],\n  data() {\n    return {\n      // Init contact\n      typeItem: 'CONTACT',\n      contact: {},\n    };\n  },\n  methods: {\n    updateContact(contactUpdated) {\n      this.contact = contactUpdated;\n    },\n    updateContactCompany(contactUpdates, index) {\n      this.contact.companies[index].name = contactUpdates.name;\n    },\n    addDeal(deal) {\n      this.contact.deals.push(deal);\n    },\n    updateHistory() {\n      this.$apollo.queries.contactHistory.refetch();\n    },\n  },\n  apollo: {\n    contact: {\n      query: GET_CONTACT,\n      fetchPolicy: 'no-cache',\n      variables() {\n        return {\n          // Get id from url params\n          contactId: this.$route.params.id,\n        };\n      },\n    },\n    contactHistory: {\n      query: GET_CONTACT_HISTORY,\n      fetchPolicy: 'no-cache',\n      variables() {\n        return {\n          // Get id from url params\n          contactId: this.$route.params.id,\n        };\n      },\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Contact.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Contact.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Contact.vue?vue&type=template&id=085c4014&\"\nimport script from \"./Contact.vue?vue&type=script&lang=js&\"\nexport * from \"./Contact.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCol,VContainer,VRow})\n","var UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n","import gql from 'graphql-tag';\n\nexport const GET_FORM = gql`\n  query GetForm($type: typeForm!) {\n    getForm: dynamicForms(forForm: $type) {\n      forForm\n      defaultForm {\n        inputs {\n          id\n          type\n          icon\n          label\n          items\n          order\n          keyInput\n          isRequired\n          isMultiple\n        }\n      }\n      customForm {\n        inputs {\n          id\n          type\n          icon\n          label\n          items\n          order\n          isRequired\n          isMultiple\n        }\n      }\n      headers\n    }\n  }\n`;\n\nexport const GET_FORM_EMAIL = gql`\n  query getForm {\n    formContact: dynamicForms(forForm: CONTACT) {\n      defaultForm {\n        inputs {\n          id\n          label\n          keyInput\n        }\n      }\n      customForm {\n        inputs {\n          id\n          label\n        }\n      }\n    }\n    formCompany: dynamicForms(forForm: COMPANY) {\n      defaultForm {\n        inputs {\n          id\n          label\n          keyInput\n        }\n      }\n      customForm {\n        inputs {\n          id\n          label\n        }\n      }\n    }\n    formDeal: dynamicForms(forForm: DEAL) {\n      defaultForm {\n        inputs {\n          id\n          label\n          keyInput\n        }\n      }\n      customForm {\n        inputs {\n          id\n          label\n        }\n      }\n    }\n  }\n`;\n","import { GET_FORM } from '@/graphql/querys/formsQuery';\nimport { UTIL_ORDER } from '@/helpers/utils';\n\nexport const profilesMixin = {\n  components: {\n    // contact and company\n    History: () => import('@/components/profile/History.vue'),\n    Header: () => import('@/components/profile/Header.vue'),\n    Details: () => import('@/components/profile/Details.vue'),\n    ListCompanies: () => import('@/components/profile/ListCompanies.vue'),\n    ListContacts: () => import('@/components/profile/ListContacts.vue'),\n    ListDeals: () => import('@/components/profile/ListDeals.vue'),\n    ModalDeal: () => import('@/components/deals/ModalDeals.vue'),\n    // deal\n    SubHeader: () => import('@/components/deals/SubHeader.vue'),\n    DealCompany: () => import('@/components/profile/DealCompany.vue'),\n    DealContact: () => import('@/components/profile/DealContact.vue'),\n  },\n  watch: {\n    modalDeal(value) {\n      if (value.isOpen) {\n        this.inputsForm = this.inputsForm.map((input) => {\n          if (this.typeItem === 'CONTACT') {\n            if (input.keyInput === 'contact') {\n              input.defaultValue = JSON.parse(JSON.stringify(this.contact)); // eslint-disable-line\n            }\n          } else if (this.typeItem === 'COMPANY') {\n            if (input.keyInput === 'company') {\n              input.defaultValue = JSON.parse(JSON.stringify(this.company)); // eslint-disable-line\n            }\n          }\n          return input;\n        });\n      }\n    },\n  },\n  methods: {\n    getForm() {\n      this.$apollo\n        .query({\n          query: GET_FORM,\n          variables: {\n            type: 'DEAL',\n          },\n        })\n        .then(\n          ({\n            data: {\n              getForm: { customForm, defaultForm },\n            },\n          }) => {\n            const inputs = customForm.inputs\n              ? defaultForm.inputs.concat(customForm.inputs)\n              : defaultForm.inputs;\n            const orderInputs = UTIL_ORDER({\n              listItems: inputs,\n              orderBy: 'ASC',\n              nextElement: 'order',\n            });\n            this.inputsForm = orderInputs;\n            this.modalHandlerDeal({ isOpen: true, isLoading: false });\n          },\n        )\n        .catch(() => {\n          const error =\n            'No se pudo obtener el formulario, intente de nuevo o contacte a soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n  },\n};\n"],"sourceRoot":""}