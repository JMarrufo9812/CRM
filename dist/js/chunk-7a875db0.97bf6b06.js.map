{"version":3,"sources":["webpack:///./node_modules/vuetify/lib/components/VCombobox/VCombobox.js","webpack:///./src/graphql/querys/companiesQuery.js","webpack:///./src/components/fields/FieldSelectCompanySimple.vue?3bfc","webpack:///src/components/fields/FieldSelectCompanySimple.vue","webpack:///./src/components/fields/FieldSelectCompanySimple.vue?3abc","webpack:///./src/components/fields/FieldSelectCompanySimple.vue?97a8","webpack:///./src/components/fields/FieldSelectCompanySimple.vue?402a","webpack:///./node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.js"],"names":["extend","name","props","delimiters","type","Array","default","returnObject","Boolean","data","editingIndex","computed","this","multiple","selectedItems","length","internalSearch","toString","options","hasSlot","call","isFocused","hasDisplayedItems","$slots","hideNoData","methods","val","delimiter","find","d","endsWith","slice","updateTags","updateMenuDimensions","input","genInput","attrs","on","paste","onPaste","item","index","chip","genChipSelection","componentOptions","listeners","dblclick","getText","selectedIndex","onChipInput","e","preventDefault","getMenuIndex","$nextTick","updateSelf","oldVal","autoSelectFirst","onFilteredItemsChanged","keyCode","ctrlKey","home","end","includes","onKeyDown","left","$refs","selectionStart","enter","onEnterDown","changeSelectedIndex","stopPropagation","onTabDown","updateEditing","selectItem","toLocaleLowerCase","internalValue","value","setValue","findIndex","Object","assign","splice","push","searchIsDirty","isUsingSlot","$scopedSlots","selection","hasChips","updateCombobox","menuIndex","itemToSelect","event","_event$clipboardData","pastedItemText","clipboardData","getData","findExistingIndex","clearableCallback","GET_COMPANIES","gql","GET_SEARCH_COMPANIES","GET_COMPANY","GET_COMPANY_HISTORY","GET_COMPANIES_TO_ACTIVITY","GET_DUPLICATE_COMPANIES","render","_vm","_h","$createElement","_c","_self","class","inputProps","staticStyle","readOnly","searchCompanies","list","menuProps","search","isDense","isLoading","changeOnTextField","$event","scopedSlots","_u","key","fn","_v","_s","proxy","ref","selected","_b","staticClass","directives","rawName","expression","model","callback","$$v","company","staticRenderFns","mixins","rulesMixin","isNewCompany","Number","isScrolled","resetHandler","required","watch","undefined","id","$emit","hasSearch","clearValue","apollo","query","fetchPolicy","variables","filters","skip","take","result","component","VChip","VCombobox","VListItem","VListItemContent","VList","VListItemTitle","defaultMenuProps","offsetY","offsetOverflow","transition","allowOverflow","filter","Function","queryText","itemText","indexOf","noFilter","searchInput","String","lazySearch","classes","filteredItems","map","getValue","hideSelected","some","hasItem","selectedItem","isSearching","allItems","text","$_menuProps","contentClass","trim","i","valueComparator","listData","items","virtualizedItems","document","addEventListener","onCopy","select","removeEventListener","blur","isMenuActive","activateMenu","setSearch","setMenuIndex","menu","getTiles","updateDimensions","right","backspace","delete","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","autocomplete","domProps","slot","genInputSlot","role","genSelections","onFocus","isAppendInner","target","badInput","validity","setSelectedItems","selectedValues","_event$clipboardData2","currentItem","currentItemText","setData"],"mappings":"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","file":"js/chunk-7a875db0.97bf6b06.js","sourcesContent":["// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect from '../VSelect/VSelect';\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'; // Utils\n\nimport { keyCodes } from '../../util/helpers';\n/* @vue/component */\n\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => []\n    },\n    returnObject: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: () => ({\n    editingIndex: -1\n  }),\n  computed: {\n    computedCounterValue() {\n      return this.multiple ? this.selectedItems.length : (this.internalSearch || '').toString().length;\n    },\n\n    hasSlot() {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple;\n    },\n\n    isAnyValueAllowed() {\n      return true;\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !!this.$slots['no-data'] && !this.hideNoData;\n    },\n\n    searchIsDirty() {\n      return this.internalSearch != null;\n    }\n\n  },\n  methods: {\n    onInternalSearchChanged(val) {\n      if (val && this.multiple && this.delimiters.length) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d));\n\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length);\n          this.updateTags();\n        }\n      }\n\n      this.updateMenuDimensions();\n    },\n\n    genInput() {\n      const input = VAutocomplete.options.methods.genInput.call(this);\n      delete input.data.attrs.name;\n      input.data.on.paste = this.onPaste;\n      return input;\n    },\n\n    genChipSelection(item, index) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index); // Allow user to update an existing value\n\n      if (this.multiple) {\n        chip.componentOptions.listeners = { ...chip.componentOptions.listeners,\n          dblclick: () => {\n            this.editingIndex = index;\n            this.internalSearch = this.getText(item);\n            this.selectedIndex = -1;\n          }\n        };\n      }\n\n      return chip;\n    },\n\n    onChipInput(item) {\n      VSelect.options.methods.onChipInput.call(this, item);\n      this.editingIndex = -1;\n    },\n\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown(e) {\n      e.preventDefault(); // If has menu index, let v-select-list handle\n\n      if (this.getMenuIndex() > -1) return;\n      this.$nextTick(this.updateSelf);\n    },\n\n    onFilteredItemsChanged(val, oldVal) {\n      if (!this.autoSelectFirst) return;\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal);\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n\n      if (e.ctrlKey || ![keyCodes.home, keyCodes.end].includes(keyCode)) {\n        VSelect.options.methods.onKeyDown.call(this, e);\n      } // If user is at selection index of 0\n      // create a new tag\n\n\n      if (this.multiple && keyCode === keyCodes.left && this.$refs.input.selectionStart === 0) {\n        this.updateSelf();\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e);\n      } // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onTabDown(e) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple && this.internalSearch && this.getMenuIndex() === -1) {\n        e.preventDefault();\n        e.stopPropagation();\n        return this.updateTags();\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e);\n    },\n\n    selectItem(item) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing();\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item); // if selected item contains search value,\n        // remove the search string\n\n        if (this.internalSearch && this.multiple && this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())) {\n          this.internalSearch = null;\n        }\n      }\n    },\n\n    setSelectedItems() {\n      if (this.internalValue == null || this.internalValue === '') {\n        this.selectedItems = [];\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue];\n      }\n    },\n\n    setValue(value) {\n      VSelect.options.methods.setValue.call(this, value != null ? value : this.internalSearch);\n    },\n\n    updateEditing() {\n      const value = this.internalValue.slice();\n      const index = this.selectedItems.findIndex(item => this.getText(item) === this.internalSearch); // If user enters a duplicate text on chip edit,\n      // don't add it, move it to the end of the list\n\n      if (index > -1) {\n        const item = typeof value[index] === 'object' ? Object.assign({}, value[index]) : value[index];\n        value.splice(index, 1);\n        value.push(item);\n      } else {\n        value[this.editingIndex] = this.internalSearch;\n      }\n\n      this.setValue(value);\n      this.editingIndex = -1;\n      this.internalSearch = null;\n    },\n\n    updateCombobox() {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return; // The internal search is not matching\n      // the internal value, update the input\n\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue(); // Reset search if using slot to avoid a double input\n\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips;\n      if (isUsingSlot) this.internalSearch = null;\n    },\n\n    updateSelf() {\n      this.multiple ? this.updateTags() : this.updateCombobox();\n    },\n\n    updateTags() {\n      const menuIndex = this.getMenuIndex(); // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n\n      if (menuIndex < 0 && !this.searchIsDirty || !this.internalSearch) return;\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing();\n      }\n\n      const index = this.selectedItems.findIndex(item => this.internalSearch === this.getText(item)); // If the duplicate item is an object,\n      // copy it, so that it can be added again later\n\n      const itemToSelect = index > -1 && typeof this.selectedItems[index] === 'object' ? Object.assign({}, this.selectedItems[index]) : this.internalSearch; // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n\n      if (index > -1) {\n        const internalValue = this.internalValue.slice();\n        internalValue.splice(index, 1);\n        this.setValue(internalValue);\n      } // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n\n\n      if (menuIndex > -1) return this.internalSearch = null;\n      this.selectItem(itemToSelect);\n      this.internalSearch = null;\n    },\n\n    onPaste(event) {\n      var _event$clipboardData;\n\n      if (!this.multiple || this.searchIsDirty) return;\n      const pastedItemText = (_event$clipboardData = event.clipboardData) == null ? void 0 : _event$clipboardData.getData('text/vnd.vuetify.autocomplete.item+plain');\n\n      if (pastedItemText && this.findExistingIndex(pastedItemText) === -1) {\n        event.preventDefault();\n        VSelect.options.methods.selectItem.call(this, pastedItemText);\n      }\n    },\n\n    clearableCallback() {\n      this.editingIndex = -1;\n      VAutocomplete.options.methods.clearableCallback.call(this);\n    }\n\n  }\n});\n//# sourceMappingURL=VCombobox.js.map","import gql from 'graphql-tag';\n\nexport const GET_COMPANIES = gql`\n  query getCompanies($filters: FilterCompanies, $importId: ID) {\n    companies(filters: $filters, importId: $importId) {\n      count\n      informationBar {\n        totalCount\n        companiesWithOpenDeals\n        companiesWithWonDeals\n      }\n      list {\n        id\n        name\n        address\n        website\n        phones\n        socialMedias\n        createdAt\n        updatedAt\n        customForms\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        companyCounts {\n          openDeals\n          closedDeals\n          lostDeals\n          wonDeals\n          emailMessages\n          totalActivities\n          doneActivities\n          undoneActivities\n          files\n          notes\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        tags {\n          id\n          name\n          color\n          order\n        }\n        contacts {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_SEARCH_COMPANIES = gql`\n  query getCompanies($filters: FilterCompanies) {\n    searchCompanies: companies(filters: $filters) {\n      count\n      list {\n        id\n        name\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_COMPANY = gql`\n  query getCompany($companyId: ID!) {\n    company(companyId: $companyId) {\n      id\n      name\n      address\n      website\n      phones\n      customForms\n      socialMedias\n      files\n      isDelete\n      tags {\n        id\n        name\n        color\n        order\n      }\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n        }\n      }\n      contacts {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      deals {\n        id\n        title\n        value\n        status\n        contact {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        stage {\n          id\n        }\n        pipeline {\n          id\n          stages {\n            id\n          }\n        }\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_COMPANY_HISTORY = gql`\n  query getCompanyHistory($companyId: ID!) {\n    companyHistory: company(companyId: $companyId) {\n      id\n      name\n      files\n      import {\n        id\n      }\n      activityStream {\n        id\n        flow\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        contacts {\n          id\n          name\n        }\n        deals {\n          id\n          title\n        }\n        customs {\n          id\n          label\n        }\n      }\n      notes {\n        id\n        content\n        type\n        userTags {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        comments {\n          id\n          comment\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdAt\n      }\n      activities {\n        id\n        title\n        status\n        start\n        end\n        location\n        description\n        deal {\n          id\n          title\n        }\n        contacts {\n          id\n          name\n        }\n        companies {\n          id\n          name\n        }\n        type {\n          id\n          name\n          color\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        notes {\n          id\n          content\n          type\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n          comments {\n            id\n            comment\n            userTags {\n              id\n            }\n            createdBy {\n              id\n              user {\n                id\n                name\n                lastName\n              }\n            }\n            createdAt\n          }\n        }\n        completedDate\n        createdAt\n        isAllDay\n        guests\n      }\n    }\n  }\n`;\n\nexport const GET_COMPANIES_TO_ACTIVITY = gql`\n  query getCompaniesToActivity($filters: FilterCompanies) {\n    companies(filters: $filters) {\n      count\n      list {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const GET_DUPLICATE_COMPANIES = gql`\n  query DuplicateCompanies {\n    duplicateCompanies {\n      list {\n        id\n        name\n        address\n        contacts {\n          id\n          name\n        }\n        companyCounts {\n          openDeals\n          totalActivities\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdAt\n      }\n    }\n  }\n`;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-combobox',{class:[_vm.inputProps ? _vm.inputProps.class : ''],staticStyle:{\"width\":\"50%\"},attrs:{\"readonly\":_vm.readOnly,\"items\":_vm.searchCompanies.list,\"menu-props\":_vm.menuProps,\"search-input\":_vm.search,\"item-value\":\"id\",\"item-text\":\"name\",\"label\":\"Empresa\",\"hide-details\":\"auto\",\"prepend-icon\":\"mdi-domain\",\"dense\":_vm.inputProps ? _vm.inputProps.isDense : false,\"outlined\":\"\",\"clearable\":\"\",\"full-width\":\"\",\"hide-selected\":\"\",\"persistent-hint\":\"\",\"maxlength\":\"50\",\"loading\":_vm.isLoading,\"hide-no-data\":_vm.isLoading},on:{\"change\":_vm.changeOnTextField,\"update:searchInput\":function($event){_vm.search=$event},\"update:search-input\":function($event){_vm.search=$event}},scopedSlots:_vm._u([{key:\"no-data\",fn:function(){return [_c('v-list-item',[_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\" presiona el botón \"),_c('kbd',[_vm._v(\"enter\")]),_vm._v(\" para crear a \"),_c('strong',[_vm._v(_vm._s(_vm.search))])])],1)],1)]},proxy:true},{key:\"item\",fn:function(ref){\nvar index = ref.index;\nvar item = ref.item;\nreturn [_c('span',{key:index},[_vm._v(\" \"+_vm._s(item.name)+\" \")])]}},{key:\"selection\",fn:function(ref){\nvar attrs = ref.attrs;\nvar item = ref.item;\nvar selected = ref.selected;\nreturn [_c('span',_vm._b({staticClass:\"text-truncate\",attrs:{\"input-value\":selected}},'span',attrs,false),[_vm._v(\" \"+_vm._s(item.name ? item.name : item)+\" \")])]}},{key:\"append\",fn:function(){return [_c('v-chip',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isNewCompany),expression:\"isNewCompany\"}],attrs:{\"x-small\":\"\",\"color\":\"success\"}},[_vm._v(\" Nuevo \")])]},proxy:true}]),model:{value:(_vm.company),callback:function ($$v) {_vm.company=$$v},expression:\"company\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-combobox\n    v-model=\"company\"\n    @change=\"changeOnTextField\"\n    :readonly=\"readOnly\"\n    :items=\"searchCompanies.list\"\n    :menu-props=\"menuProps\"\n    :search-input.sync=\"search\"\n    item-value=\"id\"\n    item-text=\"name\"\n    label=\"Empresa\"\n    hide-details=\"auto\"\n    prepend-icon=\"mdi-domain\"\n    :class=\"[inputProps ? inputProps.class : '']\"\n    :dense=\"inputProps ? inputProps.isDense : false\"\n    style=\"width: 50%\"\n    outlined\n    clearable\n    full-width\n    hide-selected\n    persistent-hint\n    maxlength=\"50\"\n    :loading=\"isLoading\"\n    :hide-no-data=\"isLoading\"\n  >\n    <template v-slot:no-data>\n      <v-list-item>\n        <v-list-item-content>\n          <v-list-item-title>\n            presiona el botón\n            <kbd>enter</kbd>\n            para crear a\n            <strong>{{ search }}</strong>\n          </v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </template>\n    <template v-slot:item=\"{ index, item }\">\n      <span :key=\"index\">\n        {{ item.name }}\n      </span>\n    </template>\n    <template v-slot:selection=\"{ attrs, item, selected }\">\n      <span class=\"text-truncate\" v-bind=\"attrs\" :input-value=\"selected\">\n        {{ item.name ? item.name : item }}\n      </span>\n    </template>\n    <template v-slot:append>\n      <v-chip v-show=\"isNewCompany\" x-small color=\"success\">\n        Nuevo\n      </v-chip>\n    </template>\n  </v-combobox>\n</template>\n\n<script>\nimport { rulesMixin } from '@/mixins/rulesMixin';\nimport { GET_SEARCH_COMPANIES } from '@/graphql/querys/companiesQuery';\n\nexport default {\n  name: 'FieldSelectCompanySimple',\n  mixins: [rulesMixin],\n  data() {\n    return {\n      search: '',\n      company: '',\n      searchCompanies: {},\n      isNewCompany: false,\n      isLoading: false,\n    };\n  },\n  props: {\n    index: {\n      type: Number,\n    },\n    isScrolled: {\n      type: Boolean,\n      default: false,\n    },\n    resetHandler: {\n      type: Boolean,\n      default: false,\n    },\n    inputProps: {\n      type: Object,\n      required: false,\n    },\n  },\n  watch: {\n    search(value) {\n      if (value && value.length > 2) {\n        this.isLoading = true;\n      } else {\n        this.isLoading = false;\n      }\n    },\n    company(value) {\n      if (value) {\n        this.isNewCompany = value.id === undefined;\n        this.$emit(\n          'outData',\n          this.index,\n          value.id ? { id: value.id } : { name: value },\n        );\n      } else if (!value) {\n        this.isNewCompany = false;\n        this.$emit('deleteData', this.index);\n      }\n    },\n    resetHandler(value) {\n      if (value) {\n        this.company = '';\n      }\n    },\n  },\n  computed: {\n    hasSearch() {\n      if (\n        this.search !== null &&\n        this.search !== undefined &&\n        this.search !== ''\n      ) {\n        return this.search.length > 2;\n      }\n      return false;\n    },\n    // Hide the submenu when search is empty\n    menuProps() {\n      return this.isScrolled || !this.search ? { value: false } : {};\n    },\n    readOnly() {\n      if (\n        this.company === null ||\n        this.company === undefined ||\n        this.company === ''\n      ) {\n        return false;\n      }\n      return true;\n    },\n  },\n  methods: {\n    changeOnTextField() {\n      this.$emit('scrolled', false);\n    },\n    clearValue() {\n      this.company = '';\n      this.isNewCompany = true;\n    },\n  },\n  apollo: {\n    searchCompanies: {\n      query: GET_SEARCH_COMPANIES,\n      fetchPolicy: 'no-cache',\n      variables() {\n        return {\n          filters: {\n            search: this.search,\n            skip: 0,\n            take: 10,\n          },\n        };\n      },\n      skip() {\n        return !this.hasSearch;\n      },\n      result() {\n        this.isLoading = false;\n      },\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '{ .no-icon .full-width } from ../../../../scss/components/fields';\n</style>\n","import mod from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./FieldSelectCompanySimple.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./FieldSelectCompanySimple.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FieldSelectCompanySimple.vue?vue&type=template&id=edb36e08&scoped=true&\"\nimport script from \"./FieldSelectCompanySimple.vue?vue&type=script&lang=js&\"\nexport * from \"./FieldSelectCompanySimple.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FieldSelectCompanySimple.vue?vue&type=style&index=0&id=edb36e08&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"edb36e08\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCombobox } from 'vuetify/lib/components/VCombobox';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\nimport { VListItemTitle } from 'vuetify/lib/components/VList';\ninstallComponents(component, {VChip,VCombobox,VListItem,VListItemContent,VListItemTitle})\n","export * from \"-!../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./FieldSelectCompanySimple.vue?vue&type=style&index=0&id=edb36e08&lang=scss&scoped=true&\"","// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect';\nimport VTextField from '../VTextField/VTextField'; // Utilities\n\nimport mergeData from '../../util/mergeData';\nimport { getObjectValueByPath, getPropertyFromItem, keyCodes } from '../../util/helpers';\nconst defaultMenuProps = { ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n};\n/* @vue/component */\n\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    },\n    filter: {\n      type: Function,\n      default: (item, queryText, itemText) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String\n    }\n  },\n\n  data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      };\n    },\n\n    computedItems() {\n      return this.filteredItems;\n    },\n\n    selectedValues() {\n      return this.selectedItems.map(item => this.getValue(item));\n    },\n\n    hasDisplayedItems() {\n      return this.hideSelected ? this.filteredItems.some(item => !this.hasItem(item)) : this.filteredItems.length > 0;\n    },\n\n    currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n\n    filteredItems() {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText);\n        const text = value != null ? String(value) : '';\n        return this.filter(item, String(this.internalSearch), text);\n      });\n    },\n\n    internalSearch: {\n      get() {\n        return this.lazySearch;\n      },\n\n      set(val) {\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val;\n          this.$emit('update:search-input', val);\n        }\n      }\n\n    },\n\n    isAnyValueAllowed() {\n      return false;\n    },\n\n    isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n\n    isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n\n    $_menuProps() {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      props.contentClass = `v-autocomplete__content ${props.contentClass || ''}`.trim();\n      return { ...defaultMenuProps,\n        ...props\n      };\n    },\n\n    searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n\n    selectedItem() {\n      if (this.multiple) return null;\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue));\n      });\n    },\n\n    listData() {\n      const data = VSelect.options.computed.listData.call(this);\n      data.props = { ...data.props,\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      };\n      return data;\n    }\n\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n\n    isFocused(val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy);\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        document.removeEventListener('copy', this.onCopy);\n        this.blur();\n        this.updateSelf();\n      }\n    },\n\n    isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = null;\n    },\n\n    items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n\n    searchInput(val) {\n      this.lazySearch = val;\n    },\n\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n\n  created() {\n    this.setSearch();\n  },\n\n  destroyed() {\n    document.removeEventListener('copy', this.onCopy);\n  },\n\n  methods: {\n    onFilteredItemsChanged(val, oldVal) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return;\n      this.setMenuIndex(-1);\n      this.$nextTick(() => {\n        if (!this.internalSearch || val.length !== 1 && !this.autoSelectFirst) return;\n        this.$refs.menu.getTiles();\n        this.setMenuIndex(0);\n      });\n    },\n\n    onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n\n    updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n\n    changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem();\n      }\n    },\n\n    deleteCurrentItem() {\n      const curIndex = this.selectedIndex;\n      const curItem = this.selectedItems[curIndex]; // Do nothing if input or item is disabled\n\n      if (!this.isInteractive || this.getDisabled(curItem)) return;\n      const lastIndex = this.selectedItems.length - 1; // Select the last item if\n      // there is no selection\n\n      if (this.selectedIndex === -1 && lastIndex !== 0) {\n        this.selectedIndex = lastIndex;\n        return;\n      }\n\n      const length = this.selectedItems.length;\n      const nextIndex = curIndex !== length - 1 ? curIndex : curIndex - 1;\n      const nextItem = this.selectedItems[nextIndex];\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null);\n      } else {\n        this.selectItem(curItem);\n      }\n\n      this.selectedIndex = nextIndex;\n    },\n\n    clearableCallback() {\n      this.internalSearch = null;\n      VSelect.options.methods.clearableCallback.call(this);\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data = mergeData(input.data, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data, 'attrs.autocomplete', 'off')\n        },\n        domProps: {\n          value: this.internalSearch\n        }\n      });\n      return input;\n    },\n\n    genInputSlot() {\n      const slot = VSelect.options.methods.genInputSlot.call(this);\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n\n    genSelections() {\n      return this.hasSlot || this.multiple ? VSelect.options.methods.genSelections.call(this) : [];\n    },\n\n    onClick(e) {\n      if (!this.isInteractive) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      if (!this.isAppendInner(e.target)) this.activateMenu();\n    },\n\n    onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      const target = e.target;\n      const value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n\n      if (e.ctrlKey || ![keyCodes.home, keyCodes.end].includes(keyCode)) {\n        VSelect.options.methods.onKeyDown.call(this, e);\n      } // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onSpaceDown(e) {},\n\n    onTabDown(e) {\n      VSelect.options.methods.onTabDown.call(this, e);\n      this.updateSelf();\n    },\n\n    onUpDown(e) {\n      // Prevent screen from scrolling\n      e.preventDefault(); // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n\n      this.activateMenu();\n    },\n\n    selectItem(item) {\n      VSelect.options.methods.selectItem.call(this, item);\n      this.setSearch();\n    },\n\n    setSelectedItems() {\n      VSelect.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n      if (!this.isFocused) this.setSearch();\n    },\n\n    setSearch() {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (!this.multiple || !this.internalSearch || !this.isMenuActive) {\n          this.internalSearch = !this.selectedItems.length || this.multiple || this.hasSlot ? null : this.getText(this.selectedItem);\n        }\n      });\n    },\n\n    updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n\n      if (!this.multiple && !this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n\n    hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n\n    onCopy(event) {\n      var _event$clipboardData, _event$clipboardData2;\n\n      if (this.selectedIndex === -1) return;\n      const currentItem = this.selectedItems[this.selectedIndex];\n      const currentItemText = this.getText(currentItem);\n      (_event$clipboardData = event.clipboardData) == null ? void 0 : _event$clipboardData.setData('text/plain', currentItemText);\n      (_event$clipboardData2 = event.clipboardData) == null ? void 0 : _event$clipboardData2.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n\n  }\n});\n//# sourceMappingURL=VAutocomplete.js.map"],"sourceRoot":""}