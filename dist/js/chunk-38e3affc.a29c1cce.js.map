{"version":3,"sources":["webpack:///./src/views/Companies.vue?b284","webpack:///src/views/Companies.vue","webpack:///./src/views/Companies.vue?c036","webpack:///./src/views/Companies.vue?abad","webpack:///./src/mixins/mergeDuplicatesMixin.js","webpack:///./src/graphql/querys/contactsQuery.js","webpack:///./src/graphql/querys/companiesQuery.js","webpack:///./src/views/Companies.vue?4b8f"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","attrs","staticClass","_v","_s","title","$route","query","filterId","recyclebin","_e","model","value","callback","$$v","searchCompany","expression","updateData","formatHeaders","on","updateSelectCompanies","$event","updateHeaders","updateCompaniesShow","updateInformationBar","scopedSlots","_u","key","fn","ref","onMenu","onTooltip","_g","Object","assign","viewInfo","type","headers","getForm","$can","FUSE","PERMISSIONS_COMPANIES","getDuplicateCompanies","EXPORT","modalHandlerExport","isOpen","$router","push","path","BULK_DELETE","PERMISSIONS_ADMIN","_b","directives","name","rawName","companiesSelected","length","trashCompanyConfirmation","deleteCompanyConfirmation","restoreCompaniesConfirmation","isOpenMenuOwner","isLoading","typeItem","changeOwnerSuccess","changeOwnerError","TO_ASSIGN","attrsTooltip","proxy","customFilters","actionsHandler","filterSelected","isFilterSelected","modalHandlerCompany","IMPORT","modalHandlerImport","goToAllCompanies","informationBar","totalCount","companiesWithOpenDeals","companiesWithWonDeals","modalError","modalHandlerError","inputsForm","modalCompany","createCompany","modalFilter","outDataFilterHandler","modalHandlerFilter","modalMergeDuplicates","duplicateList","correctDuplicate","modalHandlerMergeDuplicates","companies","modalExport","modalImport","modalDelete","modalHandlerDelete","confirmHandler","modalRestore","restoreCompanies","modalHandlerRestore","snackbar","color","snackbarHandler","text","$set","staticRenderFns","components","CompaniesDataTable","ModalCompany","ModalFilter","MenuFilters","ModalCompaniesDuplicate","ListHeaders","ChangeOwner","mixins","data","CREATE","DELETE","menu","watch","listItems","inputs","orderBy","nextElement","computed","methods","error","message","$apollo","nameItem","infoDelete","deleteCompanies","ability","trashCompanies","infoRestore","map","apollo","fetchPolicy","variables","component","VBtn","VCol","VContainer","VIcon","VList","VListItem","VMenu","VRow","VSnackbar","VTextField","VTooltip","mergeDuplicatesMixin","getDuplicateContacts","mutate","mutation","GET_DUPLICATE_CONTACTS","then","duplicateContacts","catch","GET_DUPLICATE_COMPANIES","duplicateCompanies","GET_CONTACTS","gql","GET_SEARCH_CONTACTS","GET_CONTACT","GET_CONTACT_HISTORY","GET_CONTACTS_TO_EMAIL","GET_CONTACTS_TO_INVITES","GET_COMPANIES","GET_SEARCH_COMPANIES","GET_COMPANY","GET_COMPANY_HISTORY","GET_COMPANIES_TO_ACTIVITY"],"mappings":"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","file":"js/chunk-38e3affc.a29c1cce.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticStyle:{\"height\":\"100%\"},attrs:{\"fluid\":\"\"}},[_c('v-row',[_c('v-col',{staticClass:\"header-search\",attrs:{\"cols\":\"8\"}},[_c('p',{staticClass:\"ml-6 my-4\"},[_vm._v(\" \"+_vm._s(_vm.title)+\" \")])]),_c('v-col',{staticClass:\"header-search\",attrs:{\"cols\":\"4\"}},[(!_vm.$route.query.filterId && !_vm.$route.query.recyclebin)?_c('v-text-field',{staticClass:\"py-2 pr-8\",attrs:{\"color\":\"#ffffff\",\"label\":\"Buscar\",\"outlined\":\"\",\"dense\":\"\",\"append-icon\":\"mdi-magnify\",\"hide-details\":\"auto\",\"dark\":true},model:{value:(_vm.searchCompany),callback:function ($$v) {_vm.searchCompany=$$v},expression:\"searchCompany\"}}):_vm._e()],1),_c('v-col',{staticClass:\"pa-0\",attrs:{\"cols\":\"12\"}},[_c('CompaniesDataTable',{attrs:{\"updateData\":_vm.updateData,\"headers\":_vm.formatHeaders,\"searchCompany\":_vm.searchCompany},on:{\"selectCompanies\":_vm.updateSelectCompanies,\"endUpdateData\":function($event){_vm.updateData = false},\"changeHeaderOrder\":_vm.updateHeaders,\"companies\":_vm.updateCompaniesShow,\"informationBar\":_vm.updateInformationBar},scopedSlots:_vm._u([{key:\"top\",fn:function(){return [_c('v-col',{staticClass:\"white py-6 pl-12\",attrs:{\"cols\":\"6\"}},[(!_vm.$route.query.filterId && !_vm.$route.query.recyclebin)?_c('v-menu',{attrs:{\"bottom\":\"\",\"offset-y\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar onMenu = ref.on;\nreturn [_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar onTooltip = ref.on;\nreturn [_c('v-btn',_vm._g({staticClass:\"mr-4\",attrs:{\"outlined\":\"\"}},Object.assign({}, onMenu, onTooltip)),[_c('v-icon',[_vm._v(\"mdi-cog\")])],1)]}}],null,true)},[_c('span',[_vm._v(\"Configuraciones\")])])]}}],null,false,1819942147)},[_c('v-list',{attrs:{\"dense\":\"\"}},[_c('ListHeaders',{attrs:{\"type\":_vm.viewInfo.type,\"headers\":_vm.headers,\"form\":_vm.getForm},on:{\"outData\":_vm.updateHeaders}}),(_vm.$can(_vm.FUSE, _vm.PERMISSIONS_COMPANIES))?_c('v-list-item',{staticClass:\"text-list-menu\",on:{\"click\":_vm.getDuplicateCompanies}},[_c('v-icon',{staticClass:\"mr-2\",attrs:{\"color\":\"primary\"}},[_vm._v(\" mdi-account-switch-outline \")]),_vm._v(\" Buscar duplicados \")],1):_vm._e(),(_vm.$can(_vm.EXPORT, _vm.PERMISSIONS_COMPANIES))?_c('v-list-item',{staticClass:\"text-list-menu\",on:{\"click\":function($event){return _vm.modalHandlerExport({ isOpen: true })}}},[_c('v-icon',{attrs:{\"color\":\"primary\",\"left\":\"\"}},[_vm._v(\" mdi-clipboard-arrow-up-outline \")]),_vm._v(\" Exportar Empresas \")],1):_vm._e(),_c('v-list-item',{staticClass:\"text-list-menu\",on:{\"click\":function($event){return _vm.$router.push({\n                      path: '/companies',\n                      query: { recyclebin: true },\n                    })}}},[_c('v-icon',{staticClass:\"mr-2\",attrs:{\"color\":\"primary\"}},[_vm._v(\" mdi-delete-outline \")]),_vm._v(\" Papelera de reciclaje \")],1)],1)],1):_vm._e(),(_vm.$can(_vm.BULK_DELETE, _vm.PERMISSIONS_ADMIN))?_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n                    var on = ref.on;\n                    var attrs = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.companiesSelected.length >= 1),expression:\"companiesSelected.length >= 1\"}],staticClass:\"mr-2 text-white\",attrs:{\"color\":\"secondary\"},on:{\"click\":function($event){_vm.$route.query.recyclebin\n                      ? _vm.trashCompanyConfirmation()\n                      : _vm.deleteCompanyConfirmation()}}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\"mdi-delete\")])],1)]}}],null,false,379821283)},[_c('span',[_vm._v(\" \"+_vm._s(_vm.$route.query.recyclebin ? 'Eliminar Permanentemente' : 'Mover a papelera')+\" \")])]):_vm._e(),(\n                _vm.$can(_vm.BULK_DELETE, _vm.PERMISSIONS_ADMIN) &&\n                  _vm.$route.query.recyclebin\n              )?_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n              var on = ref.on;\n              var attrs = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.companiesSelected.length >= 1),expression:\"companiesSelected.length >= 1\"}],staticClass:\"mr-2 text-white\",attrs:{\"color\":\"#396A5D\"},on:{\"click\":_vm.restoreCompaniesConfirmation}},'v-btn',attrs,false),on),[_c('v-icon',{attrs:{\"color\":\"white\"}},[_vm._v(\"mdi-restore\")])],1)]}}],null,false,3126916911)},[_c('span',[_vm._v(\"Restaurar\")])]):_vm._e(),(!_vm.$route.query.recyclebin)?_c('ChangeOwner',{attrs:{\"isOpen\":_vm.isOpenMenuOwner,\"isLoading\":_vm.isLoading,\"typeItem\":_vm.typeItem,\"itemsSelected\":_vm.companiesSelected},on:{\"update:isOpen\":function($event){_vm.isOpenMenuOwner=$event},\"update:is-open\":function($event){_vm.isOpenMenuOwner=$event},\"success\":_vm.changeOwnerSuccess,\"error\":_vm.changeOwnerError},scopedSlots:_vm._u([{key:\"activator\",fn:function(){return [(_vm.$can(_vm.TO_ASSIGN, _vm.PERMISSIONS_ADMIN))?_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n              var onTooltip = ref.on;\n              var attrsTooltip = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.companiesSelected.length >= 1),expression:\"companiesSelected.length >= 1\"}],staticClass:\"mr-2\",attrs:{\"color\":\"primary\"},on:{\"click\":function($event){_vm.isOpenMenuOwner = true}}},'v-btn',Object.assign({}, attrsTooltip),false),Object.assign({}, onTooltip)),[_c('v-icon',[_vm._v(\"mdi-account-switch\")])],1)]}}],null,false,2357084742)},[_c('span',[_vm._v(\"Cambiar propietario\")])]):_vm._e()]},proxy:true}],null,false,1146456264)}):_vm._e()],1),_c('v-col',{staticClass:\"d-flex justify-end white py-6 pr-12\",attrs:{\"cols\":\"6\"}},[(!_vm.$route.query.filterId && !_vm.$route.query.recyclebin)?_c('MenuFilters',{attrs:{\"filters\":_vm.customFilters},on:{\"action\":_vm.actionsHandler},scopedSlots:_vm._u([{key:\"text-button\",fn:function(){return [_c('span',[_vm._v(\" \"+_vm._s(_vm.filterSelected.isFilterSelected ? _vm.filterSelected.name : 'Filtros')+\" \")])]},proxy:true}],null,false,1423877413)}):_vm._e(),(!_vm.$route.query.filterId && !_vm.$route.query.recyclebin)?_c('v-menu',{attrs:{\"offset-y\":\"\",\"left\":\"\",\"ransition\":\"scale-transition\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\n              var on = ref.on;\nreturn [_c('v-btn',_vm._g({staticClass:\"ml-4\",attrs:{\"color\":\"secondary\",\"small\":\"\",\"fab\":\"\",\"depressed\":\"\"}},on),[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"mdi-plus\")])],1)]}}],null,false,3407158034)},[_c('v-list',{attrs:{\"dense\":\"\"}},[_c('v-list-item',{staticClass:\"text-list-menu\",on:{\"click\":function($event){return _vm.modalHandlerCompany({ isOpen: true, isLoading: false })}}},[_c('v-icon',{attrs:{\"color\":\"primary\",\"left\":\"\"}},[_vm._v(\"mdi-domain-plus\")]),_vm._v(\" Nueva Empresa \")],1),(_vm.$can(_vm.IMPORT, _vm.PERMISSIONS_COMPANIES))?_c('v-list-item',{staticClass:\"text-list-menu\",on:{\"click\":function($event){return _vm.modalHandlerImport({ isOpen: true })}}},[_c('v-icon',{attrs:{\"color\":\"primary\",\"left\":\"\"}},[_vm._v(\" mdi-clipboard-arrow-down-outline \")]),_vm._v(\" Importar Empresas \")],1):_vm._e()],1)],1):_vm._e(),(_vm.$route.query.filterId || _vm.$route.query.recyclebin)?_c('v-btn',{staticClass:\"mr-2\",attrs:{\"outlined\":\"\"},on:{\"click\":_vm.goToAllCompanies}},[_vm._v(\" Ver todas las empresas \")]):_vm._e()],1)]},proxy:true}])})],1),(!_vm.$route.query.recyclebin && _vm.informationBar.totalCount)?_c('v-col',{staticClass:\"d-inline-flex white mt-10 pl-12 pt-8\",attrs:{\"cols\":\"12\"}},[_c('div',{staticClass:\"d-inline-flex mr-12\"},[_c('p',{staticClass:\"mr-10 footer-title\"},[_vm._v(\"Total\")]),_c('p',{staticClass:\"footer-info\"},[_vm._v(_vm._s(_vm.informationBar.totalCount))])]),_c('div',{staticClass:\"d-inline-flex mr-12\"},[_c('p',{staticClass:\"footer-title-info mr-4\"},[_vm._v(\"Con tratos abiertos\")]),_c('p',{staticClass:\"footer-info\"},[_vm._v(_vm._s(_vm.informationBar.companiesWithOpenDeals))])]),_c('div',{staticClass:\"d-inline-flex mr-12\"},[_c('p',{staticClass:\"footer-title-info mr-4\"},[_vm._v(\"Con tratos ganados\")]),_c('p',{staticClass:\"footer-info\"},[_vm._v(_vm._s(_vm.informationBar.companiesWithWonDeals))])])]):_vm._e()],1),_c('BaseModalError',{attrs:{\"modalHandler\":_vm.modalError},on:{\"close\":_vm.modalHandlerError}}),_c('ModalCompany',{attrs:{\"inputs\":_vm.inputsForm,\"modalHandler\":_vm.modalCompany},on:{\"close\":_vm.modalHandlerCompany,\"outData\":_vm.createCompany}}),_c('ModalFilter',{attrs:{\"modalHandler\":_vm.modalFilter,\"type\":_vm.viewInfo},on:{\"outData\":_vm.outDataFilterHandler,\"close\":_vm.modalHandlerFilter}}),_c('ModalCompaniesDuplicate',{attrs:{\"modalHandler\":_vm.modalMergeDuplicates,\"companies\":_vm.duplicateList},on:{\"correctDuplicate\":_vm.correctDuplicate,\"close\":_vm.modalHandlerMergeDuplicates}}),_c('ModalExportData',{attrs:{\"typeItems\":_vm.viewInfo,\"items\":_vm.companies,\"headers\":_vm.formatHeaders,\"modalHandler\":_vm.modalExport},on:{\"close\":_vm.modalHandlerExport}}),_c('ModalImportData',{attrs:{\"typeItems\":_vm.viewInfo,\"modalHandler\":_vm.modalImport,\"form\":_vm.getForm},on:{\"close\":_vm.modalHandlerImport}}),_c('BaseModalDelete',{attrs:{\"modalHandler\":_vm.modalDelete},on:{\"cancel\":_vm.modalHandlerDelete,\"confirm\":_vm.confirmHandler}}),_c('BaseModalRestore',{attrs:{\"modalHandler\":_vm.modalRestore},on:{\"confirm\":_vm.restoreCompanies,\"cancel\":_vm.modalHandlerRestore}}),_c('v-snackbar',{attrs:{\"color\":_vm.snackbar.color,\"timeout\":5000},scopedSlots:_vm._u([{key:\"action\",fn:function(){return [_c('v-btn',{attrs:{\"text\":\"\"},on:{\"click\":function($event){return _vm.snackbarHandler({ isOpen: false, color: '', text: '' })}}},[_vm._v(\" Cerrar \")])]},proxy:true}]),model:{value:(_vm.snackbar.isOpen),callback:function ($$v) {_vm.$set(_vm.snackbar, \"isOpen\", $$v)},expression:\"snackbar.isOpen\"}},[_vm._v(\" \"+_vm._s(_vm.snackbar.text)+\" \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container fluid style=\"height:100%\">\n    <v-row>\n      <v-col cols=\"8\" class=\"header-search\">\n        <p class=\"ml-6 my-4\">\n          {{ title }}\n        </p>\n      </v-col>\n      <!-- search input -->\n      <v-col cols=\"4\" class=\"header-search\">\n        <v-text-field\n          v-if=\"!$route.query.filterId && !$route.query.recyclebin\"\n          v-model=\"searchCompany\"\n          color=\"#ffffff\"\n          label=\"Buscar\"\n          outlined\n          dense\n          append-icon=\"mdi-magnify\"\n          hide-details=\"auto\"\n          class=\"py-2 pr-8\"\n          :dark=\"true\"\n        ></v-text-field>\n      </v-col>\n      <!-- tabla -->\n      <v-col cols=\"12\" class=\"pa-0\">\n        <CompaniesDataTable\n          :updateData=\"updateData\"\n          :headers=\"formatHeaders\"\n          :searchCompany=\"searchCompany\"\n          @selectCompanies=\"updateSelectCompanies\"\n          @endUpdateData=\"updateData = false\"\n          @changeHeaderOrder=\"updateHeaders\"\n          @companies=\"updateCompaniesShow\"\n          @informationBar=\"updateInformationBar\"\n        >\n          <template #top>\n            <v-col cols=\"6\" class=\"white py-6 pl-12\">\n              <!-- Menu de configuraciones -->\n              <v-menu\n                v-if=\"!$route.query.filterId && !$route.query.recyclebin\"\n                bottom\n                offset-y\n              >\n                <template v-slot:activator=\"{ on: onMenu }\">\n                  <v-tooltip bottom>\n                    <template #activator=\"{ on: onTooltip }\">\n                      <v-btn\n                        class=\"mr-4\"\n                        outlined\n                        v-on=\"{ ...onMenu, ...onTooltip }\"\n                      >\n                        <v-icon>mdi-cog</v-icon>\n                      </v-btn>\n                    </template>\n                    <span>Configuraciones</span>\n                  </v-tooltip>\n                </template>\n                <v-list dense>\n                  <ListHeaders\n                    :type=\"viewInfo.type\"\n                    :headers=\"headers\"\n                    :form=\"getForm\"\n                    @outData=\"updateHeaders\"\n                  />\n                  <v-list-item\n                    class=\"text-list-menu\"\n                    v-if=\"$can(FUSE, PERMISSIONS_COMPANIES)\"\n                    @click=\"getDuplicateCompanies\"\n                  >\n                    <v-icon color=\"primary\" class=\"mr-2\">\n                      mdi-account-switch-outline\n                    </v-icon>\n                    Buscar duplicados\n                  </v-list-item>\n\n                  <v-list-item\n                    class=\"text-list-menu\"\n                    v-if=\"$can(EXPORT, PERMISSIONS_COMPANIES)\"\n                    @click=\"modalHandlerExport({ isOpen: true })\"\n                  >\n                    <v-icon color=\"primary\" left>\n                      mdi-clipboard-arrow-up-outline\n                    </v-icon>\n                    Exportar Empresas\n                  </v-list-item>\n                  <v-list-item\n                    class=\"text-list-menu\"\n                    @click=\"\n                      $router.push({\n                        path: '/companies',\n                        query: { recyclebin: true },\n                      })\n                    \"\n                  >\n                    <v-icon color=\"primary\" class=\"mr-2\">\n                      mdi-delete-outline\n                    </v-icon>\n                    Papelera de reciclaje\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n              <!-- Boton de eliminar -->\n              <v-tooltip bottom v-if=\"$can(BULK_DELETE, PERMISSIONS_ADMIN)\">\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    v-show=\"companiesSelected.length >= 1\"\n                    @click=\"\n                      $route.query.recyclebin\n                        ? trashCompanyConfirmation()\n                        : deleteCompanyConfirmation()\n                    \"\n                    class=\"mr-2 text-white\"\n                    color=\"secondary\"\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                  >\n                    <v-icon>mdi-delete</v-icon>\n                  </v-btn>\n                </template>\n                <span>\n                  {{\n                    $route.query.recyclebin\n                      ? 'Eliminar Permanentemente'\n                      : 'Mover a papelera'\n                  }}\n                </span>\n              </v-tooltip>\n              <!-- Boton de restaurar -->\n              <v-tooltip\n                bottom\n                v-if=\"\n                  $can(BULK_DELETE, PERMISSIONS_ADMIN) &&\n                    $route.query.recyclebin\n                \"\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    v-show=\"companiesSelected.length >= 1\"\n                    @click=\"restoreCompaniesConfirmation\"\n                    class=\"mr-2 text-white\"\n                    color=\"#396A5D\"\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                  >\n                    <v-icon color=\"white\">mdi-restore</v-icon>\n                  </v-btn>\n                </template>\n                <span>Restaurar</span>\n              </v-tooltip>\n              <!-- Botón de cambiar propietario -->\n              <ChangeOwner\n                v-if=\"!$route.query.recyclebin\"\n                :isOpen.sync=\"isOpenMenuOwner\"\n                :isLoading=\"isLoading\"\n                :typeItem=\"typeItem\"\n                :itemsSelected=\"companiesSelected\"\n                @success=\"changeOwnerSuccess\"\n                @error=\"changeOwnerError\"\n              >\n                <template #activator>\n                  <v-tooltip bottom v-if=\"$can(TO_ASSIGN, PERMISSIONS_ADMIN)\">\n                    <template\n                      v-slot:activator=\"{ on: onTooltip, attrs: attrsTooltip }\"\n                    >\n                      <v-btn\n                        v-show=\"companiesSelected.length >= 1\"\n                        color=\"primary\"\n                        class=\"mr-2\"\n                        v-bind=\"{ ...attrsTooltip }\"\n                        v-on=\"{ ...onTooltip }\"\n                        @click=\"isOpenMenuOwner = true\"\n                      >\n                        <v-icon>mdi-account-switch</v-icon>\n                      </v-btn>\n                    </template>\n                    <span>Cambiar propietario</span>\n                  </v-tooltip>\n                </template>\n              </ChangeOwner>\n            </v-col>\n            <v-col cols=\"6\" class=\"d-flex justify-end white py-6 pr-12\">\n              <!-- Menu de filtros -->\n              <MenuFilters\n                v-if=\"!$route.query.filterId && !$route.query.recyclebin\"\n                :filters=\"customFilters\"\n                @action=\"actionsHandler\"\n              >\n                <template #text-button>\n                  <span>\n                    {{\n                      filterSelected.isFilterSelected\n                        ? filterSelected.name\n                        : 'Filtros'\n                    }}\n                  </span>\n                </template>\n              </MenuFilters>\n              <!-- boton de agregar -->\n              <v-menu\n                v-if=\"!$route.query.filterId && !$route.query.recyclebin\"\n                offset-y\n                left\n                ransition=\"scale-transition\"\n              >\n                <template v-slot:activator=\"{ on }\">\n                  <v-btn\n                    color=\"secondary\"\n                    small\n                    fab\n                    depressed\n                    v-on=\"on\"\n                    class=\"ml-4\"\n                  >\n                    <v-icon dark>mdi-plus</v-icon>\n                  </v-btn>\n                </template>\n                <v-list dense>\n                  <v-list-item\n                    class=\"text-list-menu\"\n                    @click=\"\n                      modalHandlerCompany({ isOpen: true, isLoading: false })\n                    \"\n                  >\n                    <v-icon color=\"primary\" left>mdi-domain-plus</v-icon>\n                    Nueva Empresa\n                  </v-list-item>\n\n                  <v-list-item\n                    class=\"text-list-menu\"\n                    v-if=\"$can(IMPORT, PERMISSIONS_COMPANIES)\"\n                    @click=\"modalHandlerImport({ isOpen: true })\"\n                  >\n                    <v-icon color=\"primary\" left>\n                      mdi-clipboard-arrow-down-outline\n                    </v-icon>\n                    Importar Empresas\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n              <!-- Boton ver todos -->\n              <v-btn\n                v-if=\"$route.query.filterId || $route.query.recyclebin\"\n                @click=\"goToAllCompanies\"\n                class=\"mr-2\"\n                outlined\n              >\n                Ver todas las empresas\n              </v-btn>\n            </v-col>\n          </template>\n        </CompaniesDataTable>\n      </v-col>\n      <!-- footer info -->\n\n      <v-col\n        v-if=\"!$route.query.recyclebin && informationBar.totalCount\"\n        cols=\"12\"\n        class=\"d-inline-flex white mt-10 pl-12 pt-8\"\n      >\n        <div class=\"d-inline-flex mr-12\">\n          <p class=\"mr-10 footer-title\">Total</p>\n          <p class=\"footer-info\">{{ informationBar.totalCount }}</p>\n        </div>\n        <div class=\"d-inline-flex mr-12\">\n          <p class=\"footer-title-info mr-4\">Con tratos abiertos</p>\n          <p class=\"footer-info\">{{ informationBar.companiesWithOpenDeals }}</p>\n        </div>\n        <div class=\"d-inline-flex mr-12\">\n          <p class=\"footer-title-info mr-4\">Con tratos ganados</p>\n          <p class=\"footer-info\">{{ informationBar.companiesWithWonDeals }}</p>\n        </div>\n      </v-col>\n    </v-row>\n    <BaseModalError :modalHandler=\"modalError\" @close=\"modalHandlerError\" />\n    <ModalCompany\n      :inputs=\"inputsForm\"\n      :modalHandler=\"modalCompany\"\n      @close=\"modalHandlerCompany\"\n      @outData=\"createCompany\"\n    />\n    <ModalFilter\n      :modalHandler=\"modalFilter\"\n      :type=\"viewInfo\"\n      @outData=\"outDataFilterHandler\"\n      @close=\"modalHandlerFilter\"\n    />\n    <ModalCompaniesDuplicate\n      :modalHandler=\"modalMergeDuplicates\"\n      :companies=\"duplicateList\"\n      @correctDuplicate=\"correctDuplicate\"\n      @close=\"modalHandlerMergeDuplicates\"\n    />\n    <ModalExportData\n      :typeItems=\"viewInfo\"\n      :items=\"companies\"\n      :headers=\"formatHeaders\"\n      :modalHandler=\"modalExport\"\n      @close=\"modalHandlerExport\"\n    />\n    <ModalImportData\n      :typeItems=\"viewInfo\"\n      :modalHandler=\"modalImport\"\n      :form=\"getForm\"\n      @close=\"modalHandlerImport\"\n    />\n    <BaseModalDelete\n      :modalHandler=\"modalDelete\"\n      @cancel=\"modalHandlerDelete\"\n      @confirm=\"confirmHandler\"\n    />\n    <BaseModalRestore\n      :modalHandler=\"modalRestore\"\n      @confirm=\"restoreCompanies\"\n      @cancel=\"modalHandlerRestore\"\n    />\n    <v-snackbar\n      v-model=\"snackbar.isOpen\"\n      :color=\"snackbar.color\"\n      :timeout=\"5000\"\n    >\n      {{ snackbar.text }}\n      <template v-slot:action>\n        <v-btn\n          text\n          @click=\"snackbarHandler({ isOpen: false, color: '', text: '' })\"\n        >\n          Cerrar\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </v-container>\n</template>\n\n<script>\nimport ChangeOwner from '@/components/deals/ChangeOwner.vue';\n// ability\nimport ability from '@/services/ability';\nimport {\n  CREATE,\n  DELETE,\n  BULK_DELETE,\n  TO_ASSIGN,\n  EXPORT,\n  IMPORT,\n  FUSE,\n} from '@/constants/methods';\nimport {\n  PERMISSIONS_COMPANIES,\n  PERMISSIONS_ADMIN,\n} from '@/constants/permissions';\n// helpers\nimport { UTIL_ORDER } from '@/helpers/utils';\n// graphql\nimport { GET_FORM } from '@/graphql/querys/formsQuery';\nimport {\n  CREATE_COMPANY,\n  DELETE_COMPANIES,\n  TRASH_COMPANIES,\n  RESTORE_COMPANIES,\n} from '@/graphql/mutations/companiesMutations';\nimport { GET_HEADERS } from '@/graphql/querys/headersQuery';\n// mixins\nimport { modalsAlertsMixin } from '@/mixins/alerts/modalsAlertsMixin';\nimport { snackbarMixin } from '@/mixins/alerts/snackbarMixin';\nimport { filtersMixin } from '@/mixins/filtersMixin';\nimport { mergeDuplicatesMixin } from '@/mixins/mergeDuplicatesMixin';\nimport { headersMixin } from '@/mixins/headersMixin';\nimport { exportsMixin } from '@/mixins/exportsMixin';\nimport { importMixin } from '@/mixins/importMixin';\n\nexport default {\n  components: {\n    CompaniesDataTable: () =>\n      import('@/components/companies/CompaniesDataTable.vue'),\n    ModalCompany: () => import('@/components/companies/ModalCompany.vue'),\n    ModalFilter: () => import('@/components/filters/ModalFilter.vue'),\n    MenuFilters: () => import('@/components/filters/MenuFilters.vue'),\n    ModalCompaniesDuplicate: () =>\n      import('@/components/companies/ModalCompaniesDuplicate.vue'),\n    ListHeaders: () => import('@/components/headers/ListHeaders.vue'),\n    ChangeOwner,\n  },\n  mixins: [\n    modalsAlertsMixin,\n    snackbarMixin,\n    filtersMixin,\n    mergeDuplicatesMixin,\n    headersMixin,\n    exportsMixin,\n    importMixin,\n  ],\n  data() {\n    return {\n      typeItem: 'COMPANY',\n      isOpenMenuOwner: false,\n      isLoading: false,\n      viewInfo: { type: 'COMPANY', name: 'Empresas' },\n      CREATE,\n      DELETE,\n      BULK_DELETE,\n      TO_ASSIGN,\n      EXPORT,\n      IMPORT,\n      FUSE,\n      PERMISSIONS_COMPANIES,\n      PERMISSIONS_ADMIN,\n      updateData: false,\n      inputsForm: [],\n      companies: [],\n      informationBar: {},\n      companiesSelected: [],\n      menu: false,\n      searchCompany: '',\n      modalCompany: {\n        isOpen: false,\n        isLoading: false,\n      },\n    };\n  },\n  watch: {\n    // organiza los inputs deacuerdo a su order\n    getForm({ defaultForm, customForm }) {\n      const inputs = customForm.inputs\n        ? defaultForm.inputs.concat(customForm.inputs)\n        : defaultForm.inputs;\n      this.inputsForm = UTIL_ORDER({\n        listItems: inputs,\n        orderBy: 'ASC',\n        nextElement: 'order',\n      });\n    },\n  },\n  computed: {\n    title() {\n      if (this.$route.query.filterId) {\n        return 'Empresas importadas';\n      }\n      if (this.$route.query.recyclebin) {\n        return 'Papelera de empresas';\n      }\n      return 'Todas las empresas';\n    },\n  },\n  methods: {\n    changeOwnerSuccess(message) {\n      this.snackbarHandler({ isOpen: true, color: 'success', text: message });\n      this.companiesSelected = [];\n      this.updateData = true;\n    },\n    changeOwnerError(message) {\n      this.modalHandlerError({\n        isOpen: true,\n        error: message,\n      });\n    },\n    updateInformationBar(informationBar) {\n      this.informationBar = informationBar;\n    },\n    createCompany(input) {\n      this.modalHandlerCompany({ isOpen: true, isLoading: true });\n      this.$apollo\n        .mutate({\n          mutation: CREATE_COMPANY,\n          variables: {\n            input,\n          },\n          update: () => {\n            this.updateData = true;\n            this.modalHandlerCompany({ isOpen: false, isLoading: false });\n          },\n        })\n        // se ejecuta al finalizar la mutacion\n        .finally(() => {\n          // regresamos el valor a false para manejarlo de nuevo en el futuro\n          this.updateData = false;\n          this.snackbarHandler({\n            isOpen: true,\n            color: 'success',\n            text: 'Empresa creada correctamente',\n          });\n        })\n        .catch(() => {\n          const error =\n            'No se pudo crear la empresa, intente de nuevo o contacte a soporte';\n          this.modalHandlerError({ isOpen: true, error });\n          this.modalHandlerCompany({ isOpen: true, isLoading: false });\n        });\n    },\n    deleteCompanyConfirmation() {\n      this.modalHandlerDelete({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          title: '¿Seguro que desea mover a la papelera?',\n          nameItem: 'Las empresas seleccionadas',\n          text: 'serán movidas a la papelera',\n        },\n        infoDelete: {},\n      });\n    },\n    deleteCompanies({ isOpen, isLoading, message, infoDelete }) {\n      if (ability.can(BULK_DELETE, PERMISSIONS_ADMIN)) {\n        this.modalHandlerDelete({ isOpen, isLoading, message, infoDelete });\n        this.$apollo\n          .mutate({\n            mutation: DELETE_COMPANIES,\n            variables: {\n              input: this.companiesSelected,\n            },\n            update: () => {\n              // indicamos que se deve de actualizar la vista de contactos\n              this.updateData = true;\n              // cierra modal de eliminar\n            },\n          })\n          // se ejecuta al finalizar la mutacion\n          .finally(() => {\n            // regresamos el valor a false para manejarlo de nuevo en el futuro\n            this.updateData = false;\n            this.companiesSelected = [];\n            this.modalHandlerDelete({\n              isOpen: false,\n              isLoading,\n              message,\n              infoDelete,\n            });\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Se eliminó correctamente',\n            });\n          })\n          .catch(() => {\n            const error =\n              'No se pudo eliminar las empresas, intente de nuevo o contacte a soporte';\n            this.modalHandlerError({ isOpen: true, error });\n          });\n      }\n    },\n    confirmHandler({ isOpen, isLoading, message, infoDelete }) {\n      if (this.$route.query.recyclebin) {\n        this.trashCompanies({ isOpen, isLoading, message, infoDelete });\n      } else {\n        this.deleteCompanies({ isOpen, isLoading, message, infoDelete });\n      }\n    },\n    trashCompanyConfirmation() {\n      this.modalHandlerDelete({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          nameItem: 'Las empresas seleccionadas',\n          text: 'serán eliminadas permanentemente',\n        },\n        infoDelete: {},\n      });\n    },\n    trashCompanies({ isOpen, isLoading, message, infoDelete }) {\n      if (ability.can(BULK_DELETE, PERMISSIONS_ADMIN)) {\n        this.modalHandlerDelete({ isOpen, isLoading, message, infoDelete });\n        this.$apollo\n          .mutate({\n            mutation: TRASH_COMPANIES,\n            variables: {\n              input: this.companiesSelected,\n            },\n            update: () => {\n              // indicamos que se deve de actualizar la vista de contactos\n              this.updateData = true;\n              // cierra modal de eliminar\n            },\n          })\n          // se ejecuta al finalizar la mutacion\n          .finally(() => {\n            // regresamos el valor a false para manejarlo de nuevo en el futuro\n            this.updateData = false;\n            this.companiesSelected = [];\n            this.modalHandlerDelete({\n              isOpen: false,\n              isLoading,\n              message,\n              infoDelete,\n            });\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Se eliminó correctamente',\n            });\n          })\n          .catch(() => {\n            const error =\n              'No se pudo eliminar las empresas, intente de nuevo o contacte a soporte';\n            this.modalHandlerError({ isOpen: true, error });\n          });\n      }\n    },\n    restoreCompaniesConfirmation() {\n      this.modalHandlerRestore({\n        isOpen: true,\n        isLoading: false,\n        message: {\n          title: '¿Seguro que deseas restaurar?',\n          nameItem: 'Las empresas seleccionadas',\n          text: 'serán restauradas',\n        },\n        infoRestore: {},\n      });\n    },\n    restoreCompanies({ isOpen, isLoading, message, infoRestore }) {\n      if (ability.can(BULK_DELETE, PERMISSIONS_ADMIN)) {\n        this.modalHandlerRestore({\n          isOpen,\n          isLoading,\n          message,\n          infoRestore,\n        });\n        this.$apollo\n          .mutate({\n            mutation: RESTORE_COMPANIES,\n            variables: {\n              input: this.companiesSelected,\n            },\n            update: () => {\n              // indicamos que se deve de actualizar la vista de contactos\n              this.updateData = true;\n              // cierra modal de eliminar\n            },\n          })\n          // se ejecuta al finalizar la mutacion\n          .finally(() => {\n            // regresamos el valor a false para manejarlo de nuevo en el futuro\n            this.updateData = false;\n            this.companiesSelected = [];\n            this.modalHandlerRestore({\n              isOpen: false,\n              isLoading,\n              message,\n              infoRestore,\n            });\n            this.snackbarHandler({\n              isOpen: true,\n              color: 'success',\n              text: 'Se restauró correctamente',\n            });\n          })\n          .catch(() => {\n            const error =\n              'No se pudo restaurar las empresas, intente de nuevo o contacte a soporte';\n            this.modalHandlerError({ isOpen: true, error });\n          });\n      }\n    },\n    updateSelectCompanies(companies) {\n      this.companiesSelected = companies.map(({ id }) => {\n        return { id };\n      });\n    },\n    updateCompaniesShow(companies) {\n      this.companies = companies;\n    },\n    modalHandlerCompany({ isOpen, isLoading }) {\n      this.modalCompany = { isOpen, isLoading };\n    },\n    async goToAllCompanies() {\n      await this.$router.push({ name: 'companies' });\n      this.updateData = true;\n    },\n  },\n  apollo: {\n    getForm: {\n      query: GET_FORM,\n      fetchPolicy: 'no-cache',\n      variables: {\n        type: 'COMPANY',\n      },\n    },\n    headers: {\n      query: GET_HEADERS,\n      variables: {\n        type: 'COMPANIES',\n      },\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '{ .header-search } from ../../../scss/components/header.search';\n@import '{ .text-list-menu  } from ../../../scss/views/companies';\n@import '{ .footer-title, .footer-title-info, .footer-info  } from ../../../scss/components/footer.data.table';\n</style>\n","import mod from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Companies.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Companies.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Companies.vue?vue&type=template&id=84607854&scoped=true&\"\nimport script from \"./Companies.vue?vue&type=script&lang=js&\"\nexport * from \"./Companies.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Companies.vue?vue&type=style&index=0&id=84607854&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"84607854\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VMenu } from 'vuetify/lib/components/VMenu';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSnackbar } from 'vuetify/lib/components/VSnackbar';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VTooltip } from 'vuetify/lib/components/VTooltip';\ninstallComponents(component, {VBtn,VCol,VContainer,VIcon,VList,VListItem,VMenu,VRow,VSnackbar,VTextField,VTooltip})\n","import { GET_DUPLICATE_CONTACTS } from '@/graphql/querys/contactsQuery';\nimport { GET_DUPLICATE_COMPANIES } from '@/graphql/querys/companiesQuery';\n\nexport const mergeDuplicatesMixin = {\n  data() {\n    return {\n      modalMergeDuplicates: {\n        isOpen: false,\n        isLoading: false,\n      },\n      duplicateList: [],\n    };\n  },\n  watch: {\n    modalMergeDuplicates({ isOpen }) {\n      if (!isOpen) this.duplicateList = [];\n    },\n  },\n  methods: {\n    modalHandlerMergeDuplicates({ isOpen, isLoading }) {\n      this.modalMergeDuplicates = { isOpen, isLoading };\n    },\n    correctDuplicate(type, data) {\n      this.updateData = true;\n      this.snackbarHandler({\n        isOpen: true,\n        color: 'success',\n        text: `${type === 'CONTACT' ? 'El contacto' : 'La empresa'} \n        ${data.name} se ha fusionado correctamente`,\n      });\n      if (type === 'CONTACT') {\n        this.getDuplicateContacts();\n      } else {\n        this.getDuplicateCompanies();\n      }\n    },\n    getDuplicateContacts() {\n      this.modalHandlerMergeDuplicates({\n        isOpen: true,\n        isLoading: true,\n      });\n      this.$apollo\n        .mutate({\n          mutation: GET_DUPLICATE_CONTACTS,\n        })\n        .then(({ data: { duplicateContacts } }) => {\n          this.duplicateList = duplicateContacts;\n          this.modalHandlerMergeDuplicates({\n            isOpen: true,\n            isLoading: false,\n          });\n        })\n        .catch(() => {\n          const error =\n            'No se ha podido obtener los contactos duplicados, intente de nuevo o contacte a soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n    getDuplicateCompanies() {\n      this.modalHandlerMergeDuplicates({\n        isOpen: true,\n        isLoading: true,\n      });\n      this.$apollo\n        .mutate({\n          mutation: GET_DUPLICATE_COMPANIES,\n        })\n        .then(({ data: { duplicateCompanies } }) => {\n          this.duplicateList = duplicateCompanies;\n          this.modalHandlerMergeDuplicates({\n            isOpen: true,\n            isLoading: false,\n          });\n        })\n        .catch(() => {\n          const error =\n            'No se ha podido obtener las empresas duplicadas, intente de nuevo o contacte a soporte';\n          this.modalHandlerError({ isOpen: true, error });\n        });\n    },\n  },\n};\n","import gql from 'graphql-tag';\n\nexport const GET_CONTACTS = gql`\n  query getContacts($filters: FilterContacts, $importId: ID) {\n    contacts(filters: $filters, importId: $importId) {\n      count\n      informationBar {\n        totalCount\n        contactsWithOpenDeals\n        contactsWithWonDeals\n      }\n      list {\n        id\n        name\n        email\n        phones\n        isClient\n        socialMedias\n        birthday\n        createdAt\n        updatedAt\n        customForms\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        contactCounts {\n          openDeals\n          closedDeals\n          lostDeals\n          wonDeals\n          emailMessages\n          totalActivities\n          doneActivities\n          undoneActivities\n          files\n          notes\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        tags {\n          id\n          name\n          color\n          order\n        }\n        companies {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_SEARCH_CONTACTS = gql`\n  query getContacts($filters: FilterContacts, $importId: ID) {\n    searchContacts: contacts(filters: $filters, importId: $importId) {\n      list {\n        id\n        name\n        companies {\n          id\n          name\n        }\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACT = gql`\n  query GetContact($contactId: ID!) {\n    contact(contactId: $contactId) {\n      id\n      name\n      email\n      phones\n      isClient\n      socialMedias\n      birthday\n      customForms\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n        }\n      }\n      enterprise {\n        id\n        name\n      }\n      tags {\n        id\n        name\n        color\n        order\n      }\n      companies {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      deals {\n        id\n        title\n        value\n        status\n        contact {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        stage {\n          id\n        }\n        pipeline {\n          id\n          stages {\n            id\n          }\n        }\n        owner {\n          id\n        }\n      }\n      createdAt\n      isDelete\n    }\n  }\n`;\n\nexport const GET_CONTACT_HISTORY = gql`\n  query GetContactHistory($contactId: ID!) {\n    contactHistory: contact(contactId: $contactId) {\n      id\n      name\n      email\n      files\n      import {\n        id\n      }\n      activityEmailStream {\n        id\n        flow\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n      }\n      activityStream {\n        id\n        flow\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        companies {\n          id\n          name\n        }\n        deals {\n          id\n          title\n        }\n        customs {\n          id\n          label\n        }\n      }\n      notes {\n        id\n        content\n        type\n        createdAt\n        userTags {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        comments {\n          id\n          comment\n          createdAt\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n        }\n      }\n      activities {\n        id\n        title\n        status\n        start\n        end\n        location\n        description\n        deal {\n          id\n          title\n        }\n        contacts {\n          id\n          name\n        }\n        companies {\n          id\n          name\n        }\n        type {\n          id\n          name\n          color\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        notes {\n          id\n          content\n          type\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n          comments {\n            id\n            comment\n            userTags {\n              id\n            }\n            createdBy {\n              id\n              user {\n                id\n                name\n                lastName\n              }\n            }\n            createdAt\n          }\n        }\n        completedDate\n        createdAt\n        isAllDay\n        guests\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACTS_TO_EMAIL = gql`\n  query getContactsToEmail($filters: FilterContacts) {\n    contacts(filters: $filters) {\n      list {\n        id\n        name\n        email\n        birthday\n        companies {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACTS_TO_INVITES = gql`\n  query getContactsToInvites($filters: FilterContacts) {\n    contacts(filters: $filters) {\n      list {\n        id\n        name\n        email\n      }\n    }\n  }\n`;\n\nexport const GET_DUPLICATE_CONTACTS = gql`\n  query DuplicateContacts {\n    duplicateContacts {\n      list {\n        id\n        name\n        email\n        phones\n        companies {\n          id\n          name\n        }\n        contactCounts {\n          openDeals\n          totalActivities\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdAt\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const GET_COMPANIES = gql`\n  query getCompanies($filters: FilterCompanies, $importId: ID) {\n    companies(filters: $filters, importId: $importId) {\n      count\n      informationBar {\n        totalCount\n        companiesWithOpenDeals\n        companiesWithWonDeals\n      }\n      list {\n        id\n        name\n        address\n        website\n        phones\n        socialMedias\n        createdAt\n        updatedAt\n        customForms\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        companyCounts {\n          openDeals\n          closedDeals\n          lostDeals\n          wonDeals\n          emailMessages\n          totalActivities\n          doneActivities\n          undoneActivities\n          files\n          notes\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        tags {\n          id\n          name\n          color\n          order\n        }\n        contacts {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_SEARCH_COMPANIES = gql`\n  query getCompanies($filters: FilterCompanies) {\n    searchCompanies: companies(filters: $filters) {\n      count\n      list {\n        id\n        name\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_COMPANY = gql`\n  query getCompany($companyId: ID!) {\n    company(companyId: $companyId) {\n      id\n      name\n      address\n      website\n      phones\n      customForms\n      socialMedias\n      files\n      isDelete\n      tags {\n        id\n        name\n        color\n        order\n      }\n      owner {\n        id\n        user {\n          id\n          name\n          lastName\n        }\n      }\n      contacts {\n        id\n        name\n        owner {\n          id\n        }\n      }\n      deals {\n        id\n        title\n        value\n        status\n        contact {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        stage {\n          id\n        }\n        pipeline {\n          id\n          stages {\n            id\n          }\n        }\n        owner {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_COMPANY_HISTORY = gql`\n  query getCompanyHistory($companyId: ID!) {\n    companyHistory: company(companyId: $companyId) {\n      id\n      name\n      files\n      import {\n        id\n      }\n      activityStream {\n        id\n        flow\n        users {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        contacts {\n          id\n          name\n        }\n        deals {\n          id\n          title\n        }\n        customs {\n          id\n          label\n        }\n      }\n      notes {\n        id\n        content\n        type\n        userTags {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        comments {\n          id\n          comment\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdAt\n      }\n      activities {\n        id\n        title\n        status\n        start\n        end\n        location\n        description\n        deal {\n          id\n          title\n        }\n        contacts {\n          id\n          name\n        }\n        companies {\n          id\n          name\n        }\n        type {\n          id\n          name\n          color\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        notes {\n          id\n          content\n          type\n          userTags {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdBy {\n            id\n            user {\n              id\n              name\n              lastName\n            }\n          }\n          createdAt\n          comments {\n            id\n            comment\n            userTags {\n              id\n            }\n            createdBy {\n              id\n              user {\n                id\n                name\n                lastName\n              }\n            }\n            createdAt\n          }\n        }\n        completedDate\n        createdAt\n        isAllDay\n        guests\n      }\n    }\n  }\n`;\n\nexport const GET_COMPANIES_TO_ACTIVITY = gql`\n  query getCompaniesToActivity($filters: FilterCompanies) {\n    companies(filters: $filters) {\n      count\n      list {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const GET_DUPLICATE_COMPANIES = gql`\n  query DuplicateCompanies {\n    duplicateCompanies {\n      list {\n        id\n        name\n        address\n        contacts {\n          id\n          name\n        }\n        companyCounts {\n          openDeals\n          totalActivities\n        }\n        owner {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdBy {\n          id\n          user {\n            id\n            name\n            lastName\n          }\n        }\n        createdAt\n      }\n    }\n  }\n`;\n","export * from \"-!../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Companies.vue?vue&type=style&index=0&id=84607854&lang=scss&scoped=true&\""],"sourceRoot":""}